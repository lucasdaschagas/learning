/*
 *
 * ADOBE CONFIDENTIAL
 * __________________
 *
 *  Copyright 2020 Adobe
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe.
 */
(function(document, $) {
    'use strict';

    var ui = $(window).adaptTo("foundation-ui");

    $(document).on('foundation-contentloaded', function() {

        var analyticsConfig_create_form = "#acreate-configuration-properties-form";
        var analyticsConfig_properties_form = '#aedit-properties-form';
        var editMode = false;
        var segmentValue = "";
        var reportsuiteValue = "";
        var savePropsButton = $('.granite-ActionGroup');
        var createConfigButton = $('.analyticsConfig-create-btn');

        var isIMSFTEnabled = Granite.Toggles.isEnabled('FT_CQ-4340231');
        if (isIMSFTEnabled){
            var companyField = $('input[name="./company"]');
            var usernameField = $('input[name="./username"]');
            var secretField = $('input[name="./secret"]');
            var serverField = $('input[name="./server"]');

            companyField.parent().hide();
            usernameField.parent().hide();
            secretField.parent().hide();
            serverField.parent().parent().hide();

            usernameField.attr("aria-required", false);
            secretField.attr("aria-required", false);
            serverField.attr("aria-required", false);

            usernameField.val(undefined);
            secretField.val(undefined);
            serverField.val(undefined);

            $('input[name="./connectedWhen"]').val("imsConfigId");
            getImsConfigurations();
        }

        var contentPath = $(analyticsConfig_create_form).data('content-path');
        createConfigButton.prop('disabled', true);

        var save_custom_metrics = contentPath + "/settings/cloudconfigs/analyticsconnector";

        if ($(analyticsConfig_properties_form).length !== 0) {
            savePropsButton.prop('disabled', true);
            $('#analytics-cloudconfiguration-title').prop('disabled', true);

            var request_url = new URLSearchParams(window.location.search).get('item');
            var configSaved = request_url + '/jcr:content';

            var result = $.ajax({
                type: 'GET',
                async: false,
                url: Granite.HTTP.externalize(encodeURI(configSaved) + "/.1.json"),
                cache: false
            });

            if (result.status == 200 && result.responseText != null && result.responseText != "") {
                var nodeProperties = JSON.parse(result.responseText);
                segmentValue = nodeProperties.segment;
                reportsuiteValue = nodeProperties.reportsuites;
            }

            save_custom_metrics = request_url;
        }

        var selectOptions = function(event) {
            $('coral-select[name="./segment"]')[0].items.add({
                value: segmentValue,
                content: {
                    textContent: segmentValue
                }
            });
            $('coral-select[name="./reportsuites"]')[0].items.add({
                value: reportsuiteValue,
                content: {
                    textContent: reportsuiteValue
                }
            });
        }
        $('#aedit-properties-form').one('mouseover', selectOptions);

        $('a[data-foundation-wizard-control-action=\"cancel\"]').attr('href', "/mnt/overlay/cq/analyticsconnector/content/configurations.html/conf");

        var popupAlert = function(message) {
            new Coral.Dialog().set({
                id: 'delErrorDialog',
                variant: 'error',
                header: {
                    innerHTML: Granite.I18n.get('Error')
                },
                content: {
                    innerHTML: '<p>' + message + '</p>'
                },
                footer: {
                    innerHTML: '<button is="coral-button" variant="primary" coral-close size="M">' + Granite.I18n.get('Ok') + '</button>'
                }
            }).show();
        }


        var doConnect = function(event) {

            if (event != null) {
                event.preventDefault();
                event.stopImmediatePropagation();
            }

            var title = $('input[name="./jcr:title"]').val();
            if(!isIMSFTEnabled){
                var company = $('input[name="./company"]').val();
                var username = $('input[name="./username"]').val();
                var secret = $('input[name="./secret"]').val();
                var server = $('input[name="./server"]').val();
            } else{
                var imsConfigId = $('input[name="./imsConfigId"]').val();
                var authentication = $('input[name="./authentication"]').val();
            }


            if (!title) {
                popupAlert(Granite.I18n.get('Please provide the title.'));
                return false;
            }
            if(!isIMSFTEnabled) {
                if (!company) {
                    popupAlert(Granite.I18n.get('Please provide Adobe Analytics Company.'));
                    return false;
                }
                if (!username) {
                    popupAlert(Granite.I18n.get('Please provide Adobe Analytics Username.'));
                    return false;
                }
                if (!secret) {
                    popupAlert(Granite.I18n.get('Please provide Adobe Analytics Shared Secret.'));
                    return false;
                }
                if (!server) {
                    popupAlert(Granite.I18n.get('Please provide Adobe Analytics Data Center.'));
                    return false;
                }
            } else{
                if (!imsConfigId) {
                    popupAlert(Granite.I18n.get('Please provide Adobe Analytics IMS configurations.'));
                    return false;
                }
            }

            var path = $(analyticsConfig_create_form).data("post-url-create");
            if (path == undefined) {
                path = $(analyticsConfig_properties_form).data("post-url-create");
            }

            var postDataConnect = {
                method: "Connect",
                company: company,
                username: username,
                secret: secret,
                server: server,
                authentication: authentication,
                imsConfigId: imsConfigId
            }
            ui.wait();
            $.ajax({
                type: 'post',
                url: Granite.HTTP.externalize(path),
                data: postDataConnect,
                cache: false
            }).done(function(data, textStatus, jqXHR) {
                if (data && !data.error) {
                    if(data.globalCompany){
                        $('input[name="./x-proxy-global-company-id"]').val(data.globalCompany);
                    }
                    if(data.company){
                        $('input[name="./company"]').val(data.company);
                    }
                    //load Reportsuites
                    loadReportsuites(data);

                    //load segments
                    loadSegments(server, company, username, secret, title, authentication, imsConfigId, data.globalCompany);
                    ui.clearWait();

                    $('#analytics-cloudconfiguration-connectbutton').text(Granite.I18n.get('Re-Connect to Analytics'));

                    ui.notify(null, Granite.I18n.get('Connection successful'), 'success');

                    if ($(analyticsConfig_properties_form).length !== 0) {
                        savePropsButton.children().removeAttr('disabled');
                    } else {
                        createConfigButton.prop('disabled', false);
                    }
                } else {
                    ui.clearWait();
                    ui.alert("ERROR", Granite.I18n.get('Connection has failed'), 'error');
                }
            }).fail(function(jqXHR, textStatus, errorThrown) {
                ui.clearWait();
                ui.alert("ERROR", Granite.I18n.get('Error while connecting.'), 'error');
            });


        }
        $('#analytics-cloudconfiguration-connectbutton').on('click', doConnect);

        var loadReportsuites = function(data) {
            var rsValues = data.report_suites;
            var rsSelectComponent = $('coral-select[name="./reportsuites"]')[0];
            if (rsSelectComponent) {
                rsSelectComponent.items.clear();
                if (rsValues) {
                    rsValues.forEach(function(reportsuite, index) {
                        var rsName = reportsuite.site_title;
                        if (isIMSFTEnabled)
                            rsName = reportsuite.name
                        var item = {
                            value: reportsuite.rsid,
                            content: {
                                textContent: rsName
                            }
                        };
                        rsSelectComponent.items.add(item);
                    });

                    if ($(analyticsConfig_properties_form).length !== 0) {
                        var selected = $('#analytics-cloudconfiguration-reportsuites');
                        selected.each(function(id, select) {
                            select.items.getAll().forEach(function(item, id) {
                                if (item.value === reportsuiteValue) {
                                    item.selected = true;
                                }
                            });
                        });
                    }
                } else {
                    ui.alert("ERROR", Granite.I18n.get('Failed to obtain the Report Suites.<br>Reconnect to Adobe Analytics'), 'error');
                }
            }
        }

        var loadSegments = function(datacenter, company, username, secret, title, authentication, imsConfigId, globalCompany) {
            var segmentSelectComponent = $('coral-select[name="./segment"]')[0];
            if (segmentSelectComponent) {
                segmentSelectComponent.items.clear();
                var params = {
                    datacenter: datacenter,
                    company: company,
                    username: username,
                    secret: secret,
                    authentication: authentication,
                    imsConfigId: imsConfigId,
                    globalCompany: globalCompany
                };

                $.ajax({
                    type: 'get',
                    async: false,
                    url: Granite.HTTP.externalize("/libs/cq/analyticsconnector/content/configurations/connect/segmentData.segments.json"),
                    data: params
                }).done(function(data, textStatus, jqXHR) {
                    if ( data && !data.error && data.segments) {
                        segmentSelectComponent.items.add({
                            value: '',
                            content: {
                                textContent: ''
                            }
                        });
                        data.segments.forEach(function(segment, index) {
                            var item = {
                                value: segment.id,
                                content: {
                                    textContent: segment.name
                                }
                            };
                            segmentSelectComponent.items.add(item);
                        });

                        if ($(analyticsConfig_properties_form).length !== 0) {
                            var selected = $('#analytics-cloudconfiguration-segment');
                            selected.each(function(id, select) {
                                select.items.getAll().forEach(function(item, id) {
                                    if (item.value === segmentValue) {
                                        item.selected = true;
                                    }
                                });
                            });
                        }
                    } else {
                        ui.alert("ERROR", Granite.I18n.get('Failed to obtain the Analytics segment list.<br>Reconnect to Adobe Analytics'), 'error');
                    }
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    ui.alert("ERROR", Granite.I18n.get('Failed to obtain the Analytics segment list.<br>Reconnect to Adobe Analytics'), 'error');
                });
            }

        }

        var saveAnalyticsData = function(postData, submitUrl, contentType) {
            $.ajax({
                type: 'post',
                url: submitUrl,
                data: postData,
                cache: false,
                contentType: contentType
            }).done(function(data, textStatus, jqXHR) {

                getCustomMetrics();

                var configurationContainer = submitUrl.substring(submitUrl.indexOf("/conf/"), submitUrl.indexOf("/settings/"));
                location.href = '/libs/cq/analyticsconnector/content/configurations.html' + configurationContainer;

            }).fail(function(jqXHR, textStatus, errorThrown) {
                console.log('Error: ' + errorThrown);
                ui.notify(null, Granite.I18n.get('Something went wrong while saving the configuration.'), 'error');
            });
        }

        var getCustomMetrics = function() {

            $.ajax({
                type: 'get',
                url: Granite.HTTP.externalize("/libs/cq/analytics/sitecatalyst/variables.json"),
                data: {
                    path: save_custom_metrics
                }
            }).done(function(data, textStatus, jqXHR) {
                console.log("custom metrics added to configuration");

            }).fail(function(jqXHR, textStatus, errorThrown) {
                console.log('Error: ' + errorThrown);
                ui.notify(null, Granite.I18n.get('Unable to fetch custom metrics.'), 'error');
            });
        }

        var doCreateConfiguration = function(event, contentPath) {
            if (event != null) {
                event.preventDefault();
                event.stopImmediatePropagation();
            }

            $('input[name="./reportsuite"]').val($('input[name="./reportsuites"]').val());
            var postData = $(analyticsConfig_create_form).serialize();
            var submitUrl = Granite.HTTP.externalize(contentPath + '/jcr:content');
            var contentType = $(analyticsConfig_create_form).prop("enctype");

            saveAnalyticsData(postData, submitUrl, contentType);
        }


        createConfigButton.on('click', function(e) {

            var CLOUDCONFIGS_PATH = 'settings/cloudconfigs';
            var configType = "analyticsconnector";

            if (contentPath.indexOf(CLOUDCONFIGS_PATH) < 0) {
                contentPath = contentPath + '/' + CLOUDCONFIGS_PATH + '/' + configType;
            } else {
                editMode = true;
            }

            doCreateConfiguration(e, contentPath);

        });


        $('.granite-form-saveactivator').on('click', function(event) {
            if (event != null) {
                event.preventDefault();
                event.stopImmediatePropagation();
            }

            var helper = $(analyticsConfig_properties_form).adaptTo("foundation-validation-helper");
            if (helper.isValid()) {

                $('input[name="./reportsuite"]').val($('input[name="./reportsuites"]').val());
                var submitUrl = Granite.HTTP.externalize($(analyticsConfig_properties_form).prop('action'));
                var postData = $(analyticsConfig_properties_form).serialize();
                var contentType = $(analyticsConfig_properties_form).prop("enctype");

                saveAnalyticsData(postData, submitUrl, contentType);

            } else {
                helper.getSubmittables().forEach(function(field) {
                    $(field).adaptTo("foundation-validation").updateUI();
                });
                console.log(Granite.I18n.get("There are errors in the form"));
            }
        });


    });

    var getImsConfigurations = function() {
        var imsSelectComponent = $('coral-select[name="./imsConfigId"]')[0];
        $.ajax({
            type: 'post',
            url: Granite.HTTP.externalize("/libs/cq/analytics/sitecatalyst/service.json"),
            data: {
                method: "getImsConfigurations"
            }
        }).done(function(data, textStatus, jqXHR) {
            data.forEach(function(item){
                var opt = {
                    value: item.value,
                    content: {
                        textContent: item.text
                    }
                };
                imsSelectComponent.items.add(opt);
            });
        }).fail(function(jqXHR, textStatus, errorThrown) {
            ui.notify(null, Granite.I18n.get('Unable to fetch ims configurations.'), 'error');
            imsSelectComponent.setOptions([]);
        });
    };
})(document, Granite.$);