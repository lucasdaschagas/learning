/*
 * ADOBE CONFIDENTIAL
 *
 * Copyright 2016 Adobe Systems Incorporated
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 *
 */

(function(window, document, Granite, $) {
    "use strict";

    var EVENT_LAUNCH_PICKER = "dm-launch-picker";

    var ELEMENT_THUMB_PREVIEW = "#manual-thumb-span";
    var ELEMENT_CHANGE_THUMB_DIALOG = "#change-video-thumb-dialog";
    var ELEMENT_CHANGE_THUMB_FORM = "#change-video-thumb-form";
    var ELEMENT_CHANGE_THUMB_TABS = "#change-video-thumb-tabs";
    var ELEMENT_SELECT_FRAME_TAB = ".select-playframe-tab"; // DMS7
    var ELEMENT_SELECT_THUMB_TAB = ".select-frame-tab"; // DMHybrid
    var ELEMENT_STEP_LIST_PANEL = "#select-frame-step-list-panelstack";
    var ELEMENT_STEP_LIST = "#select-frame-step-list";

    var ELEMENT_SAVE_CHANGE_BTN = "#save-change-thumb-btn";
    var ELEMENT_CANCEL_CHANGE_BTN = "#cancel-change-thumb-btn";
    var ELEMENT_THUMB_PICKER_BTN = "#video-thumb-picker";
    var ELEMENT_SAVE_THUMB_WAIT_DIV = ".save-thumbnail-wait";

    var THUMBNAIL_RENDITION = "/jcr:content/renditions/cq5dam.web.1280.1280.jpeg";
    var S7DAMTYPE_KEY = "dam:s7damType";
    var REMOTE_S7FILE_KEY = "dam:scene7File";
    var REMOTE_S7ID_KEY = "dam:scene7ID";
    var ui = $(window).adaptTo("foundation-ui");
    /***************************************************************************
     *  1. Common part
     **************************************************************************/

    $(document).on("coral-tablist:change", ELEMENT_CHANGE_THUMB_TABS, function() {
        toggleTabButton();
    });

    $(document).on("coral-overlay:open", ELEMENT_CHANGE_THUMB_DIALOG, function() {
        toggleTabButton();

        // For DMHybrid, when dialog open, load preview urls
        if ($(ELEMENT_SELECT_THUMB_TAB).length === 1) {
            previewThumbnails();
        }
    });

    $(document).on("coral-overlay:close", ELEMENT_CHANGE_THUMB_DIALOG, function() {
        $(ELEMENT_SELECT_THUMB_TAB).find("coral-alert").remove();
    });

    $(document).on("click", ELEMENT_SAVE_CHANGE_BTN, function(e) {
        // Pause the video if playing.
        var videoHybrid = $(ELEMENT_SELECT_THUMB_TAB + " video")[0];
        var videoDMS7 = $(ELEMENT_SELECT_FRAME_TAB + " video")[0];
        var video = (videoHybrid === undefined) ? videoDMS7 : videoHybrid;

        if (video && !video.paused) {
            video.pause();
        }

        var tab = $(ELEMENT_CHANGE_THUMB_TABS)[0];
        var selectTabIndex = $(tab).children("coral-tab").index(tab.selectedItem);

        if (selectTabIndex === 0) {
            if ($(ELEMENT_SELECT_FRAME_TAB).length === 1) { // For DMS7
                savePlayFrameThumbnail();
            } else { // For DMHybrid
                saveSelectedThumbnail();
            }
        } else if (selectTabIndex === 1) {
            if ($(ELEMENT_SELECT_FRAME_TAB).length === 1) { // For DMS7
                saveChosenThumbnail();
            } else { // For DMHybrid
                saveUploadThumbnail();
            }
        }

        return false;
    });

    $(document).on("foundation-contentloaded", ELEMENT_CHANGE_THUMB_DIALOG, function() {
        var HTML5enabled = window.FormData !== undefined;
        if (!HTML5enabled && $("coral-fileupload[name=coverImage]")) {
            $("coral-fileupload[name=coverImage]").hide();
        }
    });

    function toggleTabButton() {
        var tab = $(ELEMENT_CHANGE_THUMB_TABS)[0];
        var selectTabIndex = $(tab).children("coral-tab").index(tab.selectedItem);

        $(tab).children("coral-tab").each(function(index, item) {
            if (index === selectTabIndex) {
                $(item).find("button").addClass("is-selected");
            } else {
                $(item).find("button").removeClass("is-selected");
            }
        });

        $($(".thumb-dialog-right-panel")[0].panelStack).children("coral-panel").each(function(index, item) {
            if (index === selectTabIndex) {
                $(item).addClass("is-selected");
            } else {
                $(item).removeClass("is-selected");
            }
        });
    }

    function doneSave() {
        $(ELEMENT_SAVE_THUMB_WAIT_DIV).empty();
        var dialog = document.querySelector(ELEMENT_CHANGE_THUMB_DIALOG);
        dialog.hide();
        location.reload();
    }

    function showWait() {
        var wait = new Coral.Wait().set({
            size: "L"
        });
        $(ELEMENT_SAVE_THUMB_WAIT_DIV).append(wait);
        $(ELEMENT_SAVE_CHANGE_BTN).attr("disabled", "disabled");
        $(ELEMENT_CANCEL_CHANGE_BTN).attr("disabled", "disabled");
    }

    function setThumbnail(name, url) {
        name = name || "";
        var image = $("<img class='show-grid'>").attr({ src: url, title: name });
        $(ELEMENT_THUMB_PREVIEW).empty();
        $(ELEMENT_THUMB_PREVIEW).append(image);
    }

    /***************************************************************************
     *  2. DMHybrid part
     **************************************************************************/

    /**
     * 2.1. DMHybrid: select thumbnail from 10 temporary thumbnails
     */
    function previewThumbnails() {
        var assetPath = $(ELEMENT_CHANGE_THUMB_DIALOG).data("assetpath");
        var previewUrl = assetPath + ".videothumbnail?:operation=previewUrls";
        if ($(ELEMENT_STEP_LIST_PANEL).length === 0) {
            $.ajax({
                url: Granite.HTTP.externalize(previewUrl),
                cache: false,
                type: "GET"
            }).done(function(resp) {
                if (resp) {
                    var urlArr = JSON.parse(resp).urls;
                    if (urlArr && urlArr.length >= 2 && $(ELEMENT_STEP_LIST_PANEL).length === 0) {
                        $(ELEMENT_SELECT_THUMB_TAB).empty();
                        renderStepList(urlArr);
                    } else {
                        submitThumbJob();
                    }
                } else {
                    submitThumbJob();
                }
            }).fail(function() {
                submitThumbJob();
            });
        }
    }

    function submitThumbJob() {
        var assetPath = $(ELEMENT_CHANGE_THUMB_DIALOG).data("assetpath");
        var generateThumbUrl = assetPath + ".videothumbnail";

        $.ajax({
            url: Granite.HTTP.externalize(generateThumbUrl),
            cache: false,
            type: "POST"
        }).done(function(jobResp) {
            var jobId = jobResp.substr(jobResp.indexOf(":") + 1);
            getThumbJobStatus(jobId);
        }).fail(function() {
            $(ELEMENT_SELECT_THUMB_TAB).empty();
            var alert = new Coral.Alert().set({
                variant: "error",
                header: {
                    innerHTML: Granite.I18n.get("ERROR")
                },
                content: {
                    innerHTML: Granite.I18n.get("Failed to submit job to generate thumbnails.")
                }
            });
            $(ELEMENT_SELECT_THUMB_TAB).append(alert);
        });
    }

    function getThumbJobStatus(jobId) {
        if (!jobId) {
            jobStatusFailHandler();
            return;
        }

        var assetPath = $(ELEMENT_CHANGE_THUMB_DIALOG).data("assetpath");
        var checkStatusUrl = assetPath + ".videothumbnail?:operation=jobStatus";
        var previewUrl = assetPath + ".videothumbnail?:operation=previewUrls";

        var data = {};
        data.jobId = jobId;

        var refreshIntervalId = setInterval(function() {
            $.ajax({
                url: Granite.HTTP.externalize(checkStatusUrl),
                cache: false,
                data: data,
                type: "GET"
            }).done(function(statusResp) {
                var percentage = parseInt(statusResp);
                if (percentage === 100) {
                    $.ajax({
                        url: Granite.HTTP.externalize(previewUrl),
                        cache: false,
                        type: "GET"
                    }).done(function(resp) {
                        var urlArr = JSON.parse(resp).urls;
                        if (urlArr.length >= 2 && $(ELEMENT_STEP_LIST_PANEL).length === 0) {
                            $(ELEMENT_SELECT_THUMB_TAB).empty();
                            renderStepList(urlArr);
                        }
                    });
                    clearInterval(refreshIntervalId);
                } else if (percentage >= 0 && percentage < 100) {
                    if (percentage < 5) {
                        $("coral-progress").attr("value", 5);
                    } else {
                        $("coral-progress").attr("value", percentage);
                    }
                } else {
                    jobStatusFailHandler();
                    clearInterval(refreshIntervalId);
                }
            }).fail(function() {
                jobStatusFailHandler();
                clearInterval(refreshIntervalId);
            });
        }, 2000);
    }

    function jobStatusFailHandler() {
        $(ELEMENT_SELECT_THUMB_TAB).empty();
        var alert = new Coral.Alert().set({
            variant: "error",
            header: {
                innerHTML: Granite.I18n.get("ERROR")
            },
            content: {
                innerHTML: Granite.I18n.get("Failed to check job status of generating thumbnails.")
            }
        });
        $(ELEMENT_SELECT_THUMB_TAB).append(alert);
    }

    function saveSelectedThumbnail() {
        var step = $(ELEMENT_STEP_LIST)[0];
        if (step === undefined || step.selectedItem === undefined) {
            return;
        }
        var selectThumbIndex = $(step).find("coral-step").index(step.selectedItem);
        var replaceImgUrl = $($(".select-frame-tab coral-panelstack coral-panel")[selectThumbIndex])
            .find("img").attr("src");

        var assetPath = $(ELEMENT_CHANGE_THUMB_DIALOG).data("assetpath");
        var data = {};

        data.url = replaceImgUrl;

        $.ajax({
            url: Granite.HTTP.externalize(assetPath + ".videothumbnail?:operation=replaceThumbnail"),
            data: data,
            cache: false,
            type: "POST"
        }).done(function(resp) {
            doneSave();
        }).fail(function(resp) {
            doneSave();
        });
    }

    function renderStepList(urlArr) {
        var stepList = new Coral.StepList().set({
            id: "select-frame-step-list",
            target: ELEMENT_STEP_LIST_PANEL,
            interaction: "on",
            size: "s"
        });
        var stepPanel = new Coral.PanelStack().set({
            id: "select-frame-step-list-panelstack"
        });

        var length = urlArr.length;
        for (var i = 0; i < length; i++) {
            var panel = new Coral.Panel();
            $(panel).append("<img src=\"" + urlArr[i].url + "\" width=\"520px\" >");
            stepPanel.items.add(panel);
            stepList.items.add({
                label: { innerHTML: _formatTime(urlArr[i].time) }
            });
        }

        $(ELEMENT_SELECT_THUMB_TAB).append(stepPanel);
        $(ELEMENT_SELECT_THUMB_TAB).append(stepList);
    }

    function _formatTime(time) {
        var hour = Math.floor(time / 3600);
        var minute = Math.floor(time / 60) - hour * 60;
        var second = time % 60;
        var formatStr = "";
        if (hour > 0) {
            formatStr += hour + ":";
        }
        if (minute < 10) {
            formatStr += "0" + minute + ":";
        } else {
            formatStr += minute + ":";
        }
        if (second < 10) {
            formatStr += "0" + second;
        } else {
            formatStr += second;
        }
        return formatStr;
    }

    /**
     * 2.2. DMHybrid: Manual upload thumbnail
     */
    $(document).on("change", "coral-fileupload", function(e) {
        var fileName = _getFileName(e.target);
        if (fileName && fileName.match(/\.(jpg|jpeg|png|gif)/i)) {
            if (e.target.uploadQueue && window.FileReader) {
                var file = e.target.uploadQueue[0]._originalFile;
                var reader = new FileReader();
                reader.onload = function(e) {
                    setThumbnail(fileName, e.target.result);
                };
                reader.readAsDataURL(file);
            } else {
                setThumbnail(fileName, null);
            }
        }
    });

    function saveUploadThumbnail() {
        var HTML5enabled = window.FormData !== undefined;

        // fix weird IE11 issue that sending multipart forma data cause steam ended unexpectedly
        $($(ELEMENT_CHANGE_THUMB_FORM)[0]).append($('<input type="hidden" name="_dontcare" value="_dontcare">'));

        var data;
        var processData = true;
        var contentType = true;
        if (HTML5enabled) {
            data = new FormData($(ELEMENT_CHANGE_THUMB_FORM)[0]);
            processData = false;
            contentType = false;
        } else {
            data = $(ELEMENT_CHANGE_THUMB_FORM).serialize();
            processData = true;
            contentType = $(ELEMENT_CHANGE_THUMB_FORM)[0].enctype;
        }

        $.ajax({
            type: $(ELEMENT_CHANGE_THUMB_FORM).attr("method"),
            url: Granite.HTTP.externalize($(ELEMENT_CHANGE_THUMB_FORM).attr("action")),
            data: data,
            cache: false,
            processData: processData,
            contentType: contentType
        }).done(function(html) {
            doneSave();
        }).fail(function(xhr, error, errorThrown) {
            doneSave();
        });
    }

    function _getFileName(input) {
        var name;
        if (input.files) {
            name = input.files[0] && input.files[0].name;
        } else {
            name = input.value.split(/[\/\\]/).slice(-1)[0];// eslint-disable-line no-useless-escape
        }
        return name;
    }

    /***************************************************************************
     *  3. DMS7 part
     **************************************************************************/

    /**
     * 3.1 DMS7: select play frame as thumbnail
     */
    function savePlayFrameThumbnail() {
        var assetPath = $(ELEMENT_CHANGE_THUMB_DIALOG).data("assetpath");
        showWait();

        var video = $("div#dm-change-thumbnail-video video");
        if (!video) {
            return;
        }

        var playTime = video[0].currentTime;
        var data = {};
        data.playTime = playTime;

        $.ajax({
            url: Granite.HTTP.externalize(assetPath + ".reprocessS7VideoThumbnail"),
            data: data,
            cache: false,
            type: "POST"
        }).done(function(resp) {
            var contentMessage = Granite.I18n.get("Video Thumbnail update is in progress and you " +
                "will receive an Inbox notification when complete.");
            var title = Granite.I18n.get("Updating Video Thumbnail");
            var buttonConfig = [
                {
                    id: "setupdm-submit",
                    text: Granite.I18n.get("Ok"),
                    primary: true,
                    handler: function() {
                        doneSave();
                    }
                }
            ];
            $(window).adaptTo("foundation-ui").prompt(title, contentMessage, "info", buttonConfig);
        }).fail(function(resp) {
            doneSave();
            ui.notify(null, Granite.I18n.get("Failed to update thumbnail."), "error");
        });
    }

    /**
     * 3.2 DMS7: choose asset as thumbnail
     */
    $(document).on("click", ELEMENT_THUMB_PICKER_BTN, function() {
        $(document).trigger({
            "type": EVENT_LAUNCH_PICKER,
            "mimeType": [ "image" ],
            "mode": "single",
            "root": "/content/dam",
            "callback": updateChosenThumbnail
        });
    });

    function updateChosenThumbnail(json) {
        if (json && json[0]) {
            var thumbnailPath = json[0].path;
            var metadataPath = Granite.HTTP.externalize(thumbnailPath + ".children.3.json");
            $.get(metadataPath).done(function(resp) {
                if (_isDMS7Image(resp[0])) {
                    var url = Granite.HTTP.externalize(thumbnailPath + THUMBNAIL_RENDITION);
                    var thumbnailS7ID = resp[0]["metadata"][REMOTE_S7ID_KEY];
                    $(ELEMENT_THUMB_PREVIEW).data("scene7ID", thumbnailS7ID);
                    $(ELEMENT_THUMB_PREVIEW).data("thumbnailPath", thumbnailPath);
                    setThumbnail("", url);
                } else {
                    _showAssetPickerError([ thumbnailPath ], "invalid");
                }
            });
        }
    }

    function saveChosenThumbnail() {
        var assetPath = $(ELEMENT_CHANGE_THUMB_DIALOG).data("assetpath");
        var thumbPath = $(ELEMENT_THUMB_PREVIEW).data("thumbnailPath");
        showWait();

        var data = {};
        data.thumbAsset = $(ELEMENT_THUMB_PREVIEW).data("scene7ID");
        data.thumbAssetPath = thumbPath;
        $.ajax({
            url: Granite.HTTP.externalize(assetPath + ".setS7VideoThumbnail"),
            data: data,
            cache: false,
            type: "POST"
        }).done(function(resp) {
            doneSave();
        }).fail(function(resp) {
            doneSave();
            ui.notify(null, Granite.I18n.get("Failed to update thumbnail."), "error");
        });
    }

    function _showAssetPickerError() {
        var errorMsg = Granite.I18n.get("The selected asset is not Dynamic Media asset and could not be used.");
        var alert = new Coral.Alert().set({
            variant: "error",
            header: {
                innerHTML: "ERROR"
            },
            content: {
                innerHTML: errorMsg
            }
        }).show();

        $(ELEMENT_THUMB_PREVIEW).empty();
        $(ELEMENT_THUMB_PREVIEW).append(alert);
    }

    function _isDMS7Image(info) {
        var s7damType = info[S7DAMTYPE_KEY];
        if (s7damType && s7damType.toLowerCase() === "image") { // check s7damType as image
            if (info["metadata"][REMOTE_S7FILE_KEY]) {
                return true;
            }
        }
        return false;
    }
})(window, document, Granite, Granite.$);
