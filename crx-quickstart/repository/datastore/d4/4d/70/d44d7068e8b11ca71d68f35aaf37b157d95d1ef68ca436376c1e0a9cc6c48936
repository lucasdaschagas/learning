<%--
  Copyright 1997-2008 Day Management AG
  Barfuesserplatz 6, 4001 Basel, Switzerland
  All Rights Reserved.

  This software is the confidential and proprietary information of
  Day Management AG, ("Confidential Information"). You shall not
  disclose such Confidential Information and shall use it only in
  accordance with the terms of the license agreement you entered into
  with Day.

--%><%@page session="false"
			import="java.net.URLEncoder,
			        java.util.Date,
			        java.util.Locale,
                    java.util.ResourceBundle,
					com.day.cq.dam.api.Asset,
					com.day.cq.i18n.I18n,
					com.day.cq.wcm.api.WCMMode,
					com.day.cq.wcm.api.components.DropTarget,
					org.apache.commons.lang.StringUtils,
					com.day.cq.dam.scene7.api.constants.Scene7Constants"
%>
<%@include file="/libs/foundation/global.jsp"%>
<%@include file="/libs/dam/components/scene7/utils/s7PageCloudConfig.jsp" %>
<cq:include script="/libs/dam/components/scene7/utils/s7damutils.jsp" />
<%
	if((WCMMode.fromRequest(request) == WCMMode.EDIT) || (WCMMode.fromRequest(request) == WCMMode.DESIGN) ) {
	%><cq:includeClientLib categories="cq.dam.scene7" /><%
	}
    %><cq:includeClientLib categories="cq.dam.scene7viewers" />
    <cq:includeClientLib categories="cq.dam.scene7.dhtmlFlyoutZoom" /><%

	Locale pageLocale = currentPage.getLanguage(true);
	ResourceBundle resourceBundle = slingRequest.getResourceBundle(pageLocale);
	I18n i18n = new I18n(resourceBundle);

	long timestamp = new Date().getTime();

    String width = properties.get("width",currentStyle.get("defaultWidth", "-1"));
    String height = properties.get("height",currentStyle.get("defaultHeight", "-1"));

    String fileReference = properties.get("fileReference",String.class);
    boolean s7content = (fileReference != null && fileReference.indexOf("/is/image") != -1);
    if (s7content) {
        int idx = fileReference.indexOf("?");
        if (idx != -1) {
            fileReference = fileReference.substring(0,idx);
        }
    }
    
    Asset asset = null;
    Resource fileRefRes = resourceResolver.getResource(fileReference);
    if (fileRefRes != null) {
        asset = (!s7content ? fileRefRes.adaptTo(Asset.class) : null);
    }
    
    if ((fileReference == null) || (!s7content && (fileRefRes == null || asset == null))) {
        %><div class="<%= DropTarget.CSS_CLASS_PREFIX + "image" + (WCMMode.fromRequest(request) == WCMMode.EDIT ? " cq-image-placeholder" : "") %>"></div><%
    } else {
        long origWidth = 500;
        long origHeight = 500;
        if(asset != null) {
            origWidth = (asset.getMetadataValueFromJcr("tiff:ImageWidth") != null ? (long) Double.parseDouble(asset.getMetadataValueFromJcr("tiff:ImageWidth")) : origWidth);
            origHeight = (asset.getMetadataValueFromJcr("tiff:ImageLength") != null ? (long) Double.parseDouble(asset.getMetadataValueFromJcr("tiff:ImageLength")) : origHeight);
        }
        int widthInt = Integer.parseInt(width);
        int heightInt = Integer.parseInt(height);
        if(widthInt < 0 && heightInt < 0) {
            width = "500";
            height = "500";
        }else if(widthInt < 0) {
            width = Long.toString(heightInt * origWidth / origHeight);
        }else if(heightInt < 0) {
            height = Long.toString(widthInt * origHeight / origWidth);
        }

        String id = "";
        String publishStatus = "";
        if (asset != null) {
            id = asset.getMetadataValueFromJcr(Scene7Constants.PN_S7_ASSET_ID);
            publishStatus = asset.getMetadataValueFromJcr(Scene7Constants.PN_S7_FILE_STATUS) != null?  asset.getMetadataValueFromJcr(Scene7Constants.PN_S7_FILE_STATUS):Scene7Constants.PV_S7_PUBLISH_COMPLETE;
        }

        // if the asset is not yet set _or_ the upload/publish has not yet completed
        if (!s7content && ("".equals(id) || !Scene7Constants.PV_S7_PUBLISH_COMPLETE.equals(publishStatus))) {
            //asset not uploaded

            if((WCMMode.fromRequest(request) == WCMMode.EDIT) || (WCMMode.fromRequest(request) == WCMMode.DESIGN) ) {
                String uploadText = i18n.get("Publish to Scene7", "Scene7 upload link text");
                if(!Scene7Constants.PV_S7_PUBLISH_COMPLETE.equals(publishStatus))
                    uploadText = i18n.get("Check Scene7 Publish Status", "Check Publish Status link text");

            %>
            <div class="not-published" style="position:relative;width: <%= xssAPI.encodeForHTML(width) %>px; height: <%= xssAPI.encodeForHTML(height) %>px;">
                <img src="<%= xssAPI.getValidHref(fileReference) %>/jcr:content/renditions/cq5dam.thumbnail.48.48.png" />
                <div class="overlay" style="width: <%= xssAPI.encodeForHTML(width) %>px; height: <%= xssAPI.encodeForHTML(height) %>px;"></div>
                <div style="width: <%= xssAPI.encodeForHTML(width) %>px; height: <%= xssAPI.encodeForHTML(height) %>px;">
                    <a class="publish-button" id="<%=xssAPI.encodeForHTMLAttr(resource.getPath().replace("/", "-"))%>-publishLink" onclick="CQ.scene7.triggerWorkflowFromViewer('<%=xssAPI.encodeForHTMLAttr(resource.getPath().replace("/", "-"))%>', '<%=xssAPI.getValidHref(fileReference)%>', '<%=xssAPI.getValidHref(scene7PageCloudConfigPath) %>');return false;"><%=xssAPI.encodeForHTML(uploadText) %></a>
                </div>
            </div>
            <%
            } else {
            %>
                <img src="<%= xssAPI.getValidHref(fileReference) %>" width="<%= xssAPI.encodeForHTMLAttr(width) %>" height="<%= xssAPI.encodeForHTMLAttr(height) %>"/>
            <%
            }
        } else {
                // parameters to viewer
                String cursorFadeTime = currentStyle.get("cursorFadeTime", String.class);
                String flyoutHideDelay = currentStyle.get("flyoutHideDelay", String.class);
                String flyoutHideTime = currentStyle.get("flyoutHideTime", String.class);
                String flyoutShowDelay = currentStyle.get("flyoutShowDelay", String.class);
                String flyoutShowTime = currentStyle.get("flyoutShowTime", String.class);
                String frictionCoef = currentStyle.get("frictionCoef", String.class);
                String imageFadeTime = currentStyle.get("imageFadeTime", String.class);
                String messageDisplayTime = currentStyle.get("messageDisplayTime", String.class);
                String messageFadeTime = currentStyle.get("messageFadeTime", String.class);
                String messageTextDesktop = currentStyle.get("messageTextDesktop", String.class);
                String messageTextTouch = currentStyle.get("messageTextTouch", String.class);
                String modifier = currentStyle.get("modifier", String.class);
                String scrollTime = currentStyle.get("scrollTime", String.class);
                String useFixedCursor = currentStyle.get("useFixedCursor", String.class);
                String zoomFactor = currentStyle.get("zoomFactor", String.class);

                String domain = "";
                String ref = "";
                if (s7content) {
                    int idx = fileReference.indexOf("is/image/");
                    domain = fileReference.substring(0,idx);
                    ref = fileReference.substring(idx+9);
                } else {
                    domain = asset.getMetadataValueFromJcr(Scene7Constants.PN_S7_DOMAIN);
                    ref = asset.getMetadataValueFromJcr(Scene7Constants.PN_S7_FILE);
                }

                // CSS to viewer
                String flyoutBorder = currentStyle.get("flyoutBorder", String.class);
                if (flyoutBorder == null) {
                	flyoutBorder = "1px solid";
                }
                String flyoutBorderColor = currentStyle.get("flyoutBorderColor", String.class);
                if (flyoutBorderColor == null) {
                    flyoutBorderColor = "C2C2C2";
                }
                
                String flyoutFrame = currentStyle.get("flyoutFrame", String.class);
                if (flyoutFrame == null) {
                	flyoutFrame = "1px solid";
                }
                String flyoutFrameColor = currentStyle.get("flyoutFrameColor", String.class);
                if (flyoutFrameColor == null) {
                    flyoutFrameColor = "A9A9A9";
                }
                String flyoutColor = currentStyle.get("flyoutColor", String.class);
                if (flyoutColor == null) {
                	flyoutColor = "FFFFFF";
                }
                String flyoutOpacity = currentStyle.get("flyoutOpacity", String.class);
                if (flyoutOpacity == null) {
                	flyoutOpacity = "70";
                }
                String flyoutOpacityFloat = String.valueOf(Integer.parseInt(flyoutOpacity)/100.0);

                String flyoutSize = currentStyle.get("flyoutSize", String.class);
                String flyoutWidth = (flyoutSize != null ? flyoutSize.split(",")[0] : "50");
                String flyoutHeight = (flyoutSize != null ? flyoutSize.split(",")[1] : "50");

                String flyoutPosition = currentStyle.get("flyoutPosition", String.class);
                String flyoutOffsetX = (flyoutPosition != null ? flyoutPosition.split(",")[0] : "0");
                String flyoutOffsetY = (flyoutPosition != null ? flyoutPosition.split(",")[1] : "0");
%>
<style>
<!--
.multiscreenflyoutzoom .s7flyoutStaticImage {
    width : <%=xssAPI.encodeForHTML(width)%>px;
    height : <%=xssAPI.encodeForHTML(height)%>px;
}

.multiscreenflyoutzoom .s7flyoutFlyoutViewOffset {
    left : <%=xssAPI.encodeForHTML(flyoutOffsetX)%>px;
    top : <%=xssAPI.encodeForHTML(flyoutOffsetY)%>px;
}

.multiscreenflyoutzoom .s7flyoutFlyoutView {
    width : <%=xssAPI.encodeForHTML(flyoutWidth)%>px;
    height : <%=xssAPI.encodeForHTML(flyoutHeight)%>px;
}

.multiscreenflyoutzoom .s7flyoutFlyoutViewBorder {
    border : <%=xssAPI.encodeForHTML(flyoutBorder)%> #<%= xssAPI.encodeForHTML(flyoutBorderColor)%>;
}

.multiscreenflyoutzoom .s7flyoutFrame {
    border : <%=xssAPI.encodeForHTML(flyoutFrame)%> #<%= xssAPI.encodeForHTML(flyoutFrameColor)%>;
}

.multiscreenflyoutzoom .s7flyoutCursorDesktop {
    width : 80px;
    height : 80px;
    background-image : url(<%=xssAPI.getValidHref(domain)%>s7viewers/dhtml/images/flyout/zoom-cursor-desktop.png);
}

.multiscreenflyoutzoom .s7flyoutShading {
    background-color : #<%=xssAPI.encodeForHTML(flyoutColor)%>;
    opacity : <%=xssAPI.encodeForHTML(flyoutOpacityFloat)%>;
    filter : alpha(opacity=<%=xssAPI.encodeForHTML(flyoutOpacity)%>);
}

.multiscreenflyoutzoom .s7flyoutCursorTouch {
    width : 80px;
    height : 100px;
    background-image : url(<%=xssAPI.getValidHref(domain)%>s7viewers/dhtml/images/flyout/zoom-cursor-tablet-1x.png);
}
-->
</style>
              <script type="text/javascript">
                     sj_codebase = "<%=xssAPI.encodeForJSString(domain)%>s7viewers/dhtml/";
                     
                     CQ.scene7.dhtmlFlyoutZoom.loadScripts("<%=xssAPI.encodeForJSString(domain)%>s7viewers/dhtml/sj_advancedflyout.js");
              </script>
              <div id="flyout-<%=timestamp%>" style="position:relative;z-index:1"></div>
              <script type="text/javascript">
                     var flyout = new s7js.flyout.AdvancedFlyout();
                     flyout.setTargetId('flyout-<%= timestamp %>');
                     flyout.setParameter('serverUrl', '<%=xssAPI.encodeForJSString(domain)%>is/image/');
                     flyout.setParameter('asset', '<%=xssAPI.encodeForJSString(ref)%>');

                     var param;

                     <% if(StringUtils.isNotBlank(cursorFadeTime)){ %>
                        param = '<%=xssAPI.getValidJSToken(cursorFadeTime, "null")%>';
                        if (param != 'null') {
                            flyout.setParameter('cursorFadeTime', param);
                        }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(flyoutHideDelay)){ %>
                         param = '<%=xssAPI.getValidJSToken(flyoutHideDelay, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('flyoutHideDelay', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(flyoutHideTime)){ %>
                         param = '<%=xssAPI.getValidJSToken(flyoutHideTime, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('flyoutHideTime', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(flyoutShowDelay)){ %>
                         param = '<%=xssAPI.getValidJSToken(flyoutShowDelay, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('flyoutShowDelay', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(flyoutShowTime)){ %>
                         param = '<%=xssAPI.getValidJSToken(flyoutShowTime, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('flyoutShowTime', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(frictionCoef)){ %>
                         param = '<%=xssAPI.getValidJSToken(frictionCoef, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('frictionCoef', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(imageFadeTime)){ %>
                         param = '<%=xssAPI.getValidJSToken(imageFadeTime, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('imageFadeTime', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(messageDisplayTime)){ %>
                         param = '<%=xssAPI.getValidJSToken(messageDisplayTime, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('messageDisplayTime', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(messageFadeTime)){ %>
                         param = '<%=xssAPI.getValidJSToken(messageFadeTime, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('messageFadeTime', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(messageTextDesktop)){ %>
                         param = '<%=xssAPI.getValidJSToken(messageTextDesktop, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('messageTextDesktop', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(messageTextTouch)){ %>
                         param = '<%=xssAPI.getValidJSToken(messageTextTouch, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('messageTextTouch', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(modifier)){ %>
                             param = '<%=xssAPI.getValidJSToken(modifier, "null") %>';
                             if (param != 'null') {
                                 flyout.setParameter('modifier', param);
                             }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(scrollTime)){ %>
                         param = '<%=xssAPI.getValidJSToken(scrollTime, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('scrollTime', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(useFixedCursor)){ %>
                         param = '<%=xssAPI.getValidJSToken(useFixedCursor, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('useFixedCursor', param);
                         }
                     <%
                     }
                     %>

                     <% if(StringUtils.isNotBlank(zoomFactor)){ %>
                         param = '<%=xssAPI.getValidJSToken(zoomFactor, "null")%>';
                         if (param != 'null') {
                               flyout.setParameter('zoomFactor', param);
                         }
                     <%
                     }
                     %>

                     flyout.init();
              </script>
<%
          }// end else embed
    }
%>
