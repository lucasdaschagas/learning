/*
 Append cache killer string to an image source

 Usage:
 {{#appendck myString}}
 */
Handlebars.registerHelper('appendck', function(imageSrc) {
  if(!_.isString(imageSrc)) {
    throw new Error('Handlebars#appendck expects string as image source.');
  }

  return imageSrc + '?ch_ck=' + moment().unix();
});

/*
  Subtract right value from left value

  Usage:
    {{subtract lvalue rvalue}}
*/
Handlebars.registerHelper('subtract', function(lvalue, rvalue) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#subtract needs 2 parameters');
  }

  return parseFloat(lvalue) - parseFloat(rvalue);
});

/*
  Divide a number by other.

  Usage:
    {{divide 6 2}} returns 3.
*/
Handlebars.registerHelper('divide', function(dividend, divisor) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#divide needs 2 parameters');
  }

  return parseFloat(dividend) / parseFloat(divisor);
});

/*
  Compare two parameters for equality

  Usage:
    {{#equals myValue "The best value"}}The value is the best!{{/equals}}
*/
Handlebars.registerHelper('equals', function(lvalue, rvalue, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#equals needs 2 parameters');
  }

  if(lvalue != rvalue) {
    return options.inverse(this);
  }

  return options.fn(this);
});

/*
 AND two parameters and return the boolean true/false

 Usage:
  {{#and myArray1.length myArray2.length}}Both myArrays are not empty{{/and}}
 */
Handlebars.registerHelper('and', function(value1, value2, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#and needs 2 parameters');
  }

  if (value1 && value2) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
  Compare two values with a greater than inequality

  Usage:
    {{#gt myValue 5}}The value is bigger than 5!{{/gt}}
*/
Handlebars.registerHelper('gt', function(lvalue, rvalue, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#gt needs 2 parameters');
  }

  if (lvalue > rvalue) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
  Compare two values with a less than inequality

  Usage:
    {{#lt myValue 5}}The value is smaller than 5!{{/lt}}
*/
Handlebars.registerHelper('lt', function(lvalue, rvalue, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#lt needs 2 parameters');
  }

  if (lvalue < rvalue) {
    return options.fn(this);
  }

  return options.inverse(this);
});


/*
  Compare two values with a greater than or equal inequality

  Usage:
    {{#gte myValue 5}}The value is greater than or equal to 5!{{/gte}}
*/
Handlebars.registerHelper('gte', function(lvalue, rvalue, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#gte needs 2 parameters');
  }

  if (lvalue >= rvalue) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
  Compare two values with a less than or equal inequality

  Usage:
    {{#lte myValue 5}}The value is less than or equal to 5!{{/lte}}
*/
Handlebars.registerHelper('lte', function(lvalue, rvalue, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#lte needs 2 parameters');
  }

  if (lvalue <= rvalue) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
  Check whether a number lies in a specific range (inclusive)

  Usage:
    {{#inRange myValue "10.0" "99.99"}}The value is greater than or equal to 10.0 and less than or equal to 99.99!{{/inRange}}
*/
Handlebars.registerHelper('inRange', function(variable, lvalue, rvalue, options) {
  if (arguments.length < 4) {
    throw new Error('Handlebars#inRange needs 3 parameters');
  }

  if (parseFloat(lvalue) <= variable && variable <= parseFloat(rvalue)) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
  Check whether a number lies in a specific range (inclusive)

  Usage:
    {{#notInRange myValue "10.0" "99.99"}}The value is either less than 10.0 or greater than 99.99!{{/notInRange}}
*/
Handlebars.registerHelper('notInRange', function(variable, lvalue, rvalue, options) {
  if (arguments.length < 4) {
    throw new Error('Handlebars#notInRange needs 3 parameters');
  }

  if (variable < parseFloat(lvalue) || variable > parseFloat(rvalue)) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/**
 * Iterate over array obtained after splitting a string using a separator.
 */
Handlebars.registerHelper('eachString', function(str, separator, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#eachString needs 2 parameters.');
  }

  if (typeof str === 'string') {
    return Handlebars.helpers.each.call(this, str.split(separator), options);
  }
});

/*
  Format an integer with commas at the thousands place (i.e. "10000" becomes "10,000")

  Usage:
    {{number myBigNumber}}
    {{number myBigNumber 2}}
    {{#number}}{{getValueFromObj obj field}}{{/number}}
*/
Handlebars.registerHelper('number', function(context, decPlaces) {
  var locale = TSDK.I18n.getLocale(),
    groupSeparator = ',',
    commaDecimalSeparator = ['de', 'es', 'fr', 'it', 'pt'],
    dotGroupSeparator = ['de', 'es', 'it', 'pt'],
    spaceGroupSeparator = ['fr'];

  if (context.fn && typeof context.fn === 'function') {
    context = context.fn(this);
  }

  if (_.isNumber(context) && _.isNumber(decPlaces)) {
    context = context.toFixed(decPlaces);
  }

  if (dotGroupSeparator.indexOf(locale) != -1) {
    groupSeparator = '.';
  } else if (spaceGroupSeparator.indexOf(locale) != -1) {
    groupSeparator = ' ';
  }

  context = context.toString();

  if (commaDecimalSeparator.indexOf(locale) != -1) {
    context = context.split('.').join(',');
  }

  while (/(\d+)(\d{3})/.test(context)) {
    context = context.replace(/(\d+)(\d{3})/, '$1' + groupSeparator + '$2');
  }

  return context || '---';
});

Handlebars.registerHelper('formatPercent', function(context, options) {
  var fixed = options.hash.fixed || 2;
  return  (context * 100).toFixed(fixed) + '%';
});
/*
  ISO Format http://en.wikipedia.org/wiki/ISO_8601
  Usage:
    {{getDate ISOFormatedDate}}
    {{getDate ISOFormatedDate format='d/m/y'}}
    {{getDate ISOFormatedDate format='d/m/y' comment='comment message'}}

  the format is defined in : CampaignServiceImpl.java
*/
Handlebars.registerHelper('getDate', function(ISOFormattedDate, options) {
  var format = options.hash.format,
    comment = options.hash.comment,
    dateFormat = TSDK.I18n.get('YYYY-MM-DD', null, 'Date format pattern for moment.js. e.g. 2013-11-13 (http://momentjs.com/docs)');

  if (format) {
    dateFormat = TSDK.I18n.getVar(format, comment);
  }

  if (!ISOFormattedDate) {
    return moment().format(dateFormat);
  }

  return moment(ISOFormattedDate).format(dateFormat);
});

/*
  ISO Format http://en.wikipedia.org/wiki/ISO_8601
  Usage:
    {{getTime ISOFormatedDate}}
    {{getTime ISOFormatedDate format='HH:mm'}}
    {{getTime ISOFormatedDate format='HH:mm' comment='comment message'}}

  the format is defined in : CampaignServiceImpl.java
*/
Handlebars.registerHelper('getTime', function(ISOFormattedDate, options) {
  var format = options.hash.format,
    comment = options.hash.comment,
    timeFormat = TSDK.I18n.get('HH:mm', null, 'Time format pattern for moment.js. e.g. 12:48 (http://momentjs.com/docs)');

  if (format) {
    timeFormat = TSDK.I18n.getVar(format, comment);
  }

  if (!ISOFormattedDate) {
    return moment().format(timeFormat);
  }

  return moment(ISOFormattedDate).format(timeFormat);
});

/*
  {{getActivityPriority 1}} // Low
*/
Handlebars.registerHelper('getActivityPriority', function(priority) {
  if (priority === 0) {
    return TSDK.I18n.get('Low');
  }

  if (priority === 1) {
    return TSDK.I18n.get('Medium');
  }

  if (priority === 2) {
    return TSDK.I18n.get('High');
  }

  return priority;
});

/*
  Any STRinG to String
*/
Handlebars.registerHelper('toCapitalCase', function(value) {
  if (value && typeof value === 'string') {
    return value.substring(0, 1).toUpperCase() + value.substring(1).toLowerCase();
  }

  return '';
});

/*
  Returns lowercase of a string
*/
Handlebars.registerHelper('toLowerCase', function(value) {
  if (value && typeof value === 'string') {
    return value.toLowerCase();
  }

  return '';
});

/*
  Returns uppercase of a string
*/
Handlebars.registerHelper('toUpperCase', function(value) {
  if (value && typeof value === 'string') {
    return value.toUpperCase();
  }

  return '';
});

/*
  returns N day/days
*/
Handlebars.registerHelper('getDays', function(daysCount) {
  if (daysCount && typeof daysCount === 'number') {
    return TSDK.I18n.get('{0} {1}', [daysCount, 'day(s)']);
  }

  return '';
});

/*
* TSDK.I18 is expected to contain functions similar to Granite.I18n.
* see Granite.I18n.get help
* wrapper for
*    Granite.I18n.get(string *,[param1, param2] *,comment); * - optional
* returns i18n string
*   e.g. w/ html: {{i18n "do <strong>{0}</strong> or <br/>{1}" "param0" "param1" comment="comment message" html=true }}
*   e.g. w/out html: {{i18n "do {0} or {1}" "param0" "param1" comment="comment message"  }}
*   e.g. w/out comment: {{i18n "do {0} or {1}" "param0" "param1"}}
*   e.g. as block (can be passed only one param!) {{#i18n "Updated {0}"}}{{getDate date}}{{/i18n}}
*/
Handlebars.registerHelper('i18n', function() {
  //"transform" into an array
  var params = Array.prototype.slice.call(arguments, 0);

  // Get the options out of the parameters array
  var options = params.pop();

  var rawMessage = Array.prototype.shift.call(params);
  var i18nParams = [rawMessage];

  if (typeof options.fn === 'function') {
    params = [options.fn(this)];
  }

  i18nParams.push(params);

  if (typeof options.hash.comment === 'string') {
    i18nParams.push(options.hash.comment);
  }

  // Call the i18n function
  var translated = TSDK.I18n.get.apply(this, i18nParams) || '';

  // Return a safe string it is specified that the string contains HTML
  if (options.hash.html) {
    return new Handlebars.SafeString(translated);
  }

  return translated;
});

/*
  Compare two parameters for non-equality

  Usage:
    {{#notEquals myValue "The best value"}}The value is not the best!{{/notEquals}}
*/
Handlebars.registerHelper('notEquals', function (lvalue, rvalue, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#notEquals needs 2 parameters');
  }

  if (lvalue == rvalue) {
    return options.inverse(this);
  }

  return options.fn(this);
});

Handlebars.registerHelper('each_with_index', function(array, fn) {
  var buffer = '',
    arrayLength = array.length;

  for (var i = 0, j = arrayLength; i < j; i++) {
    var item = array[i];

    // stick an index property onto the item, starting with 1, may make configurable later
    item.index = i;

    // show the inside of the block
    buffer += (typeof(fn) == 'object') ?  fn.fn(item) : fn(item);
  }

  // return the finished buffer
  return buffer;
});

/**
 * Iterates over an array in reverse order. The reverse index can be accessed using @reverseIndex.
 */
Handlebars.registerHelper('each_reverse', function(context, options) {
  var contextLength,
    ret = '',
    data,
    i;

  if (context instanceof Array) {
    if (options.data) {
      data = Handlebars.createFrame(options.data);
    }

    contextLength = context.length;

    for (i = contextLength - 1; i >= 0; i--) {
      if (data) {
        data.index = contextLength - i - 1;
        data.reverseIndex = i;
      }

      ret += options.fn(context[i], { data: data });
    }
  }

  if (contextLength) {
    return ret;
  }

  return options.inverse(this);
});

Handlebars.registerHelper('getIconById', function(id) {
  if (id && id.lastIndexOf('/') > -1) {
    id = id.substring(id.lastIndexOf('/') + 1);
  }

  var map = {
    'firefox': 'icon-devicemobile',
    'internet_explorer': 'icon-devicemobile',
    'chrome': 'icon-devicemobile',
    'safari': 'icon-devicemobile',
    'windows': 'icon-windows8',
    'mac': 'icon-apple',
    'linux': 'icon-linux',
    'mobile': 'icon-devicemobile',
    'tablet': 'icon-devicetablet',
    'desktop': 'icon-devicedesktop',
    'google': 'icon-merge',
    'bing': 'icon-merge',
    'yahoo': 'icon-merge',
    'returning_visitors': 'icon-users',
    'new_visitors': 'icon-users',
    'all_visitors': 'icon-demographic',
    'us_returning_male': 'icon-demographic',
    'us_female': 'icon-demographic'
  };

  if (map.hasOwnProperty(id)) {
    return map[id];
  }

  return 'icon-users';
});

/*
  Return the specified property if it exists in object. Return '---' when only value is needed.

  Usage:
  {{getValueFromObj obj field}}
  {{#getValueFromObj obj field}} val exists in object {{/getValueFromObj}}
*/
Handlebars.registerHelper('getValueFromObj', function(obj, field, options) {
  if (arguments.length < 2) {
    throw new Error("Handlebars#getValueFromObj needs 2 parameters");
  }

  obj = obj || {};

  var value = obj[field],
    isNotDefined = _.isUndefined(value) || _.isNull(value) || _.isNaN(value),
    isEmptyString = (typeof value === "string") && _.isEmpty(value);

  if (typeof options.fn === 'function') {
    return (isNotDefined || isEmptyString) ? options.inverse({}) : options.fn(value);
  }

  return value || '---';
});

/*
  Check whether a value exists in the array.

  Usage:
  {{#hasValue array "val"}} val exists in array {{/hasValue}}
*/
Handlebars.registerHelper('hasValue', function(array, value, options) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#hasValue needs 2 parameters');
  }

  if (array && array.indexOf(value) != -1) {
    return options.fn(this);
  }

  return options.inverse(this);
});

Handlebars.registerHelper('buildMetricsMeasurementDisplayRule', function(action, array) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#buildMetricsMeasurementDisplayRule needs 2 parameters');
  }

  if (action === 'elementClick') {
    return TSDK.I18n.get('Clicked an element');
  }

  if (action === 'clickRecommendation') {
    return TSDK.I18n.get('Clicked on recommendation');
  }

  var orConjunction = TSDK.I18n.get('or'),
    arrayLength = array.length,
    pageEnumeration = '';

  for (var index = 0; index < arrayLength; index++) {
    if (index) {
      pageEnumeration += (' ' + orConjunction + ' ');
    }
    pageEnumeration += array[index].term;
  }

  if (action === 'pageView') {
    return TSDK.I18n.get('Viewing of page {0}', _.escape(pageEnumeration));
  } else if (action === 'mboxView') {
    return TSDK.I18n.get('Viewing of mbox {0}', _.escape(pageEnumeration));
  }
});

Handlebars.registerHelper('isActivityUpdating', function(status, targetSyncPending, options) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#isActivityUpdating needs 2 parameters');
  }

  var statusCriteria = [ELM.Activities.status.SYNCING, ELM.Activities.status.ACTIVATING, ELM.Activities.status.DEACTIVATING];

  if (targetSyncPending || _.contains(statusCriteria, status)) {
    return options.fn(this);
  }
  return options.inverse(this);
});

Handlebars.registerHelper('activitySyncFailed', function(syncRoot, options) {
  if (arguments.length < 1) {
    throw new Error('Handlebars#activitySyncFailed needs 1 parameter');
  }

  if (syncRoot.targetSyncFailed && !syncRoot.targetSyncPending) {
    return options.fn(this);
  }
  return options.inverse(this);
});

/*
  Joins array using provided separator and returns resultant string.

  Usage:
    {{join myArray "\n"}}
*/
Handlebars.registerHelper('join', function(array, separator) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#join needs 1 or 2 parameters.');
  }

  if (typeof separator !== 'string') {
    separator = ', ';
  }

  if (_.isArray(array)) {
    return array.join(separator).replace(/(\\r\\n|\\n|\\r)/g, '\n');
  }

  return '';
});

/*
  Checks whether a value matches with one of the provided set of values.

  Usage:
    {{#in myValue "value1" "value2" "value3"}}The value is the best!{{/in}}
*/
Handlebars.registerHelper('in', function(value) {
  var numOfArgs = arguments.length,
    options;

  if (numOfArgs < 3) {
    throw new Error('Handlebars#in needs at least 2 parameters.');
  }

  options = arguments[numOfArgs - 1];

  for (var i = 1; i < numOfArgs - 1; i++) {
    if (value === arguments[i]) {
      return options.fn(this);
    }
  }

  return options.inverse(this);
});

/*
  Checks whether a value does not match with one of the provided set of values.

  Usage:
    {{#notIn myValue "value1" "value2" "value3"}}The value is the best!{{/notIn}}
*/
Handlebars.registerHelper('notIn', function(value) {
  var numOfArgs = arguments.length,
    options;

  if (numOfArgs < 3) {
    throw new Error('Handlebars#notIn needs at least 2 parameters.');
  }

  options = arguments[numOfArgs - 1];

  for (var i = 1; i < numOfArgs - 1; i++) {
    if (value === arguments[i]) {
      return options.inverse(this);
    }
  }

  return options.fn(this);
});

/*
  Formats estimated revenue in terms of thousands(K) or millions(M)

  Usage:
    {{formatEstimatedValue 123.56 1}}
*/
Handlebars.registerHelper('formatEstimatedValue', function(value, decPlaces) {
  if (_.isNumber(value)) {
    var ONE_MILLION = 1000000,
      ONE_THOUSAND = 1000,
      currencySymbol = Handlebars.helpers.getCurrencySymbol.call(this);

    if (value / ONE_MILLION > 1) {
      value = value / ONE_MILLION;
      value = Handlebars.helpers.number.call(this, value, decPlaces);
      value = TSDK.I18n.get('{0}{1}M', [currencySymbol, value], '{0} argument is currency symbol, {1} argument is number and M is symbol for millions');
    } else if (value / ONE_THOUSAND > 1) {
      value = value / ONE_THOUSAND;
      value = Handlebars.helpers.number.call(this, value, decPlaces);
      value = TSDK.I18n.get('{0}{1}K', [currencySymbol, value], '{0} argument is currency symbol, {1} argument is number and K is symbol for thousands');
    } else {
      value = TSDK.I18n.get('<{0}1K', currencySymbol, 'Estimated lift is less than one thousand. {0} argument is currency symbol');
    }
  }
  return value || '---';
});

/*
 Shortens the number
 // 		K = thousands
 // 		M = millions
 // 		B = billions
 // 		T = trillion
 // 		P = quadrillion
 // 		E = quintillion

 Usage:
 {{formatRevenue 123.56 1}}
 */
Handlebars.registerHelper('formatRevenue', function(value) {

  if (_.isNumber(value)) {
    var ONE_QUINTILLION = 1000000000000000000,
      ONE_QUADRILLION = 1000000000000000,
      ONE_TRILLION = 1000000000000,
      ONE_BILLION = 1000000000,
      ONE_MILLION = 1000000,
      TEN_THOUSAND = 10000,
      HUNDRED_THOUSAND = 100000,
      ONE_THOUSAND = 1000;

    var symbol = '';
    var roundplaces = 2;

    if(value >= HUNDRED_THOUSAND)
      roundplaces = 1;
    else
      roundplaces = 2;

    if (value >= ONE_QUINTILLION) {
      value = (value / ONE_QUINTILLION);
      symbol = 'E';
    } else if (value >= ONE_QUADRILLION) {
      symbol = 'P';
      value = (value / ONE_QUADRILLION);
    } else if (value >= ONE_TRILLION) {
      symbol = 'T';
      value = (value / ONE_TRILLION);
    } else if (value >= ONE_BILLION) {
      symbol = 'B';
      value = (value / ONE_BILLION);
    } else if (value >= ONE_MILLION) {
      symbol = 'M';
      value = (value / ONE_MILLION);
    } else if (value >= TEN_THOUSAND) {
      symbol = 'K';
      value = (value / ONE_THOUSAND);
    }

    value = Handlebars.helpers.RoundNumber.call(null,value,roundplaces);

    return value + symbol;
  }
  return value;
});

/*
 Round atmost to decimal places
 Usage:
 {{RoundNumber 123.56 1}}
 */
Handlebars.registerHelper('RoundNumber', function(value,places) {

  if (_.isNumber(value)) {
    value = +(Math.round(value + "e+" + places)  + "e-" + places);
  }
  return value ;

});

/*
  Return currency symbol as per ELM.clientLocale

  Usage:
    {{getCurrencySymbol}}
*/
Handlebars.registerHelper('getCurrencySymbol', function() {
  return ELM.CurrencySymbol[ELM.clientLocale] || '$';
});

/*
  Returns display text for an activity type.

  Usage:
    {{getActivityDisplayType "A-B"}}
*/
Handlebars.registerHelper('getActivityDisplayType', function(value, size) {
  if (arguments.length < 1) {
    throw new Error('Handlebars#getActivityDisplayType needs at least 1 parameter');
  }

  if (size === 'short') {
    return ELM.Activities.activityDisplayTypes[value].shortText;
  }

  return ELM.Activities.activityDisplayTypes[value].longText;
});

/*
 Returns true if at least one of two parameters is equal to it's value

 Usage:
 {{ifAny param1 0 param2 "true"}}
 */

Handlebars.registerHelper('ifEither', function(lvar, lvalue, rvar, rvalue, options) {
  if (lvar === lvalue || rvar === rvalue) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
 Returns true if none of two parameters is equal to it's value

 Usage:
 {{ifNeither param1 0 param2 "true"}}doSomething{{/ifNeither}}
 */

Handlebars.registerHelper('ifNeither', function(lvar, lvalue, rvar, rvalue, options) {
  if (lvar !== lvalue && rvar !== rvalue) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
 If element does not exists in an array forward from current location

 Usage:
 {{#ifNotAfter arrayLength currentIndex}}The value (arrayLength - currentIndex) is less than or equal to 1!{{/ifNotAfter}}
 */
Handlebars.registerHelper('ifNotAfter', function(arrayLength, currentIndex, options) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#ifNotAfter needs 2 parameters');
  }

  if ((arrayLength - currentIndex) <= 1) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
 If element does not exists in an array backward from current location on zero indexed array.

 Usage:
 {{#ifNotBefore currentIndex}}The value currentIndex is less than 1!{{/ifNotBefore}}
 */
Handlebars.registerHelper('ifNotBefore', function(currentIndex, options) {
  if (arguments.length < 1) {
    throw new Error('Handlebars#ifNotBefore needs 1 parameters');
  }

  if (currentIndex < 1) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/**
 * Get display text for parameter used in template testing criteria.
 * Usage:
 * {{getTemplateTestingCriteriaParameter "currentPage.domain" "MBOX"}} returns "mBox Parameter browserTimeOffset"
 * {{getTemplateTestingCriteriaParameter "browserTimeOffset" "SITE_PAGE"}} returns "mBox Parameter browserTimeOffset"
 * {{getTemplateTestingCriteriaParameter "currentPage.query" "SITE_PAGE" "param1"}} returns "query parameter param1"
 */
Handlebars.registerHelper('getTemplateTestingCriteriaParameter', function(param, type, subParam) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#getTemplateTestingCriteriaParameter needs 2 parameters.');
  }

  var value;

  if (type === 'MBOX') {
    return 'mBox Parameter ' + param;
  } else if (typeof param === 'string') {
    value = param.substring(param.lastIndexOf('.') + 1);

    if (typeof subParam === 'string' && subParam) {
      value = value + ' parameter ' + subParam;
    }

    return value;
  }
});

/**
 * Get display text for operator used in template testing criteria.
 * Usage: {{getTemplateTestingCriteriaOperator "doesNotContainIgnoreCase"}} returns "does not contain"
 */
Handlebars.registerHelper('getTemplateTestingCriteriaOperator', function(value) {
  if (arguments.length < 1) {
    throw new Error('Handlebars#getTemplateTestingCriteriaOperator needs 1 parameter.');
  }

  var map = {
    'containsIgnoreCase': TSDK.I18n.get('contains'),
    'doesNotContainIgnoreCase': TSDK.I18n.get('does not contain'),
    'equals': TSDK.I18n.get('is (case sensitive)'),
    'doesNotEqualIgnoreCase': TSDK.I18n.get('is not')
  };

  if (map.hasOwnProperty(value)) {
    return map[value];
  }

  return value;
});

/** Returns number of experiences in 1:1 activity which is calculated by number of combinations of offers for each location
 * subtracted by number of excluded experiences.
 * Activity model JSON is passed as parameter to the helper function.
*/
Handlebars.registerHelper('getExperiencesCount', function(activityModel) {
  var count = 1,
    offers,
    offersLength;

  if (arguments.length < 1) {
    throw new Error('Handlebars#getExperiencesCount needs 1 parameter.');
  }

  var locations = activityModel['locations'],
    exclusions = activityModel['exclusions'];

  if (activityModel['activityType'] === 'MVT') {
    return activityModel['experiences'].length - exclusions;
  }

  _.each(locations, function(location) {
    offers = location['offers'];
    offersLength = offers.length;

    if (offers && offersLength) {
      if (offers[0]['included']) {
        count *= offersLength;
      } else {
        count *= offersLength - 1;
      }
    }
  });

  return count - (exclusions.length / locations.length);
});

/*
 Add right value and left value

 Usage:
 {{#add lvalue rvalue}}
 */
Handlebars.registerHelper('add', function(lvalue, rvalue) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#add needs 2 parameters');
  }

  return parseFloat(lvalue) + parseFloat(rvalue);
});

/**
 * Get display text for type of control experience.
 * Usage: {{getControlExperienceType "random"}} returns "Random Experiences
 */
Handlebars.registerHelper('getControlExperienceType', function(type) {
  if (arguments.length < 1) {
    throw new Error('Handlebars#getControlExperienceType needs 1 parameter.');
  }

  var map = {
    'random': TSDK.I18n.get('Random Experiences'),
    'default_content': TSDK.I18n.get('Default Experience'),
    'custom': TSDK.I18n.get('Selected Experience')
  };

  return map[type];
});

Handlebars.registerHelper('getOneToOneOffer', function(locations, locationIndex, offerIndex) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#getOneToOneOffer needs 3 parameters.');
  }

  return locations[locationIndex].offers[offerIndex]['jcr:title'];
});

Handlebars.registerHelper('getOneToOneLocation', function(locations, locationIndex) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#getOneToOneLocation needs 2 parameters.');
  }

  return locations[locationIndex]['jcr:title'];
});

Handlebars.registerHelper('getOneToOneOffer', function(locations, locationIndex, offerIndex) {
  if (arguments.length < 3) {
    throw new Error('Handlebars#getOneToOneOffer needs 3 parameters.');
  }

  return locations[locationIndex].offers[offerIndex]['jcr:title'];
});

Handlebars.registerHelper('getOneToOneAlgorithmPercentage', function(controlPercentage, algorithmsCount, algorithmIndex) {
  var totalAlgorithmPercentage = 100 - controlPercentage,
    algorithmPercentage;

  if (arguments.length < 2) {
    throw new Error('Handlebars#getOneToOneAlgorithmPercentage needs 2 parameters.');
  }

  algorithmPercentage = Math.floor(totalAlgorithmPercentage / algorithmsCount);

  if (algorithmIndex === algorithmsCount - 1) {
    algorithmPercentage = totalAlgorithmPercentage - (algorithmsCount - 1) * algorithmPercentage;
  }

  return algorithmPercentage;
});

/**
 * Returns 'jcr:title' for a list item with property 'key' = 'val'. If not found, returns 'defaultTitle'.
 */
Handlebars.registerHelper('getItemTitleFromList', function(list, key, val, defaultTitle) {
  var item;

  if (arguments.length < 3) {
    throw new Error('Handlebars#getItemTitleFromList needs 3 parameters.');
  }

  item = _.filter(list, function(item) { return item[key] === val; })[0];

  return item && item['jcr:title'] || defaultTitle || '';
});

/*
 Returns value of a field inside an object if available. The object can be represented as multi-leveled.

 Usage:
 {{getValue key1 key2 key3 key4 key5}} returns value of key1.key2.key3.key4.key5 where key1 is a global object.

 Example:
 To get value of ELM.ReportMetrics.conversionRate, you may write
 {{getValue "ELM.ReportMetrics.conversionRate"}}
 or {{getValue "ELM.ReportingMetrics" "conversionRate"}}
 or {{getValue "ELM" "ReportMetrics" "conversionRate"}}
 */
Handlebars.registerHelper('getValue', function() {
  var keys,
    value = window;

  if (arguments.length < 2) {
    throw new Error('Handlebars#getValue needs at least 1 parameter.');
  }

  keys = Array.prototype.slice.call(arguments, 0, arguments.length - 1);
  keys = keys.join('.').split('.');

  _.each(keys, function(key) {
    value = value && value[key];
  });

  return value;
});

/*
Returns true if at all parameters are equal to it's value

 Usage:
 {{ifAllEqual param1 0 param2 "true"}}
*/
Handlebars.registerHelper('ifAllEqual', function() {
  var params = Array.prototype.slice.call(arguments, 0),  //"transform" into an array
    options = params.pop(),  // Get the options out of the parameters array
    length = params.length,
    isEqual = false,
    index;

  if (length % 2 != 0) {
    throw new Error('Handlebars#ifAllEqual needs even number of arguments');
  }

  for (index = 0; index < length; index += 2) {
    if (params[index] === params[index + 1]) {
      isEqual = true;
    } else {
      isEqual = false;
      break;
    }
  }

  if (isEqual) {
    return options.fn(this);
  }

  return options.inverse(this);
});

/*
 Returns the icon class for confidence in report summary.

 Usage:
 {{confidenceIcon confidence}}
 */
Handlebars.registerHelper('confidenceIcon', function(confidence) {
  var confidenceIcon;

  if (confidence >= 0 && confidence < 60) {
    confidenceIcon = 'icon-confidenceone';
  } else if (confidence >= 60 && confidence < 75) {
    confidenceIcon = 'icon-confidencetwo';
  } else if (confidence >= 75 && confidence < 90) {
    confidenceIcon = 'icon-confidencethree';
  } else if (confidence >= 90 && confidence <= 100) {
    confidenceIcon = 'icon-confidencefour';
  } else {
    // Case where the confidence value is not in range.
    return '';
  }

  return confidenceIcon;
});

/*
 Returns exact name of OS in form of HTML string

 Usage:
 {{getOSValue jsString}}
 */
Handlebars.registerHelper('getOSValue', function(value) {
  var osMap = {
    'osAndroid': 'Android',
    'osOsx': 'iOS',
    'osWindows': 'Windows',
    'osLinux': 'Linux',
    'osProprietary': 'Proprietary',
    'osSymbian': 'Symbian',
    'osRim': 'Blackberry'
  };

  return TSDK.I18n.get(osMap[value] || '');
});

/*
 Returns HTML string by replacing all carriage returns with line break tags.

 Usage:
 {{getStringWithLineBreaks jsString}}
 */
Handlebars.registerHelper('getStringWithLineBreaks', function(jsString) {
  var escapedString = Handlebars.Utils.escapeExpression(jsString);

  return new Handlebars.SafeString(escapedString.replace(/\r?\n/g, '<br>'));
});

/*
 Checks if the current browser is same as input browser string.
 Possible values IE, FIREFOX, CHROME else throws error.

 Usage:
 {{#isBrowser 'IE'}}ie_specific_stuff{{else}}non_ie_specific_stuff{{/isBrowser}}
 */
Handlebars.registerHelper('isBrowser', function(browserString, options) {
    var isBrowserStringTrue;

    switch(browserString) {
      case 'IE':
        isBrowserStringTrue = ELM.BrowserDetector.isIE();
        break;

      case 'FIREFOX':
        isBrowserStringTrue = ELM.BrowserDetector.isFirefox();
        break;

      case 'CHROME':
        isBrowserStringTrue = ELM.BrowserDetector.isChrome();
        break;

      default:
        throw new Error('Handlebars#isBrowser Invalid browser string:' + browserString);
    }

    if (isBrowserStringTrue) {
      return options.fn(this);
    } else {
      return options.inverse(this);
    }
  });

/**
  General Handlebar helper to read data from global object

  Usage:
    {{readGlobalVar "ELM.reportingEngine"}} //get value from global object
    {{readGlobalVar "ELM.Activities.displayStatus" value}} //get value from global object with key as 'value'
*/
Handlebars.registerHelper('readGlobalVar', function(globalVarName, key) {
  if (arguments.length < 1) {
    throw new Error('Handlebars#readGlobalVar needs atleast 1 parameter.');
  }

  var params = globalVarName.split('.'), //Break the parameter of form "ELM.scEnabled"
    valueInGlobalObject = window[params[0]],  //Get global object
    length = params.length,
    index = 1;

  while (index < length) {
    if (valueInGlobalObject) {
      valueInGlobalObject = valueInGlobalObject[params[index]];  //Get data from object
    } else {
      throw new Error("Data does not exist in global object");
    }

    index++;
  }

  if (typeof key === 'string') {
    return valueInGlobalObject[key] || '';
  }

  return valueInGlobalObject;
});

/**
  General Handlebar helper to compare data from global object

  Usage:
    {{#ifGlobalVar "ELM.scEnabled"}}Show stuff{{/ifGlobalVar}}
    {{#ifGlobalVar "ELM.scEnabled" true}}Show stuff{{/ifGlobalVar}} //if ELM.scEnabled === true
*/
Handlebars.registerHelper('ifGlobalVar', function(globalVarName, value, options) {
  if (arguments.length < 2) {
    throw new Error('Handlebars#ifGlobalVar needs atleast 1 parameter.');
  }

  var valueInGlobalObject = Handlebars.helpers.readGlobalVar.call(this, globalVarName);

  if (typeof value === 'object') {
    options = value;
    value = undefined;
  }

  if ((value === undefined && valueInGlobalObject) ||
    (value !== undefined && valueInGlobalObject === value)) {
    return options.fn(this);
  } else {
    return options.inverse(this);
  }
});

Handlebars.registerHelper('isAnalyticsEnabled', function(activityType, options) {
  if (arguments.length != 2) {
    throw new Error('Handlebars#isAnalyticsEnabled needs 1 parameter');
  }

  if (ELM.Activities.isAnalyticsEnabled[activityType]) {
    return options.fn(this);
  }

  return options.inverse(this);
});

var TSDK = TSDK || {};

TSDK.UI = TSDK.UI || {};
TSDK.UI.Templates = TSDK.UI.Templates || {};

TSDK.Enums = TSDK.Enums || {};

var Granite = Granite;

TSDK.I18n = TSDK.I18n ||
  Granite && Granite.I18n ||
  {
    get: function(str) {
      var values = Array.prototype.slice.call(arguments, 1);
      for (var i = 0; i < values.length; i++) {
        var key = '[{]' + i + '[}]';
        str = str.replace(new RegExp(key, 'g'), values[i]);
      }
      return str;
    },
    getVar: function(text) {
      return text;
    },
    getLocale: function() {
      return 'en';
    }
  };
TSDK.UI.Util = {
  PANEL_MESSAGE_POSITION: 'pos-l-34-imp pos-t-3-1',

  clone: function(obj) {
    var copy,
      index,
      objLength;

    // Handle the 3 simple types, and null or undefined
    if (null == obj || 'object' != typeof obj) {
      return obj;
    }

    // Handle Date
    if (obj instanceof Date) {
      copy = new Date();
      copy.setTime(obj.getTime());

      return copy;
    }

    // Handle Array
    if (obj instanceof Array) {
      copy = [];
      objLength = obj.length;

      for (index = 0; index < objLength; index += 1) {
        copy[index] = this.clone(obj[index]);
      }
      return copy;
    }

    // Handle Object
    if (obj instanceof Object) {
      copy = {};
      for (var attr in obj) {
        if (obj.hasOwnProperty(attr)) copy[attr] = this.clone(obj[attr]);
      }
      return copy;
    }

    throw new Error("Unable to copy obj! Its type isn't supported.");
  },

  addProtocolToUrl: function(url) {
    var protocol = /^(https?:\/\/)/;

    if (url && !protocol.test(url)) {
      url = 'http://' + url;
    }

    return url;
  },

  isUrlValid: function($urlField, $urlInputInvalid) {
    var value = $urlField.val().trim();

    if (!value || ($urlInputInvalid.length)) {
      return false;
    }

    return true;
  },

  // Adapted from https://gist.github.com/dperini/729294
  UrlValidationRegex:  new RegExp(
    "^" +
      // protocol identifier
      "(?:(?:https?|ftp)://)" +
      // user:pass authentication
      "(?:\\S+(?::\\S*)?@)?" +
      "(?:" +
      // IP address dotted notation octets
      // excludes loopback network 0.0.0.0
      // excludes reserved space >= 224.0.0.0
      // excludes network & broacast addresses
      // (first & last IP address of each class)
      "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" +
      "(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" +
      "(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" +
      "|" +
      // host name
      "(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)" +
      // domain name
      "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*" +
      // TLD identifier
      "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))?" +
      ")" +
      // port number
      "(?::\\d{2,5})?" +
      // resource path
      "(?:/[^\\s]*)?" +
      "$", "i"
  ),

  UrlValidationWithoutProtocolRegex:  new RegExp(
    "^" +
      // user:pass authentication
      "(?:\\S+(?::\\S*)?@)?" +
      "(?:" +
      // IP address dotted notation octets
      // excludes loopback network 0.0.0.0
      // excludes reserved space >= 224.0.0.0
      // excludes network & broacast addresses
      // (first & last IP address of each class)
      "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" +
      "(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" +
      "(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" +
      "|" +
      // host name
      "(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)" +
      // domain name
      "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*" +
      // TLD identifier
      "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))?" +
      ")" +
      // port number
      "(?::\\d{2,5})?" +
      // resource path
      "(?:/[^\\s]*)?" +
      "$", "i"
  ),

  getActualCSS: function($div, cssProp) {
    var $clonedDiv = $div.clone().attr('id', false),
      cssValue;

    $clonedDiv
      .css({
        visibility: 'hidden',
        display: 'block',
        position: 'absolute'
      })
      .appendTo('body');

    cssValue = $clonedDiv.css(cssProp);
    $clonedDiv.remove();

    return cssValue;
  },

  getCompleteResourcePath: function(reference) {
    return '/content/mac/' + ELM.client + '/target' + reference;
  },

  sendGETRequest: function(options) {
    return $.ajax({
      url: options.url,
      async: (typeof options.async == 'undefined') ? true : options.async,
      type : 'GET'
    });
  },

  isInteger: function(data) {
    return data.match(/^\d+$/);
  },

  isFloat: function(data) {
    return data.match(/^\d*.?\d+$/);
  },

  showConfirmationDialog: function(confirmationDialog, options) {
    confirmationDialog.set({
      heading: options.heading,
      content: options.message,
      buttons: [{
        label: TSDK.I18n.get('Cancel'),
        click: function(evt) {
          evt.dialog.hide();
        }.bind(this)
      },
      {
        label: options.label,
        className: 'primary',
        click: function(evt) {
          options.callback();
          evt.dialog.hide();
        }.bind(this)
      }]
    }).show();
  },

  showErrorNotification: function(options) {
    F.trigger('errorNotification', {
      message: options.message,
      heading: options.heading || TSDK.I18n.get('ERROR'),
      className: options.className
    });
  },

  showSuccessNotification: function(options) {
    F.trigger('successNotification', {
      message: options.message,
      heading: options.heading,
      className: options.className
    });
  },

  showNoticeNotification: function(options) {
    F.trigger('noticeNotification', {
      message: options.message,
      heading: options.heading,
      className: options.className
    });
  },

  showInfoNotification: function(options) {
    F.trigger('infoNotification', {
      message: options.message,
      heading: options.heading,
      className: options.className
    });
  },

  hasArrayDuplicates: function (array) {
    return _.unique(array).length !== array.length;
  },

  trimArrayValues: function(obj) {
    var array = [],
      index = 0;

    if (!_.isArray(obj)) {
      return obj;
    }

    _.each(obj, function(item){
      if (item.trim()) {
        array[index++] = item;
      }
    });

    return array;
  },

  hasStringWhiteSpaces: function(string) {
    return (_.isString(string) && /\s/g.test(string));
  },

  getFragment: function(content) {
    var container = document.createElement('div'),
      fragment = document.createDocumentFragment(),
      i;

    container.innerHTML = content;

    for (i = container.childNodes.length - 1; i >= 0; i -= 1) {
      fragment.insertBefore(container.childNodes[i], fragment.firstChild);
    }

    return fragment;
  },

  /**
   *
   * @param initialAttributes Json object representing the initial state of the activity model.
   * @param options Map having the configuration for the comparison. Caller can specify properties
   *                to ignore keys.
   *                options = {
   *                  ignoreKeys : [ thumbnailUrl, elm:references ],
   *                  ignoreKeysOfArrayElements : {
   *                    metrics : [ isGoalMetric ],
   *                    experiences : [ thumbnailUrl ]
   *                  },
   *                  ignoreKeysOfObjectElements: {
   *                    location : [ categoryIdRequired, entityIdRequired ]
   *                  }
   *                }
   * @returns {boolean} true or false based on if the model has changed or not.
   */
  hasChanged: function(originalObject, backupObject, options) {
    var arrayTypeValue,
      objectTypeValue;

    options = options || {};
    options.ignoreKeys = options.ignoreKeys || [];
    options.ignoreKeysOfArrayElements = options.ignoreKeysOfArrayElements || {};
    options.ignoreKeysOfObjectElements = options.ignoreKeysOfObjectElements || {};

    if (_.isObject(backupObject)) {
      // Handle the properties to be ignored.
      _.each(options.ignoreKeys, function(keyToIgnore) {
        // for ignoring the value we set the value of model in the backup.
        backupObject[keyToIgnore] = originalObject.get(keyToIgnore);
      });

      // We need to have a separate case of ignoring properties of array properties.
      _.each(options.ignoreKeysOfArrayElements, function(keysToIgnore, key) {
        arrayTypeValue = originalObject.get(key) || [];
        _.each(arrayTypeValue, function(arrayItem, index){
          _.each(keysToIgnore, function(keyToIgnore) {
            if (arrayItem.hasOwnProperty(keyToIgnore) && backupObject[key] && backupObject[key][index]) {
              backupObject[key][index][keyToIgnore] = arrayTypeValue[index][keyToIgnore];
            }
          });
        });
      });

      // We need to have a separate case of ignoring properties of object properties.
      _.each(options.ignoreKeysOfObjectElements, function(keysToIgnore, key) {
        objectTypeValue = originalObject.get(key) || {};
        _.each(keysToIgnore, function(keyToIgnore) {
          if (objectTypeValue.hasOwnProperty(keyToIgnore) && backupObject[key]) {
            backupObject[key][keyToIgnore] = objectTypeValue[keyToIgnore];
          }
        });
      });

      return !_.isEqual(backupObject, originalObject.toJSON());
    }

    return true;
  },

  /**
   * Resets coralUI Select widget with selection of provided value.
   * Value is an optional argument.
   */
  updateSelectWidget: function($select, value) {
    if (value) {
      $select.find('select').val(value);
    }
    $select.find('ul').remove();
    $select.removeData('select').select();
  },

  escape : function (message) {
    return Handlebars.Utils.escapeExpression(message);
  },

  /**
   * Check if two urls string are equal or not.
   * options :
   * 1.strict : check enforces type check.
   * 2.similar : ignores empty hash or trailing forward slash in url.
   * 3.blank: javascript equals check.
   * */
  compareURLs: function(url1, url2, options) {
    var options = options || {},
      removeTrailingSlashAndEmptyHash = function (url) {
        var lastChar = url[url.length - 1];

        while (['/', '#'].indexOf(lastChar) !== -1) {
          url = url.substring(0, url.length - 1);

          lastChar =  url[url.length - 1];
        }

        return url;
      };

    if (options['strict']) {
      return url1 === url2;
    }

    if (options['similar']) {
      return removeTrailingSlashAndEmptyHash(url1) === removeTrailingSlashAndEmptyHash(url2);
    }

    return url1 == url2;
  },

  escapeHTMLAttributes: function(attr) {
    attr = attr || '';
    // Prepend all question marks, equal to, hashs, colons, periods with \\
    return attr.replace(/(\?|=|#|:|\.|\[|\]|\/)/g, '\\$1');
  },

  /**
   * Removes all non-digit characters from a string.
   * (conversion of localized currencies to integer)
   * Note: If using for comparison of currency strings,
   * decimal accuracy must be consistent.
   * */
  convertCurrencyStringToInteger: function(currencyString) {
    var convertToIntRegEx = /[^0-9]+/g;

    return Number(currencyString.replace(convertToIntRegEx,""));
  },

  getResolutionFromDates: function(startDate, endDate) {
    var ONE_DAY = 86400000,
      differenceOfDays = (moment(endDate) - moment(startDate)) / ONE_DAY,
      HOURLY_TO_DAILY_THRESHOLD = 3,
      DAILY_TO_WEEKLY_THRESHOLD = 100;

    if (differenceOfDays <= HOURLY_TO_DAILY_THRESHOLD) {
      return 'hour';
    }
    if (differenceOfDays <= DAILY_TO_WEEKLY_THRESHOLD) {
      return 'day';
    }

    return 'week';
  },

  isActivityImported: function(activityId) {
    var idParts = activityId && activityId.split('/');

    return (idParts.length === 3 && idParts[0] === 'imported');
  }
};

F.Component.prototype.propagateEvent = function(eventName, event) {
  var newEventObject = {},
    eventObject = event || {};

  if (this.shouldPropagateEvent(eventName, eventObject)) {
    if (this instanceof TSDK.UI.Component) {
      if (!eventObject.name || eventObject.name !== eventName) {
        newEventObject.name = eventName;
        newEventObject.data = TSDK.UI.Util.clone(eventObject);
        newEventObject.path = this.toString().toLowerCase();
        newEventObject.target = this;
        eventObject = newEventObject;
      } else {
        eventObject.path = this.toString().toLowerCase() + '/' + eventObject.path;
      }
    }

    this.trigger(eventName, eventObject);

    if (this.parent && this.parent.propagateEvent) {
      this.parent.propagateEvent(eventName, eventObject);
    }

  }
};

F.Component.prototype.shouldPropagateEvent = function(eventName, eventObject) {
  //override the method to implement event and component specific logic
  return true;
};

/**
 * F.Component.prototype.destruct() also removes view.el
 * Use this function to destruct and unbind listeners for the component but retain view.el
 */
F.Component.prototype.destructButKeepEl = function() {
  if (this.view) {
    if (this.view.$el) {
      this.view.$el
        .unbind()
        .undelegate()
        .empty();
    }
    if (this.view.model && this.view.model.off) {
      this.view.stopListening();
    }
  }
  this.teardownIfSetup();
  this.removeComponents();
  this.stopListening();
  delete this.components;
};

TSDK.EnumUtil = {
  addEnum: function(type, props) {
    if (typeof type !== 'string' || type === '') {
      throw new Error('Cannot create enum: Invalid enum type.');
    }

    if (typeof props === 'object') {
      return TSDK.Enums[type] = Object.freeze(props);
    } else {
      throw new Error('Cannot create enum: Enum properties should be key-value pairs.');
    }
  },

  getProperties: function(enumType) {
    var props = TSDK.Enums[enumType];
    return (typeof props === 'object') ? Object.keys(props) : [];
  },

  getValues: function(enumType, unique) {
    var props = TSDK.Enums[enumType],
      values = [],
      uniqueValueMap = {},
      val;

    if (typeof props === 'object') {
      for (var key in props) {
        val = props[key];
        if (!unique || !uniqueValueMap[val]) {
          values.push(val);
          uniqueValueMap[val] = true;
        }
      }
    }

    return values;
  },

  removeEnum: function(enumType) {
    delete TSDK.Enums[enumType];
  }
};

"use strict";

TSDK.UI.Component = new PseudoClass({
  toString: 'tsdk-ui-component',

  extend: F.ModelComponent,

  construct: function(options) {
    if (options) {
      this.setPreprocessor(options.preprocessor);
      this.setPostprocessor(options.postprocessor);
      this.setFetchOptions(options.fetchOptions || { url: options.url });
      this.setData(options.data);
      this.configure(options.config);
    }
    this.initialize(options);
  },

  initialize: function() {
    // to be implemented
    this.throwError('No definition found for initialize.');
  },

  configure: function(config) {
    this.config = _.extend({}, this.config, config);
    this.handleConfigChanged();
  },

  handleConfigChanged: function() {
    // to be overridden (optional)
  },
  
  setPreprocessor: function(callback) {
    if (typeof callback === 'function') {
      this.preprocessor = callback;
    }
  },

  setPostprocessor: function(callback) {
    if (typeof callback === 'function') {
      this.postprocessor = callback;
    }
  },

  setFetchOptions: function(options) {
    this.fetchOptions = options;
  },

  fetch: function(options) {
    var that = this,
      fetchOptions = _.extend({}, this.fetchOptions, options);

    if (!fetchOptions) {
      this.throwError('Cannot fetch. Parameters are not set.')
    }

    if (!fetchOptions.url) {
      throw new Error('Cannot fetch. URL is empty.');
    }

    $.ajax({
      url: fetchOptions.url,
      type: 'get',
      async: fetchOptions.async !== false,
      success: function(response) {
        that.setData(response, fetchOptions.process);
        if (typeof fetchOptions.success === 'function') {
          fetchOptions.success.apply(null, arguments);
        }
      },
      error: function() {
        if (typeof fetchOptions.error === 'function') {
          fetchOptions.error.apply(null, arguments);
        }
      }
    });
  },

  loadModel: function(model) {
    this.load(model);
  },
  
  setData: function(data, process) {
    if (data && process !== false && this.preprocessor) {
      data = this.preprocessor(data);
    }

    this.setContext(data);

    if (this.view) {
      this.render();
    }
  },

  getData: function(process) {
    var data = this.getContext();

    if (process !== false && this.postprocessor) {
      return this.postprocessor(data);
    }

    return data;
  },

  setContext: function(context) {
    if (context && this.CONTEXT_TYPE_ARRAY && _.isArray(context)) {
      context = { items: context };
    }
    this.loadModel(context);
  },

  getContext: function() {
    var context = this.model.toJSON();

    if (this.CONTEXT_TYPE_ARRAY) {
      return context.items;
    }
    return context;
  },

  validate: function(notify) {
    // to be overridden (optional)
    return true;
  },

  throwError: function(msg) {
    throw new Error(this.toString() + ': ' + msg);
  }
});
"use strict";

TSDK.UI.ConfigurableComponent = new PseudoClass({
  toString: 'tsdk-ui-configurableComponent',

  extend: TSDK.UI.Component,

  getConfigInModel: function(configName) {
    var config = this.model && this.model.get('config');
    return config && config[configName];
  },

  setConfigInModel: function(configName, configValue) {
    var config = this.model && this.model.get('config');
    if (config) {
      config[configName] = configValue;
    }
  },

  getContext: function () {
    var context = this.model.toJSON();

    if (this.CONTEXT_TYPE_ARRAY) {
      return context.items;
    } else {
      return _.omit(context, 'config');
    }
  },

  handleConfigChanged: function () {
    if (this.model) {
      this.model.set('config', this.config);
    }
  },

  getData: function() {
    return _.omit(this._super.apply(this, arguments), [ 'config' ]);
  }
});

TSDK.EnumUtil.addEnum('SpecialMboxes', {
  ANY_MBOX_LOCATION: '** any mbox **',
  DISPLAY_MBOXES: '** display mboxes **',
  CLICK_FROM_DISPLAY_MBOXES: '** click from display mbox **'
});
"use strict";

TSDK.UI.MboxPicker = new PseudoClass({
  toString: 'MboxPicker',

  extend: TSDK.UI.Component,

  CONTEXT_TYPE_ARRAY: true,

  View: F.View.extend({
    events: {
      'change coral-autocomplete': 'handleMboxSelected'
    }
  }),

  initialize: function(options) {
    this.initView(options);
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.MboxPickerComponent.MboxPicker
    });
  },

  loadModel: function(model) {
    var extendedModel = {};
    if (model) {
      _.extend(extendedModel, this.config, model);
      this.updateSpecialMboxes(extendedModel);
    }
    this.load(extendedModel);
  },

  updateSpecialMboxes: function(model) {
    var specialMboxes = model['specialMboxes'];
    if (specialMboxes === 'all') {
      model['specialMboxes'] = TSDK.EnumUtil.getValues('SpecialMboxes');
    } else if (!_.isArray(specialMboxes)) {
      delete model['specialMboxes'];
    }
  },

  handleRenderComplete: function() {
  },

  handleMboxSelected: function(evt) {
    var selectedListItem = evt.target,
      $selectedListItem = $(selectedListItem),
      selected = selectedListItem.value,
      isSpecial = $selectedListItem.find('coral-autocomplete-item[selected]').data('special');

    this.model.set('selected', selected);
    this.trigger('mbox:selected', { value: selected, isSpecial: isSpecial });
  },

  getContext: function() {
    return this.model.get('selected');
  },

  handleConfigChanged: function() {
    if (this.model) {
      this.model.set(this.config);
    }
  }
});

"use strict";

TSDK.UI.MetricsComponent = new PseudoClass({
  toString: 'Metrics',

  extend: TSDK.UI.Component,

  CONTEXT_TYPE_ARRAY: true,

  View: F.View.extend({
    events: {
      'click #addmetrics': 'addNewMetric',
      'change .conversion-metric-checkbox': 'handleConversionMetric'
    }
  }),

  constants: {
    REPORTING_SOLUTION_ANALYTICS: 'analytics'
  },

  initialize: function(options) {
    this.initView(options);
    this.loadModel({
      reportingSolution: options.reportingSolution,
      config: this.config
    });
    this.registerListeners();
    this.registerVars(options);
    this.registerBinders();
  },

  loadModel: function(model) {
    this.load(model);
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.MetricsComponent.Metrics
    });
  },

  registerListeners: function() {
    this.listenTo(this.view, 'renderComplete', function() {
      this.renderSubViews();
    });
  },

  registerVars: function(options) {
    this.mboxPickerOptions = options.mboxPicker;
    this.reportSuite = options.reportSuite;
    this.analyticsMetrics = options.analyticsMetrics;
    this.setGoalMetricConfig();
  },

  registerBinders: function() {
    this.bind('updateActiveMetric');
    this.bind('triggerMetricChanged');
    this.bind('handleConversionMetric');
  },

  renderSubViews: function() {
    this.destructComponents();

    var metrics = this.getMetrics();

    this.metricIndex = 0;
    this.$goalMetricEl = this.view.$('.goal');
    this.$conversionMetricEl = this.view.$('.conversion');
    this.$adMetricEl = this.view.$('.additional');

    if (metrics && metrics.length) {
      _.each(metrics, function(metricModel, index) {
        this.metricIndex = index;
        this.addMetric(metricModel);
      }, this);
    } else {
      this.addMetric();
    }

    this.setConversion();
  },

  addMetric: function(metricModel, shouldCollapse) {
    var metricComponentName = 'metric' + this.metricIndex,
      isNewMetric = !metricModel,
      isGoalMetric = this.metricIndex === 0,
      shouldCollapse = _.isBoolean(shouldCollapse) ? shouldCollapse : metricModel,
      metric,
      parentElement;

    metricModel = metricModel || {};
    metricModel.activityType = 'A-B';
    metricModel.isGoalMetric = isGoalMetric;
    if (isGoalMetric && this.config && this.config.goalMetric) {
      metricModel.config = this.config.goalMetric;
    } else {
      metricModel.config = this.config || {};
    }

    if (isNewMetric) {
      metricModel['title'] = metricModel.isGoalMetric ? TSDK.I18n.get('MY PRIMARY GOAL') : this.generateAdditionalMetricName();
    }

    parentElement = metricModel.isGoalMetric ? this.$goalMetricEl : (metricModel.conversion ? this.$conversionMetricEl : this.$adMetricEl);
    if (metricModel.conversion) {
      this.conversionMetricIndex = this.metricIndex;
    }

    this.components[metricComponentName] && this.components[metricComponentName].destructButKeepEl();

    if (this.isAnalyticsMetric()) {
      metricModel.reportSuite = this.reportSuite;
      metricModel.analyticsMetrics = this.analyticsMetrics;

      metric = this.addComponent(new TSDK.UI.MetricsComponent.MetricsItemA4T({
        el: $('<div class="metric' + this.metricIndex + '" />').appendTo(parentElement),
        model: metricModel,
        analyticsMetrics: this.analyticsMetrics,
        visible: true,
        mboxPickerOptions: this.mboxPickerOptions,
        collapsed: shouldCollapse
      }), metricComponentName)
      .on('expand', this.updateActiveMetric)
      .on('metricsItem:addAudience', this.delegateShowAudiencePickerEvent)
      .on('change', this.triggerMetricChanged);
    } else {
      metric = this.addComponent(new TSDK.UI.MetricsComponent.MetricsItem({
        el: $('<div class="metric' + this.metricIndex + '" />').appendTo(parentElement),
        model: metricModel,
        visible: true,
        mboxPickerOptions: this.mboxPickerOptions,
        collapsed: shouldCollapse
      }), metricComponentName)
      .on('expand', this.updateActiveMetric)
      .on('metricsItem:addAudience', this.delegateShowAudiencePickerEvent)
      .on('change', this.triggerMetricChanged);
    }

    this.propagateEvent('metric:added', metric.model.toJSON());

    return metric;
  },

  triggerMetricChanged: function(metricModel) {
    this.propagateEvent('metric:changed', metricModel.toJSON());
  },

  delegateShowAudiencePickerEvent: function(audiencePickerOptions) {
   // this.propagateEvent('metric:addAudience', audiencePickerOptions);
  },

  addNewMetric: function() {
    var metric;

    this.metricIndex += 1;
    metric = this.addMetric();
    this.updateActiveMetric(metric);
  },

  removeMetric: function(metric) {
    this.removeComponent(metric);
    this.propagateEvent('metric:removed', metric);
  },

  updateActiveMetric: function(metric) {
    this.activeMetric = metric.toString();
    this.collapseInactiveMetrics();
  },

  collapseInactiveMetrics: function() {
    for (var metric in this.components) {
      if (metric !== this.activeMetric) {
        this.components[metric].collapse();
      }
    }
  },

  setAnalyticsMetrics: function(analyticsMetrics) {
    var analyticsGoal = this.components.metric0;

    this.analyticsMetrics = analyticsMetrics;

    if (analyticsGoal) {
      analyticsGoal.setAnalyticsMetrics(analyticsMetrics);
    }
  },

  generateAdditionalMetricName: function() {
    var namesInUse = this.getComponentsTitle(),
      prefix = TSDK.I18n.get('ADDITIONAL GOAL '),
      index = 1,
      metricName;

    do {
      metricName = prefix + (index++);
    } while (namesInUse.indexOf(metricName) !== -1);

    return metricName;
  },

  getComponentsTitle: function() {
    return _.map(this.components, function(component) { return component.model.getTitle(); });
  },

  getIncompleteComponentsCount: function(highlightErrors) {
    // TODO Use  _.omit(this.components, function(component) { return !component.isComplete()}).length;
    // once underscore is upgraded. Currently this code does not work due to underscore bug.
    var count = 0;
    _.each(this.components, function(component) {
      if (!component.isComplete(highlightErrors)) {
        count++;
      }
    });

    return count;
  },

  setGoalMetricConfig: function() {
    if (this.config) {
      this.config.goalMetric = _.extend({}, _.omit(this.config, 'goalMetric'), this.config.goalMetric);
    }
  },

  handleConversionMetric: function(evt) {
    if (evt.target.checked) {
      this.removeConversionMetric()
    } else {
      this.addConversionMetric();
    }
  },

  addConversionMetric: function() {
    var metric;

    this.metricIndex += 1;
    this.components['metric0'].setConversion(false);
    metric = this.addMetric({
      conversion: true,
      title: TSDK.I18n.get('CONVERSION METRIC')
    }, false);
    this.updateActiveMetric(metric);
  },

  removeConversionMetric: function() {
    this.components['metric' + this.conversionMetricIndex].remove();
    this.components['metric0'].setConversion(true);
  },

  setConversion: function() {
    var conversionMetricCheckboxElement = this.view.$('.conversion-metric-checkbox').get(0),
      shouldEnableCheckbox = false;

    if (this.config.POST_GOAL_METRIC_TRACKING_ENABLED && (this.components['metric0'].getConversion() || !this.conversionMetricIndex)) {
      shouldEnableCheckbox =  true;
      this.components['metric0'].setConversion(true);
    }

    if (conversionMetricCheckboxElement) {
      Coral.commons.ready(conversionMetricCheckboxElement, function() {
        conversionMetricCheckboxElement.checked = shouldEnableCheckbox ? true : false;
      });
    }
  },

  hasChanged: function() {
    return _.some(this.components, function(component) {
       return component.hasChanged();
    });
  },

  partialSave: function() {
    var metrics = Object.keys(this.components),
      oldMetricsCount = this.getMetrics().length,
      i,
      component;

    // we remove the newly added metrics from the end if empty.
    // We break after finding first changed metric. So we do not validate in partial save.
    for (i = metrics.length - 1; i >= oldMetricsCount; i--) {
      component = this.components[metrics[i]];
      if (!component.hasChanged()) {
        this.removeComponent(metrics[i]);
        continue;
      }

      break;
    }

    this.saveMetrics();
    return true;
  },

  saveMetrics: function() {
    var metrics = [];

    _.each(this.components, function(component, metricKey) {
      metrics.push(this.filterUnwantedMetricsAttributes(component.model.toJSON()));
    }, this);

    this.setMetrics(metrics);
    this.metricIndex = metrics.length;
  },

  destructComponents: function() {
    for (var component in this.components) {
      this.components[component].destruct();
      delete this[component];
      delete this.components[component];
    }

    return this;
  },

  hasMetricsToBeSaved: function() {
    return !_.isEmpty(this.components) && this.hasChanged();
  },

  validate: function(highlightErrors) {
    var partMetricsLength = this.getIncompleteComponentsCount(highlightErrors),
      goalMetricWorth = this.components.metric0.model.getWorth(),
      titles = this.getComponentsTitle(),
      message = partMetricsLength === 1 ?
        TSDK.I18n.get('A definition is incomplete for 1 metric. Review the highlighted fields below.') :
        TSDK.I18n.get('Metric definitions are incomplete for {0} metrics. Review the highlighted fields below.', partMetricsLength);

    if (partMetricsLength) {
      this.notifyError({
        message: message
      });
      return false;
    }

    if (titles.length !== _.uniq(titles).length) {
      this.notifyError({
        message: TSDK.I18n.get('You have duplicate metric names.')
      });
      return false;
    }

    if (goalMetricWorth && isNaN(goalMetricWorth)) {
      this.notifyError({
        message: TSDK.I18n.get('Enter a valid number for estimated value.')
      });
      return false;
    }
    return true;
  },

  notifyError: function(options) {
    //console.log('Error: ' + options.message);
    this.propagateEvent('error', options);
  },

  filterUnwantedMetricsAttributes: function(metricData) {
    var attributesToBeExcluded = ['mboxes', 'isGoalMetric', 'activityType', 'config', 'isAdvancedSettingsVisible', 'analyticsMetrics'];
    return _.omit(metricData, attributesToBeExcluded);
  },

  isComplete: function() {
    return this.validate();
  },

  getMetrics: function() {
    return this.metrics || [];
  },

  setMetrics: function(metrics) {
    this.metrics = metrics;
  },

  getContext: function() {
    this.saveMetrics();
    return this.getMetrics();
  },

  setContext: function(metrics) {
    this.setMetrics(metrics);
  },

  isAnalyticsMetric: function() {
    return this.model.get('reportingSolution') === this.constants.REPORTING_SOLUTION_ANALYTICS;
  },

  setReportingSolution: function(reportingSolution, options) {
    this.model.set('reportingSolution', reportingSolution, options);
  }
});

"use strict";

TSDK.UI.MetricsComponent.MetricModel = Backbone.Model.extend({
  defaults: {
    'title': '',
    'type': '',
    'action': '',
    'matcher': 'exact',
    'worth': '',
    'constraints': [],
    'postGoalSuccessAction': ''
  },

  defaultAdvancedMetricActionType: {
    'incrementCountKeepUser': 'COUNT_ONCE',
    'incrementCountReleaseUserAllowEntry':  'RESTART_SAME_EXPERIENCE',
    'incrementCountBarEntry': 'EXCLUDE_TO_SAME_EXPERIENCE'
  },

  getTitle: function() {
    return this.get('title');
  },

  getType: function() {
    return this.get('type');
  },

  getRevenueType: function() {
    return this.get('revenueType');
  },

  getEngagementType: function() {
    return this.get('engagementType');
  },

  getAnalyticsMetricId: function() {
    return this.get('analyticsMetricId');
  },

  getAction: function() {
    return this.get('action');
  },

  getDisplayMboxes: function() {
    return this.get('displayMboxes');
  },

  getMatcher: function() {
    return this.get('matcher');
  },

  getConstraints: function() {
    return this.get('constraints') ? this.get('constraints') : [];
  },

  getConstraintTerms: function() {
    return _.pluck(this.getConstraints(), 'term');
  },

  getCompactConstraintTerms: function() {
    return _.compact(this.getConstraintTerms());
  },

  getClickTrackingTerms: function() {
    var constraints = this.getConstraints(),
      result = {};

    _.each(constraints, function(constraint) {
      var templateId = constraint.templateId || 'template_Id_1',
        templateSelectors = result[templateId] || [];

      if (constraint.term) {
        if (!templateSelectors.length) {
          templateSelectors.push(constraint.term);
          result[templateId] = templateSelectors;
        } else {
          templateSelectors.push(constraint.term);
        }
      }
    });

    return result;
  },

  getWorth: function() {
    return this.get('worth');
  },

  getAdvancedMetricActionType: function() {
    return this.get('advancedMetricActionType');
  },

  getPostGoalSuccessAction: function() {
    return this.get('postGoalSuccessAction');
  },

  isAdvancedSettingsVisible: function() {
    return this.get('isAdvancedSettingsVisible');
  },

  setTitle: function(title, options) {
    this.set('title', $.trim(title), options);
  },

  setType: function(type, options) {
    this.set('type', type, options);
  },

  setRevenueType: function(type, options) {
    this.set('revenueType', type, options);
  },

  setEngagementType: function(type) {
    this.set('engagementType', type);
  },

  setAnalyticsMetricId: function(id, options) {
    this.set('analyticsMetricId', id, options);
  },

  setAnalyticsMetricSource: function(source, options) {
    this.set('analyticsMetricSource', source, options);
  },

  setAnalyticsMetricSupport: function(support, options) {
    this.set('analyticsMetricSupport', support, options);
  },

  setAnalyticsMetrics: function(analyticsMetrics, options) {
    this.set('analyticsMetrics', analyticsMetrics, options);
  },

  clearAnalyticsMetrics: function(options) {
    this.unset('analyticsMetrics', options);
    this.unset('analyticsMetricId', options);
    this.unset('analyticsMetricSource', options);
    this.unset('analyticsMetricSupport', options);
  },

  setAction: function(action, options) {
    this.set('action', action, options);
  },

  setMatcher: function(value) {
    this.silentSet('matcher', value);
  },

  setConstraints: function(constraints, options) {
    this.set('constraints', constraints, options);
  },

  setMboxes: function(mboxes) {
    this.silentSet('mboxes', mboxes);
  },

  setWorth: function(worth, options) {
    worth = $.trim(worth);
    var locale = TSDK.I18n.getLocale(),
        commaDecimalSeparator = ['de', 'es', 'fr', 'it', 'pt'];

    if (commaDecimalSeparator.indexOf(locale) != -1) {
      worth = worth.split('.').join('').split(',').join('.');
    } else {
      worth = worth.split(',').join('');
    }
    this.set('worth', worth, options);
  },

  setAdvancedMetricActionType: function(rule, options) {
    this.set('advancedMetricActionType', rule, options);
  },

  setPostGoalSuccessAction: function(actionType, options) {
    this.set('postGoalSuccessAction', actionType, options);
  },

  setIsAdvancedSettingsVisible: function(isVisible) {
    this.silentSet('isAdvancedSettingsVisible', isVisible);
  },

  getConversion: function() {
    return this.get('conversion');
  },

  setConversion: function(conversionMetric) {
    this.silentSet('conversion', conversionMetric);
  },

  addConstraint: function(options) {
    var constraints = TSDK.UI.Util.clone(this.getConstraints());

    constraints.push({ matcher: this.getMatcher(), term: '', 'ref:targetingAudience': '', 'elm:references': {} });
    this.setConstraints(constraints, options);
  },

  removeConstraint: function(index) {
    var constraints = TSDK.UI.Util.clone(this.getConstraints());

    constraints.splice(index, 1);
    this.setConstraints(constraints);
  },

  updateConstraint: function(index, field, value, options) {
    var constraints = TSDK.UI.Util.clone(this.getConstraints());

    constraints[index][field] = $.trim(value);
    this.setConstraints(constraints, options);
  },

  updateConstraintMatcher: function(options) {
    var matcher = this.getMatcher(),
      constraints = _.map(TSDK.UI.Util.clone(this.getConstraints()), function(constraint) {
      return _.extend(constraint, { matcher: matcher });
    });

    this.setConstraints(constraints, options);
  },

  clearConstraintsSilently: function() {
    this.unset('constraints', { silent: true });
  },

  clearConstraints: function() {
    this.unset('constraints');
  },

  clearConstraintsExceptFirst: function(options) {
    var constraints = TSDK.UI.Util.clone(this.getConstraints());

    constraints.splice(1);
    this.setConstraints(constraints, options);
  },

  clearAttributesSilently: function() {
    var attributes = Array.prototype.slice.call(arguments);

    if (attributes.length) {
      _.each(attributes, function(attr) {
        this.unset(attr, { silent: true });
      }, this);
    } else {
      this.clear({ silent: true });
    }
  },

  clearAllAttributesExcept: function(attrs) {
    var keepAttributes = _.pick(this.attributes, attrs);

    this.clearAttributesSilently();
    this.set(keepAttributes, { silent: true });
  },

  isGoalMetric: function() {
    return this.get('isGoalMetric');
  },

  setDefaultAdvancedMetricActionType: function(postGoalSuccessAction) {
    var advancedMetricActionType =
      postGoalSuccessAction ? this.defaultAdvancedMetricActionType[postGoalSuccessAction] : 'COUNT_ONCE';

    this.setAdvancedMetricActionType(advancedMetricActionType);
  },

  derivePostGoalSuccessAction: function(advancedMetricActionType) {
    switch (advancedMetricActionType) {
      case 'ALWAYS_CONVERT':
      case 'COUNT_ONCE':
      case 'COUNT_LANDINGS':
        return 'incrementCountKeepUser';
      case 'RESTART_SAME_EXPERIENCE':
      case 'RESTART_RANDOM_EXPERIENCE':
      case 'RESTART_NEW_EXPERIENCE':
        return'incrementCountReleaseUserAllowEntry';
      case 'EXCLUDE_TO_SAME_EXPERIENCE':
      case 'BAN_FROM_CAMPAIGN':
        return 'incrementCountBarEntry';
      default:
        return 'incrementCountKeepUser';
    }
  },

  computePostGoalSuccessAction: function (options) {
    var postGoalSuccessAction = this.derivePostGoalSuccessAction(this.getAdvancedMetricActionType());
    this.setPostGoalSuccessAction(postGoalSuccessAction, options);
  },

  setDefaultAttributes: function(attributes, options) {
    var defaultAttributes = _.pick(this.defaults, attributes);
    this.set(defaultAttributes, options);
  },

  removeAttributesSilently: function(attributes) {
    _.each(attributes, function(attr) {
      this.unset(attr, { silent: true });
    }, this);
  },

  getActivityType: function() {
    return this.get('activityType') || '';
  },

  setActivityType: function(activityType) {
    this.silentSet({ activityType: activityType });
  },

  getReportSuite: function() {
    return this.get('reportSuite') || '';
  },

  setReportSuite: function(reportSuite, options) {
    this.set('reportSuite', reportSuite, options);
  },

  silentSet: function (property, value, options) {
    var settingOptions = {silent: true};
    if (options) {
      _.extend(settingOptions, options);
    }

    this.set(property, value, settingOptions);
  }
});

"use strict";

TSDK.UI.MetricsComponent.MetricsItem = new PseudoClass({
  toString: 'MetricsItem',

  extend: F.ModelComponent,

  Model: TSDK.UI.MetricsComponent.MetricModel,

  Template: function() {
    return TSDK.UI.Templates.MetricsComponent.MetricsItem.apply(this, arguments);
  },

  View: F.View.extend({
    commonEvents: {
      'blur [name="metricname"]': 'setTitle',
      'change [name="metricname"]': 'setTitle',
      'coral-selectlist:change .context-menu-option': 'handleContextMenuSelection',
      'change .metric-worth-input': 'setWorth',
      'change .select-metric-type': 'handleMetricTypeSelection',
      'change .select-advanced-metric-action-type': 'setAdvancedMetricActionType',
      'change .select-post-goal-success-action': 'handlePostGoalSuccessAction',
      'change .select-revenue-type': 'setRevenueType',
      'change .select-action': 'handleActionSelection',
      'change .select-engagement-type': 'setEngagementType',
      'change .terminput': 'updateConstraintTermFromInput',
      'change .select-matcher': 'updateConstraintMatcher',
      'click .additionalCondition': 'addAdditionalCondition',
      'click .appliedCondition': 'removeAdditionalCondition',
      'click .addTargetingCondition': 'addTargetingAudience',
      'click .add-constraint': 'handleConstraintAddition',
      'click .remove-constraint': 'removeConstraint',
      'click .select-elements': 'triggerShowClickTracking',
      'click .delete-elements': 'clearClickTrackElements',
      'click .context-menu li': 'hideContextMenu',
      'coral-accordion:change coral-accordion': 'triggerCollapsibleExpandEvent'
    },

    additionalEvents: {
      'change [name="revenueType"]': 'setRevenueType',
      'change [name="engagementType"]': 'setEngagementType',
    },

    events: function () {
      return _.extend({}, this.commonEvents, this.additionalEvents);
    }
  }),

  construct: function(options) {
    this.initView(options.el);
    this.loadModel(options.model);
    this.registerVars(options);
    this.registerBinders();
    this.registerListeners();
  },

  loadModel: function(model) {
    this.load(model);

    //TODO: Move the computation logic to a util and do it before loading the model
    if (!this.model.getPostGoalSuccessAction()) {
      this.model.computePostGoalSuccessAction({ silent: true });
    }
  },

  registerVars: function(options) {
    this.analyticsMetrics = options.analyticsMetrics;
    this.mboxPickerOptions = options.mboxPickerOptions;
    this.currentConstraint = null;
    this.collapsedByDefault = options.collapsed;
  },

  initView: function(el) {
    this.view = new this.View({
      el: el,
      component: this,
      template: this.Template
    });
  },

  registerBinders: function() {
    this.bind('saveSelectedAudienceToConstraint');
    this.bind('setClickedElements');
  },

  registerListeners: function() {
    this.listenTo(this.view, 'renderComplete', function() {
      this.initializeWidgets();
    });

    this.listenTo(this.model, 'change', function() {
      this.updateSummary();
      this.trigger('change', this.model);
    });
  },

  initializeWidgets: function() {
    this.initialModel = this.initialModel || TSDK.UI.Util.clone(this.model.attributes);
    this.initCollapsibleWidget();
    this.setMetricTypeIfSingle();
    this.addFilters();
    this.updateSummary();
  },

  initCollapsibleWidget: function() {
    var collapsibleElement = this.view.$('coral-accordion-item').get(0),
      that = this;

    if (!collapsibleElement) {
      return;
    }

    Coral.commons.ready(collapsibleElement, function() {
      that.section = collapsibleElement;
      // All additional metrics will be collapsed by default
      if (that.collapsedByDefault) {
        collapsibleElement.selected = false;
      }
    });
  },

  collapse: function() {
    if (this.section) {
      this.section.selected = false;
    }
  },

  triggerCollapsibleExpandEvent: function(ev) {
    if (ev.originalEvent.detail.selection) {
      this.collapsedByDefault = null;
      this.trigger('expand', this);
    }
  },

  addFilters: function() {
    var constraints = this.model.getConstraints(),
      index;

    if (this.isMboxView() || this.isMboxClick()) {
      for (index = 0; index < constraints.length; index++) {
        this.$mboxFilter = this.view.$('.mboxLookup' + index);
        this.initFilter(this.$mboxFilter, index, constraints[index]['term']);
      }
    }
  },

  initFilter: function($element, order, selectedMbox) {
    var that = this,
      otherSelectedMboxes = this.model.getConstraintTerms(),
      mboxPicker,
      mboxPickerAttr = this.mboxPickerOptions,
      mboxPickerConfig = mboxPickerAttr.config,
      specialMboxes = order === 0 && mboxPickerConfig && mboxPickerConfig.specialMboxes;

      otherSelectedMboxes.splice(order, 1);

      mboxPicker = new TSDK.UI.MboxPicker({
        el: $element,
        visible: true,
        fetchOptions: {
          url: mboxPickerAttr.url
        },
        preprocessor: mboxPickerAttr.preprocessor,
        config: _.extend({}, mboxPickerConfig, {
          specialMboxes: specialMboxes,
          selected: selectedMbox,
          exclude: otherSelectedMboxes
        })
      });

    this.populateMboxList(mboxPicker, mboxPickerConfig);

    mboxPicker.on('mbox:selected', function(selectedMbox) {
       that.updateConstraintTermOnMboxSelection(selectedMbox, order);
    });
  },

  populateMboxList: function(mboxPicker, mboxPickerConfig) {
    var displayMboxes = [];

    if (this.isMboxView()) {
      if (TSDK.UI.mboxes) {
        mboxPicker.setData(TSDK.UI.mboxes);
      } else {
        mboxPicker.fetch({
          async: false,
          success: function (response) {
            TSDK.UI.mboxes = response;
          }
        });
      }
    } else if (this.isMboxClick()) {
      if (_.isFunction(mboxPickerConfig.fetchDisplayMbox)) {
        displayMboxes = mboxPickerConfig.fetchDisplayMbox.call();
      }

      mboxPicker.setData({ items: displayMboxes, specialMboxes: [] }, false);
    }
  },

  isMboxView: function() {
    return this.model.getAction() === 'mboxView';
  },

  isMboxClick: function() {
    return this.model.getAction() === 'mboxClick';
  },

  show: function() {
    this.addMboxes();
    this.view.show();

    return this;
  },

  hideContextMenu: function() {
    this.view.$('.context-options-button').click();
  },

  setTitle: function(evt) {
    var newTitle = evt.target.value;

    this.toggleTitleEditMode(false);

    if (newTitle !== this.model.getTitle()) {
      this.model.setTitle(newTitle);
    }
  },

  enableTitleEditing: function() {
    var titleInputElement = this.view.$('.metric-name-input').get(0);

    this.toggleTitleEditMode(true);
    if (titleInputElement) {
      Coral.commons.nextFrame(function() {
        $(titleInputElement).focus();
        titleInputElement.selectionStart = titleInputElement.selectionEnd = titleInputElement.value.length;
      });
    }
  },

  toggleTitleEditMode: function(state) {
    this.view.$('.metric-item').toggleClass('title-edit-mode', state);
  },

  clearAllFields: function() {
    var attributesToBeRetained = ['title', 'activityType', 'isGoalMetric', 'config', 'conversion'];
    this.resetModelWithDefaults(attributesToBeRetained);
  },

  setWorth: function(evt) {
    this.model.setWorth(evt.target.value, { silent: true });
    this.model.trigger('change', this.model);
  },

  handleContextMenuSelection: function(evt) {
    if (!evt.target.selectedItem) {
      return;
    }

    switch (evt.target.selectedItem.value) {
      case 'rename':
        this.enableTitleEditing();
        this.hideContextMenu();
        break;
      case 'clear':
        this.clearAllFields();
        break;
      case 'delete':
        this.remove();
        break;
      case 'advancedSettings':
        this.showAdvancedSettings();
        this.disableMenuOption(evt.target.selectedItem);
        this.model.setIsAdvancedSettingsVisible(true);
        this.hideContextMenu();
        break;
      default:
    }
  },

  handleMetricTypeSelection: function(evt) {
    this.setMetricType(evt.target.value);
  },

  setMetricType: function(type) {
    this.resetModelWithDefaults(this.getRenderAttributes(), { silent: true });

    if (type === 'conversion') {
      this.addMboxes();
    } else {
      this.setupByType(type, { silent: true });
    }

    this.model.setType(type);
  },

  deriveTitleFromMetricType: function() {
    var type = this.view.$('.select-metric-type coral-select-item:selected').text();
    this.model.setTitle(type);
  },

  setMetricTypeIfSingle: function() {
    var metricTypeElements = this.view.$('.select-metric-type').get(0),
      that= this;

    if (this.model.getType() && !metricTypeElements) {
      return;
    }

    Coral.commons.ready(metricTypeElements, function() {
      var metricTypes = metricTypeElements ? metricTypeElements.items.getAll() : [];

      if (metricTypes.length === 1) {
        that.model.setType(metricTypes[0].value);
      }
    });
  },

  resetModelWithDefaults: function(attributes, options) {
    var attributesToBeRetained = attributes;

    if (this.isPostGoalMetric()) {
      attributesToBeRetained.push('targetName');
    }
    this.clearUnneededAttributes(attributesToBeRetained);
    this.model.setDefaultAttributes(['postGoalSuccessAction'], options);
  },

  clearUnneededAttributes: function(attributesToBeRetained) {
    var renderAttributes = attributesToBeRetained || this.getRenderAttributes();
    this.model.clearAllAttributesExcept(renderAttributes);
  },

  getRenderAttributes: function() {
    return [
      'title',
      'activityType',
      'isGoalMetric',
      'config',
      'isAdvancedSettingsVisible',
      'conversion'
    ];
  },

  isPostGoalMetric: function() {
    return this.model.getConversion();
  },

  setupByType: function(type, options) {
    if (type === 'revenue') {
      this.model.setRevenueType('rpv', options);
      this.addMboxes();
      this.setAction('mboxView', options);
    }
  },

  setRevenueType: function(evt) {
    this.model.setRevenueType(evt.target.value);
  },

  handleActionSelection: function(evt) {
    this.setAction(evt.target.value);
  },

  setAction: function(action, options) {
    this.model.clearConstraintsSilently();
    this.model.setMatcher('exact');
    this.model.setWorth('', { silent: true });
    this.view.$('.metric-worth-input').val('');

    if (action === 'clickRecommendation') {
      this.propagateEvent('metric:addClickTrackId');
    } else {
      this.propagateEvent('metric:removeClickTrackId');
    }

    if (action !== 'elementClick' && action !== 'clickRecommendation') {
      this.addConstraint({ silent: true });
    }
    this.model.setAction(action, options);
  },

  setEngagementType: function(evt) {
    var engagementType = evt.target.value;
    this.model.setWorth('', { silent: true });
    this.model.setEngagementType(engagementType);
    this.model.clearConstraintsSilently();

    if (engagementType !== 'customScoring') {
      this.view.$('.metric-worth-input').val('');
    }
  },

  getConversion: function() {
    return this.model.getConversion();
  },

  setConversion: function(isConversionMetric) {
    this.model.setConversion(isConversionMetric);
  },

  setClickedElements: function(elementsMapPerPage) {
    var constraints = [];

    _.each(elementsMapPerPage, function(elements, templateId) {
      _.each(elements, function(element) {
        constraints.push({ term: element, templateId: templateId });
      }, this);
    }, this);

    this.model.setConstraints(constraints);
  },

  updateConstraintTermFromInput: function(evt) {
    var value = evt.target.value,
      condition = $(evt.target).attr('name');

    this.model.updateConstraint(condition, 'term', value, { silent: true });
    this.clearIncompleteMark();
    this.model.trigger('change');
  },

  updateConstraintTermOnMboxSelection: function(selectedMbox, order) {
    var value = selectedMbox.value,
      isSpecialMbox = selectedMbox.isSpecial,
      silentSetOption = { silent: true };

    if (!value) {
      return;
    }

    this.model.updateConstraint(order, 'term', value, silentSetOption);

    if (value && isSpecialMbox) {
      this.model.clearConstraintsExceptFirst(silentSetOption);
      this.model.set('specialmbox', true, silentSetOption);
    } else {
      this.model.unset('specialmbox', silentSetOption);
    }

    // For non mbox name selection, we need to remove the targeting condition.
    if (value === '' || order) {
      this.model.updateConstraint(order, 'ref:targetingAudience', '', silentSetOption);
    }

    this.clearIncompleteMark();
    this.model.trigger('change');
  },

  updateConstraintMatcher: function(evt) {
    this.model.setMatcher(evt.target.value);
    this.model.updateConstraintMatcher({ silent: true });
    this.model.trigger('change');
  },

  addAdditionalCondition: function(evt) {
    var $applyConditionButton = this.view.$(evt.target),
      appliedCondition = $applyConditionButton.data('condition');

    this.view.$('.targetingAudience' + appliedCondition).show();
    $applyConditionButton.hide();
    this.view.$('.appliedCondition').show();
  },

  removeAdditionalCondition: function(evt) {
    var $target = this.view.$(evt.target);
    this.model.updateConstraint($target.data('condition'), 'ref:targetingAudience', '');
  },

  addTargetingAudience: function(evt) {
    var audiencePickerOptions = {
      selectedAudienceConsumer: this.saveSelectedAudienceToConstraint
    };

    this.currentConstraint = this.view.$(evt.target).data('condition');
    //this.trigger('metricsItem:addAudience', audiencePickerOptions);
  },

  saveSelectedAudienceToConstraint: function(audiences) {
    this.model.updateConstraint(this.currentConstraint, 'ref:targetingAudience', audiences.get('reference'));
    this.model.updateConstraint(this.currentConstraint, 'audienceTitle', audiences.get('jcr:title'));
    this.model.trigger('change');
  },

  handleConstraintAddition: function() {
    this.addConstraint();
  },

  addConstraint: function(options) {
    this.model.addConstraint(options);
  },

  removeConstraint: function(evt) {
    var constraintId = parseInt(evt.currentTarget.id);

    if (!_.isNaN(constraintId)) {
      this.model.removeConstraint(constraintId);
    }
  },

  addMboxes: function() {
    this.model.setMboxes([]);
  },

  remove: function() {
    this.destruct();
    this.parent.removeMetric(this.toString());
  },

  clearClickTrackElements: function() {
    this.model.clearConstraints();
  },

  triggerShowClickTracking: function() {
    this.propagateEvent('metric:showClickTracking', {
      clickedElements: this.model.getClickTrackingTerms(),
      successHandler: this.setClickedElements
    });
  },

  updateSummary: function() {
    var metricTitle = this.model.getTitle(),
      metricItemElement = this.view.$('.metric-item').get(0),
      metricConstraint = this.model.getConstraints() && this.view.$('.constraint').data('display-type'),
      metricTerms = this.model.getCompactConstraintTerms(),
      that = this,
      metricType,
      metricAction;

    if (metricItemElement) {
      Coral.commons.ready(metricItemElement, function() {
        metricType = that.model.getType() && that.getSelectedItemText('.select-metric-type');
        metricAction = that.model.getAction() && that.getSelectedItemText('.select-action')
          || that.model.getEngagementType() && that.getSelectedItemText('.select-engagement-type')
          || that.model.getAnalyticsMetricId() && that.getSelectedItemText('.select-analytics-metric');

        that.view.$('.metric-summary').html(TSDK.UI.Templates.MetricsComponent.MetricsItemSummary({
          title: metricTitle,
          type: metricType,
          action: metricAction,
          constraint: metricConstraint,
          terms: metricTerms
        }));
      });
    }
  },

  getSelectedItemText: function(selector) {
    var coralSelectElement = this.view.$(selector).get(0);

    if (coralSelectElement && coralSelectElement.selectedItem) {
      return $(coralSelectElement.selectedItem).text();
    }

    return '';
  },

  hasChanged: function() {
    return !_.isEqual(this.model.toJSON(), this.initialModel);
  },

  isComplete: function(highlightErrors) {
    var title = this.model.getTitle(),
      criteria = this.verifyCriteria(title);

    if (highlightErrors && !criteria) {
      this.markIncomplete();
    }

    return criteria ? true : false;
  },

  verifyCriteria: function(title) {
    if (this.model.getType() === 'engagement') {
      return title && this.model.getEngagementType();
    }

    return this.getDefaultCriteria();
  },

  getDefaultCriteria: function() {
    var terms = this.model.getConstraintTerms(),
      title = this.model.getTitle();

    if (this.model.getAction() === 'clickRecommendation') {
      return title;
    }

    return title && terms.length && terms.indexOf('') === -1;
  },

  markIncomplete: function() {
    this.view.$('.metric-item').addClass('incomplete');
  },

  clearIncompleteMark: function() {
    this.view.$('.metric-item').removeClass('incomplete');
  },

  updateTitleAttribute: function(target, value) {
    $(target).attr('title', value);
  },

  showAdvancedSettings: function() {
    this.view.$('.advanced-metric-action').removeClass('hidden');
  },

  disableMenuOption: function(menuOption) {
    $(menuOption).prop('disabled', true);
  },

  handlePostGoalSuccessAction: function(evt) {
    this.model.setPostGoalSuccessAction(evt.target.value, { silent: true });
    this.model.setDefaultAdvancedMetricActionType(evt.target.value);
  },

  setAdvancedMetricActionType: function(evt) {
    this.model.setAdvancedMetricActionType(evt.target.value, { silent: true });
    this.model.trigger('change');
  }
});

"use strict";

TSDK.UI.MetricsComponent.MetricsItemA4T = new PseudoClass({
  toString: 'MetricsItemA4T',

  extend: TSDK.UI.MetricsComponent.MetricsItem,

  Template: function() {
    return TSDK.UI.Templates.MetricsComponent.MetricsItemA4T.apply(this, arguments);
  },

  View: TSDK.UI.MetricsComponent.MetricsItem.prototype.View.extend({
    additionalEvents: {
      'change .select-analytics-metric': 'setAnalyticsMetric'
    }
  }),

  clearAllFields: function() {
    this.resetModelWithDefaults(this.getRenderAttributes());
  },

  resetModelWithDefaults: function(attributesToBeRetained, options) {
    this._super(attributesToBeRetained, { silent: true });
    this.model.setTitle(TSDK.I18n.get('MY PRIMARY GOAL'), options);
  },

  getRenderAttributes: function() {
    return ['activityType', 'reportSuite', 'analyticsMetrics', 'config'];
  },

  setupByType: function(type, options) {
    if (type === 'analytics') {
      this.setAnalyticsMetrics(this.analyticsMetrics, options);
    }
  },

  setAnalyticsMetric: function(evt) {
    var analyticsMetricId = evt.target.value,
      analyticsMetricSource = $(evt.target).find('coral-select-item:selected').data('source'),
      analyticsMetricSupport = $(evt.target).find('coral-select-item:selected').data('support'),
      selectedOptionText = $(evt.target).find('coral-select-item:selected').text();

    this.model.setTitle(TSDK.I18n.get('ANALYTICS METRIC'), { silent: true });
    this.model.setAnalyticsMetricId(analyticsMetricId, { silent: true });
    this.model.setAnalyticsMetricSource(analyticsMetricSource, { silent: true });
    this.model.setAnalyticsMetricSupport(analyticsMetricSupport, { silent: true });
    this.model.trigger('change');
  },

  setAnalyticsMetrics: function(analyticsMetrics, options) {
    this.model.setAnalyticsMetrics(analyticsMetrics, options);
  },

  removeAnalyticsMetrics: function(options) {
    this.model.clearAnalyticsMetrics(options);
  },

  showAnalyticsMetricsLoader: function() {
    this.view.$('.select-analytics-metric').addClass('hidden');
    this.view.$('.rs-alert').addClass('hidden');
    this.view.$('coral-wait.loading').removeClass('hidden');
  },

  verifyCriteria: function(title) {
    if (this.model.getType() === 'analytics') {
      return title && this.model.getAnalyticsMetricId();
    }

    return this.getDefaultCriteria();
  }
});

TSDK.UI.MetricsComponent.prototype.config={
  "CONVERSION_ENABLED": true,
  "REVENUE_ENABLED": true,
  "ENGAGEMENT_ENABLED": true,
  "ANALYTICS_METRIC_ENABLED": true,
  "REVENUE_SALES_ENABLED": true,
  "REVENUE_ORDERS_ENABLED": true,
  "PROJECTED_EARNINGS_ENABLED": false,
  "CURRENCY_SYMBOL": "$",
  "ACTION_VIEWED_MBOX_ENABLED": true,
  "ACTION_CLICK_MBOX_ENABLED": false,
  "ADVANCED_SETTINGS_ENABLED": true,
  "POST_GOAL_METRIC_TRACKING_ENABLED": false,
  "CONVERSION_METRIC_CHECKBOX_ENABLED": true,
  "CLICK_TRACKING_ENABLED": false,
  "CLICK_RECOMMENDATION_ENABLED": false
};
"use strict";

TSDK.UI.GoalModel = Backbone.Model.extend({
  getMetrics: function() {
    return this.get('metrics');
  },

  setMetrics: function(metrics) {
    this.silentSet('metrics', metrics);
  },

  setAnalyticsMetricId: function(id) {
    this.set('analyticsMetricId', id);
  },

  setAnalyticsMetricSource: function(source) {
    this.set('analyticsMetricSource', source);
  },

  setAnalyticsMetricSupport: function(support) {
    this.set('analyticsMetricSupport', support);
  },

  setAnalyticsSupport: function(isSupported) {
    this.set('isAnalyticsSupported', isSupported);
  },

  getReportingSolution: function() {
    return this.get('reportingSolution') || 'target';
  },

  setReportingSolution: function(reportingSolution) {
    this.silentSet('reportingSolution', reportingSolution);
  },

  getAnalyticsCompany: function() {
    return this.get('analyticsCompany');
  },

  setAnalyticsCompany: function(company) {
    this.silentSet('analyticsCompany', company);
  },

  removeAnalyticsCompany: function(options) {
    this.unset('analyticsCompany', options);
  },

  getReportSuite: function() {
    return this.get('reportSuite') || '';
  },

  setReportSuite: function(reportSuite) {
    this.silentSet('reportSuite', reportSuite);
  },

  removeReportSuite: function(options) {
    this.unset('reportSuite', options);
  },

  setReportSuiteValidation: function(isValid) {
    this.silentSet('isReportSuiteValid', isValid);
  },

  getReportSuiteValidation: function() {
    return this.get('isReportSuiteValid');
  },

  removeReportSuiteValidation: function() {
    this.unset('isReportSuiteValid', { silent: true });
  },

  removeAttributesSilently: function(attributes) {
    _.each(attributes, function(attr) {
      this.unset(attr, { silent: true });
    }, this);
  },

  silentSet: function (property, value, options) {
    var settingOptions = {silent: true};
    if (options) {
      _.extend(settingOptions, options);
    }

    this.set(property, value, settingOptions);
  }
});


"use strict";

TSDK.UI.Goals = new PseudoClass({
  toString: 'Goals',

  extend: TSDK.UI.ConfigurableComponent,

  Model: TSDK.UI.GoalModel,

  View: F.View.extend({
    events: {
      'change .reporting-solution': 'updateReportingSolution'
    }
  }),

  initialize: function(options) {
    this.registerVars(options);
    this.setAnalyticsSupport();
    this.initView(options);
    this.registerListeners();
    this.registerBinders();
  },

  destruct: function() { },

  handleConfigChanged: function () {
    if (this.model) {
      this.model.set('config', this.config);

      // In case we have to show only analytics reporting solution set reporting solution in model.
      if (this.config.SHOW_ONLY_ANALYTICS) {
        this.model.setReportingSolution('analytics');
      }
    }
  },

  setAnalyticsSupport: function() {
    if (this.isAnalyticsEnabled()) {
      this.model.setAnalyticsSupport(true);
    }
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.Goals.Goals,
      model: this.model
    });
  },

  registerListeners: function() {
    this.listenTo(this.view, 'renderComplete', function() {
      this.renderSubViews();
    });
  },

  registerVars: function(options) {
    this.analytics = options.analytics;
    this.metricsOptions = options.metrics;
  },

  registerBinders: function() {
    this.bind('delegateShowAudiencePickerEvent');
    this.bind('onCompaniesFetched');
    this.bind('updateAnalyticsCompany');
    this.bind('validateReportSuite');
    this.bind('updateReportSuite');
    this.bind('fetchMetricsForReportSuite');
    this.bind('handleFetchMetricsError');
    this.bind('notifyError');
  },

  renderSubViews: function() {
    if (this.isAnalyticsEnabled() && this.model.getReportingSolution() === 'analytics') {
      this.addAnalyticsCompanyPicker();
      this.addReportSuitePicker();
      this.hideUnnecessaryAnalyticsElements(this.components.companyPicker.getCompanies());
      this.updateCompanyForReportingSuites();
    }

    this.addMetrics();

    if (this.model.getReportingSolution() !== 'analytics' || !this.isAnalyticsEnabled()) {
      //this.addReportingAudience();
    }
  },

  isAnalyticsEnabled: function() {
    var analytics = this.analytics;
    return (
      analytics &&
      _.isFunction(analytics.fetchCompanies) &&
      _.isFunction(analytics.fetchReportSuites)
    );
  },

  addMetrics: function() {
    var reportingSolution = this.model.getReportingSolution(),
      reportSuite = this.model.getReportSuite(),
      analyticsMetrics = this.analyticsMetrics,
      data = this.model.getMetrics();

    this.metrics && this.metrics.destructButKeepEl();

    this.metrics = this.addComponent(new TSDK.UI.MetricsComponent(_.extend({}, this.metricsOptions, {
      el: this.view.$('.tsdk-metrics'),
      visible: true,
      reportingSolution: reportingSolution,
      reportSuite: reportSuite,
      analyticsMetrics: analyticsMetrics,
      data: data
    })), 'metrics')
    .on('metrics:addAudience', this.delegateShowAudiencePickerEvent);
  },

  addAnalyticsCompanyPicker: function() {
    var company = this.model.getAnalyticsCompany(),
      fetchCompanies = this.analytics.fetchCompanies;

    this.components['companyPicker'] && this.components['companyPicker'].destructButKeepEl();

    this.addComponent(new TSDK.UI.Goals.SCCompanyPicker({
      el: this.view.$('.sc-company-picker-placeholder'),
      selected: company || null,
      fetchCompanies: fetchCompanies
    }), 'companyPicker')
    .on('scCompany:fetched', this.onCompaniesFetched)
    .on('scCompany:selected', this.updateAnalyticsCompany)
    .on('error', this.notifyError);

    this.components['companyPicker'].show();
  },

  addReportSuitePicker: function() {
    var company = this.model.getAnalyticsCompany(),
      reportSuite = this.model.getReportSuite(),
      fetchReportSuites = this.analytics.fetchReportSuites;

    this.components['reportSuitePicker'] && this.components['reportSuitePicker'].destructButKeepEl();

    this.addComponent(new TSDK.UI.Goals.ReportSuitePicker({
      el: this.view.$('.report-suite-picker-placeholder'),
      company: company,
      selected: reportSuite || null,
      fetchReportSuites: fetchReportSuites
    }), 'reportSuitePicker')
    .on('reportSuite:selected', this.updateReportSuite)
    .on('reportSuite:validate', this.validateReportSuite)
    .on('error', this.notifyError);

    this.components['reportSuitePicker'].show();

    if (reportSuite) {
      this.loadAnalyticsMetrics(reportSuite);
    }
  },

  onCompaniesFetched: function(companiesList) {
    if (companiesList) {
      this.hideUnnecessaryAnalyticsElements(companiesList);

      this.updateCompanyForReportingSuites();
    }
  },

  hideUnnecessaryAnalyticsElements: function(companiesList) {
    if (companiesList) {
      //hide the company dropdown if there is only one company
      if (companiesList.length === 1) {
        this.view.$('.sc-company-container').addClass('read-only');
      } else if(companiesList.length === 0) {
        this.view.$('.report-suite-container').addClass('hidden');
      }
    }
  },

  updateCompanyForReportingSuites: function() {
    var selectedCompany = this.components.companyPicker.getSelectedCompany();
    this.model.setAnalyticsCompany(selectedCompany);
    if (this.components.reportSuitePicker) {
      this.components.reportSuitePicker.updateCompany(selectedCompany);
    }
  },

  updateAnalyticsCompany: function(company) {
    var reportSuite = this.model.getReportSuite();
    this.model.setAnalyticsCompany(company);
    this.metrics.components.metric0.removeAnalyticsMetrics({ silent: true });
    this.components.reportSuitePicker.updateCompany(company);
    this.components.reportSuitePicker.updateSelection(reportSuite);
    if (reportSuite) {
      this.loadAnalyticsMetrics(reportSuite);
    }

    this.propagateEvent('scCompany:selected', company);
  },

  loadAnalyticsMetrics: function(reportSuite) {
    var company = this.model.getAnalyticsCompany(),
      fetchMetrics = this.analytics.fetchMetrics;

    if (_.isFunction(fetchMetrics)) {
      fetchMetrics.call(undefined, company, reportSuite, this.fetchMetricsForReportSuite, this.handleFetchMetricsError);
    }
  },

  fetchMetricsForReportSuite: function(response) {
    var errorMsg,
      analyticsMetrics,
      analyticsMetricsItem;

    if (this.metrics) {
      analyticsMetricsItem = this.metrics.components.metric0;
    }

    if (response.errmsg) {
      errorMsg = response.errmsg || '';
      this.showErrorNotification(TSDK.I18n.get('Error loading metrics from Analytics. {0}', errorMsg));
    } else {
      analyticsMetrics = _.sortBy(_.map(response, function(value, key) {
        return {
          id: key,
          name: value.name,
          frag_id: value.frag_id,
          type: value.type,
          source: value.source,
          support: value.support,
          data_group: value.data_group
        };
      }), function(metric){ return metric.name; });

      this.analyticsMetrics = analyticsMetrics;

      if (analyticsMetricsItem) {
        analyticsMetricsItem.analyticsMetrics = analyticsMetrics;
        analyticsMetricsItem.setAnalyticsMetrics(analyticsMetrics);
      }

    }
  },

  handleFetchMetricsError: function(jqXHR, textStatus, errorThrown) {
    var errorMsg;
    errorMsg = JSON.parse(jqXHR.responseText)['error.message'] || errorThrown;
    this.showErrorNotification(TSDK.I18n.get('Error loading metrics from Analytics. {0}', errorMsg));
  },

  updateReportSuite: function(reportSuite) {
    this.metrics.components['metric0'].removeAnalyticsMetrics({ silent: true });
    this.model.setReportSuite(reportSuite);
    this.metrics.components['metric0'].model.setReportSuite(reportSuite, { silent: true });
    this.metrics.components['metric0'].showAnalyticsMetricsLoader();
    this.loadAnalyticsMetrics(reportSuite);
    this.markRSPickerInvalid(false);
    this.propagateEvent('reportSuite:selected', reportSuite);
  },

  validateReportSuite: function(reportSuites) {
    this.model.setReportSuiteValidation(false);
    if (reportSuites && reportSuites[this.model.getReportSuite()]) {
      this.model.setReportSuiteValidation(true);
    }
  },

  updateReportingSolution: function(event) {
    var currentSolution = this.model.getReportingSolution(),
      selectedSolution = event.target.value;

    if (selectedSolution !== currentSolution) {
      this.model.setReportingSolution(selectedSolution);

      this.toggleRSPickerVisibility();
      this.switchReportingSolution(selectedSolution, { silent: (selectedSolution === 'analytics') });
      this.propagateEvent('reportingSolution:changed', selectedSolution);

      if (selectedSolution === 'analytics') {
        this.render();
        //this.removeReportingAudiences();
      } else {
        this.removeReportSuite();
        this.removeAnalyticsCompany();
      }
    }
  },

  markRSPickerInvalid: function(isInvalid) {
    var reportSuitePicker = this.view.$('.report-suite-picker').get(0);

    if (reportSuitePicker) {
      reportSuitePicker.invalid = isInvalid;
    }
  },

  toggleRSPickerVisibility: function() {
    var companyPicker = this.components['companyPicker'];
    if (this.model.getReportingSolution() === 'analytics' && companyPicker) {
      this.view.$('.reporting-company-suite-container').removeClass('hidden');
      this.hideUnnecessaryAnalyticsElements(companyPicker.getCompanies());
    } else {
      this.view.$('.reporting-company-suite-container').addClass('hidden');
    }
  },

  switchReportingSolution: function(selectedSolution, options) {
    this.resetMetrics();
    this.metrics.setReportingSolution(selectedSolution, options);
  },

  resetMetrics: function() {
    this.model.setMetrics([]);
    this.metrics.setMetrics([]);
  },

  removeReportSuite: function() {
    this.components['reportSuitePicker'].updateSelection('');
    this.model.removeReportSuite({ silent: true });
  },

  removeAnalyticsCompany: function() {
    this.components['companyPicker'].removeSelectedCompany();
    this.model.removeAnalyticsCompany({ silent: true });
  },

  filterUnwantedGoalsAttributes: function(goalsData) {
    var attributesToBeExcluded = [ 'isAnalyticsSupported', 'isReportSuiteValid', 'config' ];
    return _.omit(goalsData, attributesToBeExcluded);
  },

  notifyError: function(options) {
    this.propagateEvent('error', options);
  },

  isReportSuiteValid: function() {
    var rsValidation = this.model.getReportSuiteValidation();

    if (this.model
        && this.model.getReportingSolution() === 'analytics'
        && (!this.model.getReportSuite() || (_.isBoolean(rsValidation) && !rsValidation))) {
      this.notifyError({ message: TSDK.I18n.get('Please select a report suite.') });
      this.markRSPickerInvalid(true);
      return false;
    }
    return true;
  },

  validate: function(highlightErrors) {
    return this.isReportSuiteValid() && this.metrics.validate(highlightErrors);
  },

  saveGoals: function() {
    var metrics = this.metrics.getData();
    this.model.setMetrics(metrics);
  },

  getGoals: function() {
    return this.model.toJSON();
  },

  getContext: function() {
    this.saveGoals();
    return this.filterUnwantedGoalsAttributes(this.getGoals());
  },

  setContext: function(goals) {
    if (goals && goals.reportSuite) {
      goals.reportingSolution = 'analytics';
    }
    this.loadModel(goals);
  }

});
TSDK.UI.ItemFactory = function (options) {
    this.items = [];
    this.itemsFetched = false;
    this.disableCache = false;
    this.disableFactory = false;
    this.url = options.url;
    this.pageSize = options.pageSize;
    this.factoryName = options.name;

    if (options.parse) {
      this.parse = options.parse;
    }

    if (typeof options.disableCache !== 'undefined') {
      this.disableCache = options.disableCache;
    }

    if (options.disable) {
      this.disable();
    }

    if (options.fetch) {
      this.fetchItems();
    }
    // TODO [harsing] Underscore is not part of common clientlib and hence might not be available
    // here, need to uncomment this when we move generic libraries to common clientlib
    // _.extend(this, { items: [], itemsFetched: false }, options );
};

TSDK.UI.ItemFactory.prototype.toString = function() {
  return this.factoryName;
};

TSDK.UI.ItemFactory.prototype.isDisabled = function() {
  return this.disableFactory;
};

TSDK.UI.ItemFactory.prototype.disable = function() {
  this.disableFactory = true;
};

TSDK.UI.ItemFactory.prototype.enable = function() {
  this.disableFactory = false;
};

_getItemsInDisabledState = function(callback) {
  if (typeof callback === 'function') {
    callback.call('undefined', []);
  }
};

TSDK.UI.ItemFactory.prototype.getItems = function(options) {
  if (this.isDisabled()) {
    return _getItemsInDisabledState(options.callback);
  }

  if (this.itemsFetched) {
    if (typeof options.callback === 'function') {
      options.callback.call(undefined, this.items);
    }
  } else {
    this.fetchItems(options);
  }
};

TSDK.UI.ItemFactory.prototype.buildUrl = function(url, params) {
  params = params || '';

  if (this.pageSize) {
    params += (!params ? '' : '&') + ('pageSize=' + this.pageSize);
  }

  return params ? (url + (url.indexOf('?') !== -1 ? '&' : '?') + params) : url;
};

TSDK.UI.ItemFactory.prototype.fetchItems = function(options) {
  if (this.isDisabled()) {
    return _getItemsInDisabledState(options.callback);
  }

  var that = this,
    url = this.url;

  options = options || {};

  $.ajax({
    url: this.buildUrl(url, options.params),
    async: options.hasOwnProperty('async') ? options.async: true,
    contentType: 'application/json; charset=utf-8',
    dataType: 'json'
  })
  .done(function(response) {
    if (!that.disableCache) {
      that.itemsFetched = true;
    }

    that.items = that.parse(response);

    if (typeof options.callback === 'function') {
      options.callback.call(undefined, that.items);
    }
  })
  .fail(function(jqXHR) {
    if (typeof options.callback === 'function') {
      options.callback.call(undefined, that.items);
    }

    if (typeof options.error === 'function') {
      options.error.call(undefined, jqXHR);
    }
  });
};

TSDK.UI.ItemFactory.prototype.parse = function(response) {
  return response.items || [];
};

TSDK.UI.ItemFactory.prototype.setUrl = function(url) {
  this.url = url;
};

'use strict';

TSDK.UI.Goals.ReportSuiteFactory = new TSDK.UI.ItemFactory({
  name: 'reportSuiteFactory',

  url: '',

  parse: function(response) {
    return _.isObject(response) && this.filterTargetEnabledReportSuites(response);
  },

  disableCache: true
});

TSDK.UI.Goals.ReportSuiteFactory.filterTargetEnabledReportSuites = function(reportSuites) {
  var filterCriterion = 'target',
    filteredSuites = _.pick(reportSuites, function(reportSuite) {
      return _.contains(reportSuite.enabledSolutions, filterCriterion);
    });

  return _.size(filteredSuites) > 0 ? filteredSuites : [];
};


'use strict';

TSDK.UI.Goals.ReportSuitePicker = new PseudoClass({
  toString: 'ReportSuitePicker',

  extend: F.ModelComponent,

  _company: null,

  View: F.View.extend({
    events: {
      'change .report-suite-picker': 'triggerReportSuiteSelectedEvent'
    }
  }),

  construct: function(options) {
    this._company = options.company;
    this.fetchReportSuitesCallback = options.fetchReportSuites;
    this.initializeModel(options.selected);
    this.initializeView(options.el);
    this.load(this.model);
    this.registerBinders();
    this.addListeners();

    if (options.reportSuites) {
      this.setReportSuites(options.reportSuites);
    } else {
      this.fetchReportSuites(this.fetchReportSuitesCallback);
    }
  },

  initializeModel: function(selectedReportSuite) {
    this.model = new Backbone.Model({
      selectedReportSuite: selectedReportSuite
    });
  },

  initializeView: function(element) {
    this.view = new this.View({
      el: element,
      component: this,
      model: this.model,
      template: TSDK.UI.Templates.Goals.ReportSuitePicker
    });
  },

  registerBinders: function() {
    this.bind('initializeWidgets');
    this.bind('fetchCallback');
    this.bind('handleFetchError');
  },

  addListeners: function() {
    this.listenTo(this.view, 'renderComplete', this.initializeWidgets);
  },

  initializeWidgets: function() {
  },

  updateCompany: function(company) {
    if (company != this._company) {
      this._company = company;
      this.clearReportSuites();
      this.fetchReportSuites(this.fetchReportSuitesCallback);
    }
  },

  updateSelection: function(reportSuite, options) {
    this.model.set('selectedReportSuite', reportSuite, options);
  },

  fetchReportSuites: function(fetchReportSuites) {
    if (this._company) {
      if (_.isFunction(fetchReportSuites)) {
        fetchReportSuites.call(undefined, this._company, this.fetchCallback, this.handleFetchError);
      }
    }
  },

  fetchCallback: function(response) {
    var reportSuites = TSDK.UI.Goals.ReportSuiteFactory.parse(response);
    if (!reportSuites) {
      this.showFetchErrorNotification();
      reportSuites = [];
    }
    this.setReportSuites(reportSuites);
    this.triggerValidateReportSuite();
  },

  handleFetchError: function(jqXHR) {
    var errorMsg = JSON.parse(jqXHR.responseText)['error.message'];
    this.showFetchErrorNotification(errorMsg);
    this.setReportSuites([]);
    this.triggerValidateReportSuite();
  },

  triggerReportSuiteSelectedEvent: function(event) {
    if (event.target.value.length > 0) {
      this.updateSelection(event.target.value, { silent: true });
      this.trigger('reportSuite:selected', event.target.value);
      this.triggerValidateReportSuite();
    }
  },

  showFetchErrorNotification: function(message) {
    message = message || '';

    this.trigger('error', { message: TSDK.I18n.get('Unable to load report suites from Adobe Analytics. ') + message });
  },

  triggerValidateReportSuite: function () {
    var reportSuites = this.model.get('reportSuites');
    this.trigger('reportSuite:validate', reportSuites);
  },

  clearReportSuites: function(options) {
    this.model.unset('reportSuites', options);
  },

  setReportSuites: function(reportSuites) {
    this.model.set('reportSuites', reportSuites);
  }
});

'use strict';

TSDK.UI.Goals.SCCompanyFactory = new TSDK.UI.ItemFactory({
  name: 'sCCompanyFactory',

  url: '',

  parse: function(response) {
    return _.isObject(response) && this.getCompaniesList(response);
  }
});

TSDK.UI.Goals.SCCompanyFactory.getCompaniesList = function(response) {
  var companiesList = [];
  _.each(response.companies, function(company) {
    companiesList.push({name: company});
  });

  return {companiesList: companiesList, activeCompany: response.activeCompany};
};



'use strict';

TSDK.UI.Goals.SCCompanyPicker = new PseudoClass({
  toString: 'SCCompanyPicker',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'change .sc-company-picker': 'triggerCompanySelectedEvent'
    }
  }),

  construct: function(options) {
    this.initializeModel(options.selected);
    this.initializeView(options.el);
    this.load(this.model);
    this.registerBinders();
    this.addListeners();

    if (options.companies) {
      this.setCompanies(options.companies);
    } else {
      this.fetchCompanies(options.fetchCompanies);
    }
  },

  initializeModel: function(selectedCompany) {
    this.model = new Backbone.Model({
      selectedCompany: selectedCompany
    });
  },

  initializeView: function(element) {
    this.view = new this.View({
      el: element,
      component: this,
      model: this.model,
      template: TSDK.UI.Templates.Goals.SCCompanyPicker
    });
  },

  registerBinders: function() {
    this.bind('initializeWidgets');
    this.bind('fetchCallback');
    this.bind('handleFetchError');
  },

  addListeners: function() {
    this.listenTo(this.view, 'renderComplete', this.initializeWidgets);
  },

  initializeWidgets: function() {
  },

  updateSelection: function(company) {
    this.model.set('selectedCompany', company);
  },

  getSelectedCompany: function() {
    return this.model.get('selectedCompany');
  },

  fetchCompanies: function(fetchCompanies) {
    if (_.isFunction(fetchCompanies)) {
      fetchCompanies.call(undefined, this.fetchCallback, this.handleFetchError);
    }
  },

  fetchCallback: function(response) {
    var scCompanies = TSDK.UI.Goals.SCCompanyFactory.parse(response);
    if (!scCompanies) {
      scCompanies = [];
    }
    this.setCompanies(scCompanies);
  },

  handleFetchError: function() {
    this.setCompanies([]);
  },

  triggerCompanySelectedEvent: function(event) {
    this.trigger('scCompany:selected', event.target.value);
  },

  getCompanies: function() {
    return this.model.get('scCompanies');
  },

  setCompanies: function(response) {
    var selectedCompany = this.getSelectedCompany(),
      newSelection;
    if (selectedCompany) {
      newSelection = selectedCompany;
      if (response.activeCompany && selectedCompany != response.activeCompany) {

        //Check if the current selection is valid
        newSelection = _.find(response.companiesList, function(company) {
          return company.name === selectedCompany;
        });

        //If the selection is valid set it the current selection else change the selection to current active company
        if (newSelection) {
          newSelection = selectedCompany;
        } else {
          newSelection = response.activeCompany;
        }
      }
    } else {
      newSelection = response.activeCompany;
    }

    if (newSelection != selectedCompany) {
      this.model.set('selectedCompany', newSelection, { silent: true });
    }

    this.model.set('scCompanies', response.companiesList);
    this.trigger('scCompany:fetched', response.companiesList);
  },

  removeSelectedCompany: function(options) {
    this.model.unset('selectedCompany', options);
  }
});

TSDK.UI.Goals.prototype.config={
  "SHOW_ONLY_ANALYTICS": false
};
"use strict";

TSDK.UI.GoalsAndSettingsModel = Backbone.Model.extend({
  getGoals: function() {
    return this.get('goals');
  },

  setGoals: function(goals) {
    this.silentSet('goals', goals);
  },

  silentSet: function (property, value, options) {
    var settingOptions = {silent: true};
    if (options) {
      _.extend(settingOptions, options);
    }

    this.set(property, value, settingOptions);
  }
});



"use strict";

TSDK.UI.GoalsAndSettings = new PseudoClass({
  toString: 'GoalsAndSettings',

  extend: TSDK.UI.Component,

  Model: TSDK.UI.GoalsAndSettingsModel,

  View: F.View.extend({
    events: {
    }
  }),

  initialize: function(options) {
    this.initView(options);
    this.registerListeners();
    this.registerVars(options);
    this.registerBinders();
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.GoalsAndSettings.GoalsAndSettings,
      model: this.model
    });
  },

  registerListeners: function() {
    this.listenTo(this.view, 'renderComplete', function() {
      this.renderSubViews();
    });
  },

  registerVars: function(options) {
    this.goalsOptions = options.goals;
  },

  registerBinders: function() {
  },

  renderSubViews: function() {
    this.addGoals();
  },

  addGoals: function() {
    var data = this.model.getGoals();

    this.goals && this.goals.destructButKeepEl();

    this.goals = this.addComponent(new TSDK.UI.Goals(_.extend({}, this.goalsOptions, {
      el: this.view.$('.tsdk-goals'),
      visible: true,
      data: data
    })), 'goals');
  },

  validate: function(highlightErrors) {
    return this.goals.validate(highlightErrors);
  },

  saveGoalsAndSettings: function() {
    var goalsContext = this.goals.getData();
    this.model.setGoals(goalsContext);
  },

  getGoalsAndSettings: function() {
    return this.model.toJSON();
  },

  getContext: function() {
    this.saveGoalsAndSettings();
    return this.getGoalsAndSettings();
  },

  setContext: function(goalsAndSettings) {
    this.loadModel(goalsAndSettings);
  }

});
TSDK.UI.GoalsAndSettings.prototype.config={
};
"use strict";

TSDK.UI.DiagramComponent = new PseudoClass({
  toString: 'Diagram',

  extend: TSDK.UI.Component,

  View: F.View.extend({
    commonEvents: {
      'coral-selectlist:change .tsdk-audience-box .context-menu coral-selectlist': '_handleAudienceAction',
      'coral-selectlist:change .tsdk-experience-box .context-menu coral-selectlist': '_handleExperienceAction',
      'click .no-audience': '_handleAudienceAdd',
      'click .no-experience': '_handleExperienceAdd',
      'change .experience-title-input': '_handleExperienceTitleChange',
      'blur .experience-title-input': '_handleExperienceTitleChange'
    },

    additionalEvents: {},

    events: function() {
      return _.extend({}, this.commonEvents, this.additionalEvents);
    }
  }),

  initialize: function(options) {
    this._handleBeforeInitialize(options);
    this._initView(options);
  },

  _handleBeforeInitialize: function() {
    // to be overridden (optional)
  },

  _initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: this._getTemplate(),
      model: this.model
    });
  },

  _getTemplate: function() {
    throw new Error('No template defined for ' + this.toString());
  },

  _getEmptyExperience: function() {
    return {};
  },

  _handleAudienceAction: function(evt) {
    var selectedItem = evt.target.selectedItem,
      action = selectedItem.value,
      audienceIndex = $(selectedItem).closest('.diagram-row').data('index'),
      audience = this.getAudience(audienceIndex);

    this._performActionOnAudience(action, audienceIndex, audience);
  },

  _handleAudienceAdd: function(evt) {
    var audienceIndex = $(evt.target).closest('.diagram-row').data('index');
    this._performActionOnAudience('add', audienceIndex);
  },

  _performActionOnAudience: function() {
    // No op
  },

  _handleExperienceAction: function(evt) {
    var selectedItem = evt.target.selectedItem,
      action = selectedItem.value,
      experienceIndex = $(selectedItem).closest('.diagram-row').data('index'),
      experience = this.getExperience(experienceIndex);

    if (action === 'rename') {
      this._toggleExperienceNameEditMode(experienceIndex, true);
    } else {
      this._performActionOnExperience(action, experienceIndex, experience);
    }
  },

  _handleExperienceAdd: function(evt) {
    var experienceIndex = $(evt.target).closest('.diagram-row').data('index');
    this._performActionOnExperience('add', experienceIndex);
  },

  _performActionOnExperience: function() {
    // No op
  },

  _handleExperienceTitleChange: function(evt) {
    var $experienceTitleInput = $(evt.target),
      newName = $.trim($experienceTitleInput.val()),
      experienceIndex = $experienceTitleInput.closest('.diagram-row').data('index'),
      experience = this.getExperience(experienceIndex);

    /*
    if (evt.relatedTarget) {
      // hack to avoid losing focus in input box on select list item selection
      this._toggleExperienceNameEditMode(experienceIndex, true);
      return;
    }
    */

    if (newName === '') {
      this.notifyError({
        message: TSDK.I18n.get('Experience name cannot be empty.')
      });
    } else if (experience.name !== newName) {
      this.renameExperience(experienceIndex, newName);
    }
    this._toggleExperienceNameEditMode(experienceIndex, false);
  },

  _toggleExperienceNameEditMode: function(index, flag) {
    var $experienceBox = this.view.$('.tsdk-experience-box').eq(index),
      $experienceNameInput = $experienceBox.find('.experience-title-input'),
      experienceNameInput = $experienceNameInput.get(0);

    Coral.commons.nextFrame(function() {
      $experienceBox.toggleClass('edit-mode', flag);

      if (flag) {
        $experienceBox.click(); // to hide context menu
        $experienceNameInput.focus();
        experienceNameInput.selectionStart = experienceNameInput.selectionEnd = experienceNameInput.value.length;
      }
    });
  },

  renameExperience: function(experienceIndex, newName) {
    var experiences = TSDK.UI.Util.clone(this.model.get('experiences')),
      experience,
      oldName;

    if (experiences && experiences.length && experienceIndex < experiences.length) {
      experience = experiences[experienceIndex];
      oldName = experience.name;
      experience.name = newName;
      this.model.set('experiences', experiences);

      this.trigger('experience:renamed', {
        index: experienceIndex,
        experience: experience,
        oldName: oldName,
        newName: newName
      });
    }
  },

  getAudience: function(index) {
    // to be overridden
  },

  getExperience: function(index) {
    // to be overridden
  },

  validateExperiences: function() {
    var experienceNames = _.map(this.model.get('experiences'), function(experience) { return experience.name; }),
      errorMessage;

    if (experienceNames.length === 0 || _.compact(experienceNames).length !== experienceNames.length) {
      errorMessage = TSDK.I18n.get('Some experiences are not defined.');
    } else if (_.uniq(experienceNames).length !== experienceNames.length) {
      errorMessage = TSDK.I18n.get('Duplicate experience names');
    }

    if (errorMessage) {
      this.notifyError({
        message: errorMessage
      });
      return false;
    }
    return true;
  },

  validate: function() {
    // to be overridden
    return true;
  },

  notifyError: function(options) {
    this.trigger('error', options);
  }
});
"use strict";

TSDK.UI.DiagramAB = new PseudoClass({
  toString: 'DiagramAB',

  extend: TSDK.UI.DiagramComponent,

  View: TSDK.UI.DiagramComponent.prototype.View.extend({
    additionalEvents: {
      'keydown .visitor-percentage': '_handleVisitorPercentageKeydown',
      'change .visitor-percentage': '_handleVisitorPercentageChange'
    }
  }),

  _getTemplate: function() {
    return TSDK.UI.Templates.DiagramComponent.DiagramAB;
  },

  _handleBeforeInitialize: function() {
    var experiences = this.model.get('experiences');
    this._lockVisitorPercentage(experiences);
    this._calculateVisitorPercentage(experiences);
  },

  _lockVisitorPercentage: function(experiences) {
    _.each(experiences, function(experience) {
      if (_.isNumber(experience.visitorPercentage)) {
        experience.isVisitorPercentageLocked = true;
      }
    });
  },

  _calculateVisitorPercentage: function(experiences) {
    var remainingPercentage = 100,
      experiencesToBeUpdated = [],
      experiencesToBeUpdatedCount,
      percentageShare;

    _.each(experiences, function(experience) {
      var percentage = experience.visitorPercentage;

      if (_.isNumber(percentage) && experience.isVisitorPercentageLocked) {
        remainingPercentage -= percentage;
      } else {
        experiencesToBeUpdated.push(experience);
      }
    });

    experiencesToBeUpdatedCount = experiencesToBeUpdated.length;

    if (experiencesToBeUpdatedCount) {
      remainingPercentage = (remainingPercentage < 0) ? 0 : remainingPercentage;
      percentageShare = Math.floor(remainingPercentage / experiencesToBeUpdatedCount);

      _.each(experiencesToBeUpdated, function(experience) {
        experience.visitorPercentage = percentageShare;
        remainingPercentage -= percentageShare;
      });

      if (remainingPercentage > 0) {
        // remainingPercentage will always be less than experiencesToBeUpdatedCount
        for (var i = 0; i < remainingPercentage; i++) {
          experiencesToBeUpdated[i].visitorPercentage++;
        }
      }
    }
  },

  _handleVisitorPercentageKeydown: function(evt) {
    var keyCode = evt.keyCode || evt.which;

    // Allow: backspace, delete, tab, escape, enter OR home, end, left, right
    if ([46, 8, 9, 27, 13].indexOf(keyCode) > -1 || keyCode >= 35 && keyCode <= 39) {
      return;
    }

    // Ensure that it is a number and stop the keypress (96-105 is keycode for numbers on windows keyboard)
    if (evt.shiftKey || !((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105))) {
      evt.preventDefault();
    }
  },

  _handleVisitorPercentageChange: function(evt) {
    var $visitorPercentageInput = $(evt.target),
      newPercentage = parseInt($.trim($visitorPercentageInput.val())),
      experienceIndex = $visitorPercentageInput.closest('.diagram-row').data('index'),
      experience = this.getExperience(experienceIndex),
      errorMessage;

    if (_.isNaN(newPercentage)) {
      errorMessage = TSDK.I18n.get('Invalid visitor percentage.');
    } else if (newPercentage < 0 || newPercentage > 100) {
      errorMessage = TSDK.I18n.get('Visitor percentage should be a valid number between 0 to 100.');
    } else if (experience.visitorPercentage !== newPercentage) {
      this.setVisitorPercentage(experienceIndex, newPercentage);
    }

    if (errorMessage) {
      $visitorPercentageInput.val(experience.visitorPercentage);
      this.notifyError({
        message: errorMessage
      });
    }
  },

  setVisitorPercentage: function(experienceIndex, newPercentage) {
    var experiences = TSDK.UI.Util.clone(this.model.get('experiences')),
      experience,
      oldPercentage;

    if (experiences && experiences.length && experienceIndex < experiences.length) {
      experience = experiences[experienceIndex];
      oldPercentage = experience.visitorPercentage;
      experience.visitorPercentage = newPercentage;
      experience.isVisitorPercentageLocked = true;
      this._calculateVisitorPercentage(experiences);
      this.model.set('experiences', experiences);

      this.trigger('experience:visitorPercentage:changed', {
        index: experienceIndex,
        experience: experience,
        oldPercentage: oldPercentage,
        newPercentage: newPercentage
      });
    }
  },

  _performActionOnAudience: function(action, audienceIndex, audience) {
    var callback;

    if (action === 'remove') {
      this.removeAudience();
    } else if (action === 'add' || action === 'edit') {
      callback = this._setAudience.bind(this);
    }

    this.trigger('audience:' + action, {
      index: audienceIndex,
      audience: audience,
      callback: callback
    });
  },

  _performActionOnExperience: function(action, experienceIndex, experience) {
    var callback;

    if (action === 'remove') {
      this.removeExperience(experienceIndex);
    } else if (action === 'add' || action === 'edit') {
      callback = this._setExperience.bind(this);
      this.activeIndex = experienceIndex;
    }

    this.trigger('experience:' + action, {
      index: experienceIndex,
      experience: experience,
      callback: callback
    });
  },

  _setAudience: function(audience) {
    if (audience) {
      this.model.set('audience', audience);
    }
  },

  removeAudience: function() {
    this.model.unset('audience');
  },

  _setExperience: function(experience) {
    if (experience) {
      var experiences = _.clone(this.model.get('experiences')) || [];

      if (_.isNumber(this.activeIndex) && this.activeIndex < experiences.length) {
        experiences[this.activeIndex] = experience;
      } else {
        experiences.push(experience);
      }
      this._calculateVisitorPercentage(experiences);
      this.model.set('experiences', experiences);
    }
    this._resetActiveIndex();
  },

  _resetActiveIndex: function() {
    delete this.activeIndex;
  },

  addExperience: function(experience) {
    if (experience) {
      this._resetActiveIndex();
      this._setExperience(experience);
    } else {
      this._performActionOnExperience('add');
    }
  },

  removeExperience: function(index) {
    var experiences = _.clone(this.model.get('experiences'));

    experiences.splice(index, 1);
    this._calculateVisitorPercentage(experiences);
    this.model.set('experiences', experiences);
  },

  getAudience: function() {
    return this.model.get('audience');
  },

  getExperience: function(index) {
    var experiences = this.model.get('experiences');
    return experiences && experiences[index];
  },

  validateAudience: function() {
    var audience = this.getAudience();
    if (!audience || !audience.name) {
      this.notifyError({
        message: TSDK.I18n.get('Audience is not defined.')
      });
      return false;
    }
    return true;
  },

  validateVisitorPercentage: function() {
    var totalPercentage = _.reduce(this.model.get('experiences'), function(memo, experience) {
        return memo + experience.visitorPercentage;
      }, 0);

    if (totalPercentage !== 100) {
      this.notifyError({
        message: TSDK.I18n.get('Total visitor percentage is not equal to 100.')
      });
      return false;
    }
    return true;
  },

  validate: function() {
    return this.validateAudience() && this.validateExperiences() && this.validateVisitorPercentage();
  },

  getContext: function() {
    var context = this.model.toJSON(),
      experiences = TSDK.UI.Util.clone(context.experiences);

    if (experiences) {
      _.each(experiences, function (experience) {
        delete experience.isVisitorPercentageLocked;
      });

      context.experiences = experiences;
    }
    return context;
  }
});
"use strict";

TSDK.UI.DiagramXT = new PseudoClass({
  toString: 'DiagramXT',

  extend: TSDK.UI.DiagramComponent,

  View: TSDK.UI.DiagramComponent.prototype.View.extend({
    additionalEvents: {
    }
  }),

  _getTemplate: function() {
    return TSDK.UI.Templates.DiagramComponent.DiagramXT;
  },

  _performActionOnAudience: function(action, audienceIndex, audience) {
    var callback;

    if (action === 'remove') {
      this.removeAudience(audienceIndex);
    } else if (action === 'add' || action === 'edit') {
      callback = this._setAudience.bind(this);
      this.activeIndex = audienceIndex;
    }

    this.trigger('audience:' + action, {
      index: audienceIndex,
      audience: audience,
      callback: callback
    });
  },

  _performActionOnExperience: function(action, experienceIndex, experience) {
    var callback;

    if (action === 'remove') {
      this.removeExperience(experienceIndex);
    } else if (action === 'add' || action === 'edit') {
      callback = this._setExperience.bind(this);
      this.activeIndex = experienceIndex;
    }

    this.trigger('experience:' + action, {
      index: experienceIndex,
      experience: experience,
      callback: callback
    });
  },

  _setAudience: function(audience) {
    if (audience) {
      var experiences = TSDK.UI.Util.clone(this.model.get('experiences')) || [],
        experience;

      if (_.isNumber(this.activeIndex) && this.activeIndex < experiences.length) {
        experience = experiences[this.activeIndex];
      } else {
        experience = this._getEmptyExperience();
        experiences.push(experience);
      }
      experience.audience = audience;
      this.model.set('experiences', experiences);
    }
    this._resetActiveIndex();
  },

  removeAudience: function(index) {
    this.removeExperience(index);
  },

  _setExperience: function(experience) {
    if (experience) {
      var experiences = _.clone(this.model.get('experiences')) || [],
        oldAudience;

      if (_.isNumber(this.activeIndex) && this.activeIndex < experiences.length) {
        oldAudience = experiences[this.activeIndex].audience;
        experiences[this.activeIndex] = experience;
        experience.audience = experience.audience || oldAudience;
      } else {
        experiences.push(experience);
      }
      this.model.set('experiences', experiences);
    }
    this._resetActiveIndex();
  },

  _resetActiveIndex: function() {
    delete this.activeIndex;
  },

  addExperienceTargeting: function(experience) {
    var lastExperience = this._getLastExperience();

    if (experience) {
      this._resetActiveIndex();
      this._setExperience(experience);
    } else {
      if (!lastExperience || _.size(lastExperience) !== 0) {
        this._performActionOnAudience('add');
      }
    }
  },

  _getLastExperience: function() {
    var experiences = this.model.get('experiences'),
      experiencesLength = experiences.length;

    if (experiencesLength > 0) {
      return experiences[experiencesLength - 1];
    }
  },

  removeExperience: function(index) {
    var experiences = _.clone(this.model.get('experiences'));

    experiences.splice(index, 1);

    if (experiences.length === 0) {
      experiences.push(this._getEmptyExperience());
    }
    this.model.set('experiences', experiences);
  },

  getAudience: function(index) {
    var experience = this.getExperience(index);
    return experience && experience.audience;
  },

  getExperience: function(index) {
    var experiences = this.model.get('experiences');
    return experiences && experiences[index];
  },

  validateAudiences: function() {
    var audienceNames = _.map(this.model.get('experiences'), function(experience) {
        return experience.audience && experience.audience.name;
      }),
      errorMessage;

    if (_.compact(audienceNames).length !== audienceNames.length) {
      errorMessage = TSDK.I18n.get('Some audiences are not defined.');
    } else if (_.uniq(audienceNames).length !== audienceNames.length) {
      errorMessage = TSDK.I18n.get('Duplicate audiences');
    }

    if (errorMessage) {
      this.notifyError({
        message: errorMessage
      });
      return false;
    }
    return true;
  },

  validate: function() {
    return this.validateAudiences() && this.validateExperiences();
  }
});
TSDK.UI.DiagramComponent.prototype.config={
};
TSDK.EnumUtil.addEnum('ExperienceRailActions', {
  EDIT_AUDIENCE: 'edit',
  RENAME_EXPERIENCE: 'rename',
  DUPLICATE: 'duplicate',
  DELETE: 'delete'
});
"use strict";

TSDK.UI.ExperienceRailComponent = new PseudoClass({
  toString: 'ExperienceRail',

  extend: TSDK.UI.ConfigurableComponent,

  View: F.View.extend({
    commonEvents: {
      'click .collapse-btn': 'collapseRail',
      'click .expand-btn': 'expandRail',
      'click .experience-row .menu-button': '_handleMenuButtonClick',
      'click .experience-row': '_handleExperienceRowClick'
    },

    additionalEvents: {},

    events: function() {
      return _.extend({}, this.commonEvents, this.additionalEvents);
    }
  }),

  MINIMUM_EXPERIENCES: 0,

  MAXIMUM_EXPERIENCES: 100000,

  modes: {
    EXPANDING: 'expanding',
    EXPANDED: 'expanded',
    COLLAPSING: 'collapsing',
    COLLAPSED: 'collapsed'
  },

  railWidth: {
    EXPANDED: '15.625rem',
    COLLAPSED: '3rem'
  },

  ANIMATION_DURATION: 250,

  initialize: function(options) {
    this._initConfigs();
    this._registerBinders();
    this._initView(options);
    this._addContextPopover();
  },

  _initConfigs: function() {
    this._initActions();
    this._initMode();
    this._initActiveIndex();
    this._initAutoAdd();
    this._initMinMaxExperiencesCount();
  },

  _initActions: function() {
    var actions = this.getConfigInModel('actions') || this._defaultActions;
    this.setConfigInModel('actions', actions);
  },

  _initMode: function() {
    var mode = this.getConfigInModel('mode') || this.modes.EXPANDED;
    this.setConfigInModel('mode', mode);
  },

  _initActiveIndex: function() {
    this.switchExperience(this.getConfigInModel('activeIndex'));
  },

  _initAutoAdd: function() {
    var autoAdd = this.getConfigInModel('autoAdd');

    if (_.isUndefined(autoAdd)) {
      autoAdd = true;
    }
    this.setConfigInModel('autoAdd', autoAdd);
  },

  _initMinMaxExperiencesCount: function() {
    var minExperiencesCount = this.getConfigInModel('minCount'),
      maxExperiencesCount = this.getConfigInModel('maxCount'),
      experiencesCount = this.getExperiencesCount();

    if (!_.isNumber(minExperiencesCount)
      || minExperiencesCount < this.MINIMUM_EXPERIENCES) {
      minExperiencesCount = this.MINIMUM_EXPERIENCES;
    }
    if (!_.isNumber(maxExperiencesCount)
      || maxExperiencesCount < minExperiencesCount
      || maxExperiencesCount > this.MAXIMUM_EXPERIENCES) {
      maxExperiencesCount = this.MAXIMUM_EXPERIENCES;
    }
    this.setConfigInModel('minCount', minExperiencesCount);
    this.setConfigInModel('maxCount', maxExperiencesCount);

    while (experiencesCount < minExperiencesCount) {
      this.addExperience({});
      experiencesCount++;
    }
  },

  _initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: this._getTemplate(),
      model: this.model
    });
  },

  _getTemplate: function() {
    throw new Error('No template defined for ' + this.toString());
  },

  _registerBinders: function() {
    this.bind('_handleContextPopoverClose');
    this.bind('_handleMenuAction');
    this.bind('_handleExperienceNameKeydown');
    this.bind('_handleExperienceNameSave');
    this.bind('_handleExperienceNameCancel');
  },

  _addContextPopover: function() {
    var oldContextPopover = $('.tsdk-experiencerail-context-popover').get(0);

    // remove existing popover
    oldContextPopover && oldContextPopover.remove();

    this.contextPopover = new Coral.Popover().set({
      alignMy: Coral.Overlay.align.LEFT_TOP,
      alignAt: Coral.Overlay.align.CENTER_BOTTOM,
      offset: -8
    });

    $(this.contextPopover)
      .appendTo('body')
      .addClass('tsdk-experiencerail-context-popover')
      .get(0)
      .on('coral-overlay:close', this._handleContextPopoverClose)
      .on('coral-selectlist:change', '.action-menu', this._handleMenuAction)
      .on('keydown', '.experience-title-input', this._handleExperienceNameKeydown)
      .on('click', '.rename-save-button', this._handleExperienceNameSave)
      .on('click', '.rename-cancel-button', this._handleExperienceNameCancel);
  },

  _changeMode: function(mode, triggerModelChange) {
    this.setConfigInModel('mode', mode);
    this.view.$('.tsdk-experience-rail').attr('data-mode', mode);
    if (triggerModelChange) {
      this.model.trigger('change');
    }
  },

  collapseRail: function() {
    var that = this,
      $rail = this.view.$('.tsdk-experience-rail'),
      $collapseBtn = $rail.find('.collapse-btn > coral-icon'),
      noAnimation = this.getConfigInModel('noAnimation'),
      isRailRightPlaced = this.getConfigInModel('placement') === 'right';

    if (noAnimation) {
      this._changeMode(this.modes.COLLAPSED);
      this.trigger('rail:collapsed', $rail.outerWidth());
      return;
    }

    $rail.width(this.railWidth.EXPANDED);
    this._changeMode(this.modes.COLLAPSING);

    $rail.animate({ width: this.railWidth.COLLAPSED }, {
      duration: this.ANIMATION_DURATION,
      progress: function(a, p, remainingMs) {
        var iconRotationDegree = (1 - remainingMs / that.ANIMATION_DURATION) * 180;
        if (isRailRightPlaced) {
          iconRotationDegree *= -1;
        }
        $collapseBtn.css({ transform: 'rotate(' + iconRotationDegree + 'deg)' });
        that.trigger('rail:collapsing', $rail.outerWidth());
      },
      always: function() {
        $collapseBtn.css({ transform: 'rotate(0deg)' });
        that._changeMode(that.modes.COLLAPSED);
        that.trigger('rail:collapsed', $rail.outerWidth());
      }
    });
  },

  expandRail: function() {
    var that = this,
      $rail = this.view.$('.tsdk-experience-rail'),
      $expandBtn = $rail.find('.expand-btn > coral-icon'),
      noAnimation = this.getConfigInModel('noAnimation'),
      isRailRightPlaced = this.getConfigInModel('placement') === 'right';

    if (noAnimation) {
      this._changeMode(this.modes.EXPANDED);
      this.trigger('rail:expanded', $rail.outerWidth());
      return;
    }

    $rail.width(this.railWidth.COLLAPSED);
    this._changeMode(this.modes.EXPANDING);

    $rail.animate({ width: this.railWidth.EXPANDED }, {
      duration: this.ANIMATION_DURATION,
      progress: function(a, p, remainingMs) {
        var iconRotationDegree = (1 - remainingMs / that.ANIMATION_DURATION) * 180;
        if (!isRailRightPlaced) {
          iconRotationDegree *= -1;
        }
        $expandBtn.css({ transform: 'rotate(' + iconRotationDegree + 'deg)' });
        that.trigger('rail:expanding', $rail.outerWidth());
      },
      always: function() {
        $expandBtn.css({ transform: 'rotate(0deg)' });
        that._changeMode(that.modes.EXPANDED);
        that.trigger('rail:expanded', $rail.outerWidth());
      }
    });
  },

  isRailCollapsed: function() {
    return this.getConfigInModel('mode') === this.modes.COLLAPSED;
  },

  handleRenderComplete: function() {
    var that = this;

    this.view.$('.rail-body-rows')
      .scrollTop(this._currentScrollTop || 0)
      .bind('scroll', function() {
        that.contextPopover.hide();
      });
  },

  _saveCurrentScrollPosition: function() {
    this._currentScrollTop = this.view.$('.rail-body-rows').scrollTop();
  },

  _handleMenuButtonClick: function(evt) {
    var $row = $(evt.currentTarget).closest('.experience-row'),
      index = $row.data('index');

    if ($row.hasClass('no-context')) {
      return;
    }

    evt.preventDefault();
    evt.stopPropagation();

    if ($row.hasClass('selected') && this.contextPopover.open) {
      this.contextPopover.hide();
      return;
    }

    if (!this.isRailCollapsed() || index === this.getConfigInModel('activeIndex')) {
      this._clearRowSelection();
      $row.addClass('selected');
      evt.noSwitching = true;
    }

    this._showContextPopover(index);
  },

  _handleContextPopoverClose: function(evt) {
    var index = evt && $(evt.currentTarget).closest('.experience-row').data('index');
    this._clearRowSelection(index);
  },

  _showContextPopover: function(index) {
    var actions = this.getConfigInModel('actions'),
      actionMenuMarkup;

    if (this.getExperiencesCount() <= this.getConfigInModel('minCount')) {
      actions = _.without(actions, TSDK.Enums.ExperienceRailActions.DELETE);
    }

    if (this.getExperiencesCount() === this.getConfigInModel('maxCount')) {
      actions = _.without(actions, TSDK.Enums.ExperienceRailActions.DUPLICATE);
    }

    if (actions.length) {
      actionMenuMarkup = TSDK.UI.Templates.ExperienceRailComponent.ExperienceRailActionMenu({
        actions: actions,
        experienceOnly: this.ACTION_MENU_EXPERIENCE_ONLY
      });
      this._renderContextPopover(index, actionMenuMarkup);
    }
  },

  _clearRowSelection: function(index) {
    var $selectedRow = _.isNumber(index) ? this._getExperienceRow(index) : this.view.$('.experience-row.selected');
    $selectedRow.removeClass('selected');
  },

  _handleExperienceRowClick: function(evt) {
    if (evt.noSwitching) {
      return;
    }

    var index = $(evt.currentTarget).closest('.experience-row').data('index');
    if (index !== this.getConfigInModel('activeIndex')) {
      this.switchExperience(index);
    }
  },

  switchExperience: function(index, forceScrollToView) {
    var numberOfExperiences = _.size(this.getExperiences()),
      indexToSwitch = -1;

    if (_.isNumber(index) && index >= 0 && index < numberOfExperiences) {
      indexToSwitch = index;
    } else {
      indexToSwitch = numberOfExperiences - 1;
    }

    if (indexToSwitch !== -1) {
      this.setConfigInModel('activeIndex', indexToSwitch);
      if (this.view) {
        this.view.$('.experience-row.active').removeClass('active');
        this._getExperienceRow(indexToSwitch).addClass('active');

        if (forceScrollToView) {
          this.scrollRailToExperience(indexToSwitch);
        }
      }
      this.trigger('tab:switched', indexToSwitch);
    }
  },

  scrollRailToExperience: function(index) {
    var experienceRow = this._getExperienceRow(index).get(0);
    this.view.$('.rail-body-rows').scrollTop(experienceRow.offsetTop);
  },

  _handleMenuAction: function(evt) {
    var selectedItem = evt.target.selectedItem,
      action = selectedItem.value,
      index = this.view.$('.experience-row.selected').data('index'),
      experience = this.getExperience(index);

    this._saveCurrentScrollPosition();

    if (action === 'rename') {
      this._openRenameExperiencePopover(index);
    } else if (action === 'delete') {
      this.deleteExperience(index, experience);
      this.contextPopover.hide();
    } else {
      this._performAction(action, index, experience);
      this.contextPopover.hide();
    }
  },

  _openRenameExperiencePopover: function(index) {
    var experience = this.getExperience(index),
      renamePopoverContentMarkup = TSDK.UI.Templates.ExperienceRailComponent.ExperienceRailRenamePopover(experience),
      $experienceNameInput,
      experienceNameInput;

    this._renderContextPopover(index, renamePopoverContentMarkup);
    $experienceNameInput = $(this.contextPopover).find('.experience-title-input');
    experienceNameInput = $experienceNameInput.get(0);

    Coral.commons.nextFrame(function() {
      $experienceNameInput.focus();
      experienceNameInput.selectionStart = experienceNameInput.selectionEnd = experienceNameInput.value.length;
    });
  },

  _renderContextPopover: function(index, contentMarkup) {
    this.contextPopover.set({
      content: {
        innerHTML: contentMarkup
      },
      target: this._getContextPopoverTarget(index)
    });
    this.contextPopover.show();
  },

  _getExperienceRow: function(index) {
    return this.view.$('.experience-row').eq(index);
  },

  _getContextPopoverTarget: function(index) {
    return this._getExperienceRow(index).find('.menu-button').get(0);
  },

  _handleExperienceNameSave: function(evt) {
    var $experienceTitleInput = $(evt.target).closest('.rename-popover').find('.experience-title-input'),
      newName = $.trim($experienceTitleInput.val()),
      experienceIndex = this.view.$('.experience-row.selected').data('index'),
      experience = this.getExperience(experienceIndex);

    if (experience.name === newName) {
      this._handleExperienceNameCancel(evt);
      return;
    }

    if (newName === '') {
      $experienceTitleInput.focus().get(0).invalid = true;
      this.notifyError(TSDK.I18n.get('Experience name cannot be empty.'));
    } else if (!this._isExperienceNameUnique(newName)) {
      $experienceTitleInput.focus().get(0).invalid = true;
      this.notifyError(TSDK.I18n.get('Experience name is not unique.'));
    } else {
      this.renameExperience(experienceIndex, newName);
      this.contextPopover.hide();
    }
    evt.noSwitching = true;
  },

  _isExperienceNameUnique: function(experienceName) {
    return _.every(this.getExperiences(), function(experience) {
      return experience.name !== experienceName;
    });
  },

  _handleExperienceNameKeydown: function(evt) {
    evt.target.invalid = false;

    if (evt.keyCode === 13) {
      this._handleExperienceNameSave(evt);
      evt.preventDefault();
      evt.stopPropagation();
    } else if (evt.keyCode === 27) {
      this._handleExperienceNameCancel(evt);
    }
  },

  _handleExperienceNameCancel: function(evt) {
    this.contextPopover.hide();
    evt.noSwitching = true;
  },

  renameExperience: function(experienceIndex, newName) {
    var experiences = this.getExperiences(true),
      experience,
      oldName;

    if (experiences && experiences.length && experienceIndex < experiences.length) {
      experience = experiences[experienceIndex];
      oldName = experience.name;
      experience.name = newName;
      this.setExperiences(experiences);

      this.trigger('experience:renamed', {
        index: experienceIndex,
        experience: experience,
        oldName: oldName,
        newName: newName
      });
    }
  },

  deleteExperience: function(index, experience) {
    var experiences = this.getExperiences(true),
      oldActiveIndex = this.getConfigInModel('activeIndex'),
      newActiveIndex;

    experiences.splice(index, 1);

    this.setExperiences(experiences);
    this.trigger('experience:deleted', {
      index: index,
      oldExperience: experience
    });

    if (index === oldActiveIndex) {
      // active row is deleted, next row (if available) will become active
      newActiveIndex = index === experiences.length ? index - 1 : index;
    } else if (index < oldActiveIndex) {
      // row above active row is deleted, active row index decreases by 1
      newActiveIndex = oldActiveIndex - 1;
    } else {
      // row below active is deleted, active row index remains the same
      newActiveIndex = oldActiveIndex;
    }

    this.switchExperience(newActiveIndex);

    if (experiences.length === 0) {
      this._handleAllExperiencesDeleted();
    }
  },

  _handleAllExperiencesDeleted: function() {
    // To be overridden
  },

  getExperience: function(index) {
    var experiences = this.getExperiences();
    return experiences && experiences[index];
  },

  getExperiences: function(clone) {
    var experiences = this.model.get('experiences');

    if (clone) {
      experiences = TSDK.UI.Util.clone(experiences) || [];
    }
    return experiences;
  },

  getExperiencesCount: function() {
    var experiences = this.getExperiences();
    return experiences ? experiences.length : 0;
  },

  setExperiences: function(experiences) {
    this.model.set('experiences', experiences);
  },

  _generateNewExperienceName: function() {
    var existingExperienceNames = _.pluck(this.getExperiences(), 'name'),
      nextExperienceName,
      ctr = 0;

    do {
      nextExperienceName = TSDK.I18n.get('Experience') + ' ' +
        TSDK.UI.ExperienceRailComponent.Util.deriveExperienceShortNameFromIndex(ctr++);
    } while (existingExperienceNames.indexOf(nextExperienceName) !== -1);

    return nextExperienceName;
  },

  _generateUniqueVersionedExperienceName: function(experienceNameToBeVersioned) {
    var existingExperienceNames = _.pluck(this.getExperiences(), 'name'),
      nextExperienceName,
      ctr = 0;

    do {
      nextExperienceName = experienceNameToBeVersioned + ctr++;
    } while (existingExperienceNames.indexOf(nextExperienceName) !== -1);

    return nextExperienceName;
  },

  validate: function() {
    // to be overridden
    return true;
  },

  notifyError: function(message) {
    this.trigger('error', {
      message: message
    });
  }
});
TSDK.UI.ExperienceRailComponent.Util = {
  deriveExperienceShortNameFromIndex: function(index) {
    if (typeof index !== 'number') {
      return 'A';
    }
    if (index < 26) {
      return String.fromCharCode(65 + index);
    }
    return TSDK.UI.ExperienceRailComponent.Util.deriveExperienceShortNameFromIndex(Math.floor(index / 26) - 1) + String.fromCharCode(65 + index % 26);
  },

  deriveExperienceShortNameFromName: function(experienceName) {
    var prefix = TSDK.I18n.get('Experience') + ' ';

    if (experienceName.indexOf(prefix) === 0) {
      experienceName = experienceName.substring(prefix.length);
    }

    return experienceName.substr(0, 2);
  }
};
"use strict";

TSDK.UI.ExperienceRailAB = new PseudoClass({
  toString: 'ExperienceRailAB',

  extend: TSDK.UI.ExperienceRailComponent,

  View: TSDK.UI.ExperienceRailComponent.prototype.View.extend({
    additionalEvents: {
      'click .add-experience': '_handleAddExperience'
    }
  }),

  MINIMUM_EXPERIENCES: 1,

  ACTION_MENU_EXPERIENCE_ONLY: true,

  _defaultActions: [
    TSDK.Enums.ExperienceRailActions.RENAME_EXPERIENCE,
    TSDK.Enums.ExperienceRailActions.DUPLICATE,
    TSDK.Enums.ExperienceRailActions.DELETE
  ],

  _getTemplate: function() {
    return TSDK.UI.Templates.ExperienceRailComponent.ExperienceRailAB;
  },

  _handleAddExperience: function() {
    if (this.getConfigInModel('autoAdd')) {
      this.addExperience();
    } else {
      this.trigger('experience:add', {
        callback: this.addExperience.bind(this)
      });
    }
  },

  addExperience: function(newExperience) {
    var experiences = this.getExperiences(true),
      newExperienceIndex = experiences.length;

    newExperience = newExperience || {};
    newExperience.name = newExperience.name || this._generateNewExperienceName();

    experiences.push(newExperience);
    this.setExperiences(experiences);

    this.trigger('experience:added', {
      index: newExperienceIndex,
      experience: newExperience
    });

    this.switchExperience(newExperienceIndex, true);
  },

  _performAction: function(action, index, experience) {
    if (action === 'duplicate') {
      this._duplicateExperience(experience);
    }
  },

  _duplicateExperience: function(experience) {
    var newExperience = TSDK.UI.Util.clone(experience);
    newExperience.name = this._generateUniqueVersionedExperienceName(newExperience.name);
    this.addExperience(newExperience);
  }
});
"use strict";

TSDK.UI.ExperienceRailXT = new PseudoClass({
  toString: 'ExperienceRailXT',

  extend: TSDK.UI.ExperienceRailComponent,

  View: TSDK.UI.ExperienceRailComponent.prototype.View.extend({
    additionalEvents: {
      'click .add-experience': '_handleAddExperienceTargeting',
      'click .add-audience': '_handleAddAudience'
    }
  }),

  _defaultActions: [
    TSDK.Enums.ExperienceRailActions.EDIT_AUDIENCE,
    TSDK.Enums.ExperienceRailActions.RENAME_EXPERIENCE,
    TSDK.Enums.ExperienceRailActions.DUPLICATE,
    TSDK.Enums.ExperienceRailActions.DELETE
  ],

  _getTemplate: function() {
    return TSDK.UI.Templates.ExperienceRailComponent.ExperienceRailXT;
  },

  _handleAddExperienceTargeting: function() {
    var handler = this.addExperience.bind(this);

    if (this.getConfigInModel('autoAdd')) {
      this._selectAudience(function(audience) {
        handler({
          audience: audience
        });
      });
    } else {
      this.trigger('experience:add', {
        callback: handler
      });
    }
  },

  _handleAddAudience: function(evt) {
    var index = $(evt.currentTarget).closest('.experience-row').data('index'),
      experience = this.getExperience(index),
      that = this;

    this._selectAudience(function(audience) {
      if (audience && audience.name) {
        experience.audience = audience;
        that.model.trigger('change');

        that.trigger('audience:added', {
          index: index,
          experience: experience,
          audience: audience
        });
      } else {
        that.notifyError(TSDK.I18n.get('Invalid audience'));
      }
    });
  },

  addExperience: function(newExperience) {
    var experiences = this.getExperiences(true),
      newExperienceIndex = experiences.length;

    newExperience = newExperience || {};
    newExperience.name = newExperience.name || this._generateNewExperienceName();

    //if (newExperience.audience && newExperience.audience.name) {
      experiences.push(newExperience);
      this.setExperiences(experiences);

      this.trigger('experience:added', {
        index: newExperienceIndex,
        experience: newExperience
      });

      this.switchExperience(newExperienceIndex, true);
    //} else {
    //  this.notifyError(TSDK.I18n.get('No Audience found'));
    //}
  },

  _performAction: function(action, index, experience) {
    if (action === 'duplicate') {
      this._duplicateExperience(experience);
    } else if (action === 'edit') {
      this._changeAudience(index, experience);
    }
  },

  _duplicateExperience: function(experience) {
    var handler = this.addExperience.bind(this),
      newExperience = TSDK.UI.Util.clone(experience);

    newExperience.name = this._generateUniqueVersionedExperienceName(newExperience.name);
    this._selectAudience(function(audience) {
      newExperience.audience = audience;
      handler(newExperience);
    });
  },

  _changeAudience: function(index, experience) {
    var that = this,
      oldAudience = experience.audience;

    this._selectAudience(function(audience) {
      if (audience && audience.name) {
        experience.audience = audience;
        that.model.trigger('change');
        that.trigger('audience:edited', {
          index: index,
          oldAudience: oldAudience,
          newAudience: audience
        });
      }
    }, oldAudience);
  },

  _handleAllExperiencesDeleted: function() {
    this.addExperience({});
  },

  _selectAudience: function(callback, index, selected) {
    this.trigger('audience:select', {
      callback: callback,
      index: index,
      selected: selected
    });
  }
});
Handlebars.registerHelper('getExperienceShortName', function(experienceName) {
  return TSDK.UI.ExperienceRailComponent.Util.deriveExperienceShortNameFromName(experienceName);
});

Handlebars.registerHelper('ifAudienceValid', function(audience, options) {
  if (audience && audience.name) {
    return options.fn(this);
  }
  return options.inverse(this);
});

Handlebars.registerHelper('unlessSingleExperienceWithNoAudience', function(experiences, options) {
  if (experiences && experiences.length === 1 && !(experiences[0].audience && experiences[0].audience.name)) {
    return options.inverse(this);
  }
  return options.fn(this);
});

TSDK.UI.ExperienceRailComponent.prototype.config={
};
Handlebars.registerHelper('matchesAudienceType', function(type, typeInModel, options) {
  var ruleInfo = TSDK.Enums.AudienceRules[typeInModel];

  if (type === typeInModel || _.isString(ruleInfo) && type === ruleInfo) {
    return options.fn(this);
  }

  return options.inverse(this);
});

Handlebars.registerHelper('getIconForAudienceType', function(type) {
  var ruleInfo = TSDK.Enums.AudienceRules[type];

  if (_.isString(ruleInfo)) {
    ruleInfo = TSDK.Enums.AudienceRules[ruleInfo];
  }
  return ruleInfo && ruleInfo.icon || 'users';
});

Handlebars.registerHelper('getLabelForAudienceType', function(type) {
  var ruleInfo = TSDK.Enums.AudienceRules[type];

  if (_.isString(ruleInfo)) {
    ruleInfo = TSDK.Enums.AudienceRules[ruleInfo];
  }
  return ruleInfo && ruleInfo.label || type;
});

"use strict";

TSDK.UI.AudienceWorkflow = new PseudoClass({
  toString: 'AudienceWorkflow',

  extend: TSDK.UI.ConfigurableComponent,

  initialize: function(options) {
    options = options || {};

    this.ruleOptions = options.rules;
    this._initConfigs();
    this._registerBinders();
    this._initDialog();

    if (options.visible) {
      this.openWorkflow();
    }
  },

  _initConfigs: function() {
    this.initialConfig = this.config;
  },

  _registerBinders: function() {
    this.bind('_toggleFullscreen');
    this.bind('_triggerSelectedEvent');
    this.bind('_updateOnAudiencesSelection');
    this.bind('_scrollListToTop');
    this.bind('_changeStepFromContent');
    this.bind('_changeStepFromHeader');
    this.bind('_createAudience');
    this.bind('closeWorkflow');
  },

  _initDialog: function() {
    this.audienceWorkflowDialog = new Coral.Dialog().set({ backdrop: 'static' });
    $(this.audienceWorkflowDialog)
      .addClass('tsdk-audience-workflow')
      .appendTo('body');
    //TODO Remove this workaround when IE10 is de-supported
    if (TSDK.UI.AudienceWorkflow.Util.isBrowserIE10()) {
      $(this.audienceWorkflowDialog).addClass('coral-Backdrop');
    }
  },

  openWorkflow: function(config) {
    var that = this;

    config = _.extend({}, this.initialConfig, config);

    if (config) {
      this.configure(config);
      this._toggleFullscreen(config.fullscreen ? true : false);
    }

    this._addSubComponents();

    // to avoid flicker effect of dialog backdrop, we need to show it in next frame
    Coral.commons.nextFrame(function() {
      that.audienceWorkflowDialog.show();
    });
    return this; // required to allow chaining
  },

  closeWorkflow: function() {
    this.audienceWorkflowDialog.hide();
    this._destroySubComponents();
    return this;
  },

  _addSubComponents: function() {
    this._destroySubComponents();
    this._addDialogHeader();
    this._addDialogContent();
  },

  _addDialogHeader: function() {
    this.addComponent(new TSDK.UI.AudienceWorkflow.DialogHeader({
      el: $(this.audienceWorkflowDialog).find('coral-dialog-header'),
      model: { isEditMode: this.isEditMode() },
      visible: true
    }), 'audienceWorkflowDialogHeader')
    .on('fullscreen:toggle', this._toggleFullscreen)
    .on('step:change', this._changeStepFromHeader)
    .on('create', this._createAudience)
    .on('cancel', this.closeWorkflow);
  },

  _addDialogContent: function() {
    this.addComponent(new TSDK.UI.AudienceWorkflow.DialogContent({
      el: $(this.audienceWorkflowDialog).find('coral-dialog-content'),
      visible: true,
      config: this.config,
      model: this.audienceData,
      ruleOptions: this.ruleOptions,
      noRerender: true
    }), 'audienceWorkflowDialogContent')
    .on('step:change', this._changeStepFromContent);
  },

  _destroySubComponents: function() {
    _.each(this.components, function(component, componentName) {
      if (component) {
        component.destructButKeepEl();
        delete this.components[componentName];
      }
    }, this);
  },

  reset: function() {
    _.each(this.components, function(component) {
      if (typeof component.reset === 'function') {
        component.reset();
      }
    });
  },

  _toggleFullscreen: function(toggleToFullscreen) {
    this.audienceWorkflowDialog.fullscreen = toggleToFullscreen;
    $(this.audienceWorkflowDialog).find('coral-dialog-header').toggleClass('coral--dark', toggleToFullscreen);
  },

  _changeStepFromHeader: function(step) {
    if (step === 1) {
      this.components['audienceWorkflowDialogContent'].navigateToRulesCreateStep();
    } else if (step === 2) {
      if (!this.components['audienceWorkflowDialogContent'].navigateToReviewStep()) {
        this.notifyError(TSDK.I18n.get('Definition for one or more audience rules is incomplete.'));
        return;
      }
    }
    this.components['audienceWorkflowDialogHeader'].setStep(step);
  },

  _changeStepFromContent: function(step) {
    this.components['audienceWorkflowDialogHeader'].setStep(step);
  },

  _createAudience: function() {
    if (this.components['audienceWorkflowDialogContent'].validateAudienceName(true)) {
      this.trigger('audience:created',
        this.getData(),
        this.closeWorkflow
      );
    } else {
      this.notifyError(TSDK.I18n.get('Please enter a valid audience name.'));
    }
  },

  setContext: function(context) {
    this.audienceData = context;

    var dialogHeader = this.components['audienceWorkflowDialogHeader'],
      dialogContent = this.components['audienceWorkflowDialogContent'];

    dialogHeader && dialogHeader.setIsEditMode(this.isEditMode());
    dialogContent && dialogContent.updateModel(context);
  },

  getContext: function() {
    return this.components['audienceWorkflowDialogContent'].getAudienceToBeSaved();
  },

  notifyError: function(message) {
    this.propagateEvent('error', {
      message: message
    });
  },

  isEditMode: function() {
    return !!(this.audienceData && this.audienceData.name);
  }
});
TSDK.UI.AudienceWorkflow.Util = {
  fetchRequest: function(url) {
    return $.ajax({
      url: url,
      contentType: 'application/json; charset=utf-8',
      dataType: 'json'
    });
  },

  isInteger: function(value) {
    var regex = /^[0-9]+$/;

    value = value + ''; // Convert it to String
    return regex.test(value);
  },
  
  isBrowserIE10: function() {
    return navigator.appVersion.indexOf('MSIE 10') !== -1;
  }
};

TSDK.MapRequest = function(options, skipMapping) {
  var fetch = options.fetch,
    url = options.url,
    ajaxOptions = options.ajax,
    value = options.value,
    content = options.content,
    postprocessor = options.postprocessor,
    that = this;

  if (_.isFunction(fetch)) {
    this.fetch = function(fetchOptions) {
      var success = fetchOptions.success;
      return fetch(_.extend({}, fetchOptions, {
        success: function(data) {
          if (_.isFunction(postprocessor)) {
            data = postprocessor(data);
          }
          if (!skipMapping) {
            data = that._getMap(data, value, content);
          }
          success(data);
        }
      }));
    };
  } else {
    if (url) {
      if (_.isFunction(url)) {
        this._getUrl = url;
      } else {
        this._getUrl = function () {
          return url;
        };
      }
    }

    this.fetch = function(fetchOptions) {
      $.ajax(_.extend({}, { url: this._getUrl && this._getUrl(fetchOptions.data) }, ajaxOptions))
        .done(function(data, textStatus, jqXHR) {
          if (_.isFunction(fetchOptions.success)) {
            if (_.isFunction(postprocessor)) {
              data = postprocessor(data);
            }
            if (!skipMapping) {
              data = that._getMap(data, value, content);
            }
            fetchOptions.success(data, textStatus, jqXHR);
          }
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
          if (_.isFunction(fetchOptions.error)) {
            fetchOptions.error(jqXHR, textStatus, errorThrown);
          }
        });
    };
  }
};

TSDK.MapRequest.prototype._getMap = function(data, value, content) {
  var map = [],
    valueParser,
    contentParser;

  if (_.isFunction(value)) {
    valueParser = value;
  } else if (_.isString(value)) {
    valueParser = function(data) {
      return data[value];
    };
  }

  if (_.isFunction(content)) {
    contentParser = content;
  } else if (_.isString(content)) {
    contentParser = function(data) {
      return data[content];
    };
  } else {
    contentParser = valueParser;
  }

  _.each(data, function(entry) {
    var isSimple = _.isString(entry) || _.isNumber(entry);

    if (isSimple) {
      map.push({ value: entry, content: entry });
    } else if (valueParser) {
      map.push({ value: valueParser(entry), content: contentParser(entry) });
    }
  });

  return map;
};
"use strict";

TSDK.UI.AudienceWorkflow.DialogHeader = new PseudoClass({
  toString: 'AudienceWorkflowDialogHeader',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'click .close-button': 'triggerCancelEvent',
      'click .fullscreen-button': 'toggleFullscreenMode',
      'click .next-button': 'handleNextButtonClick',
      'click .create-button': 'triggerCreateEvent'
    }
  }),

  construct: function(options) {
    this.initView(options);
    this.load(_.extend({
      step: 1,
      totalSteps: 2
    }, options.model));
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.AudienceWorkflow.DialogHeader
    }).render();
  },

  toggleFullscreenMode: function(evt) {
    var toggleToFullscreen = $(evt.currentTarget).data('toggle');
    this.trigger('fullscreen:toggle', toggleToFullscreen);
  },

  handleNextButtonClick: function() {
    var nextStep = this.getStep() + 1;
    this.trigger('step:change', nextStep);
  },

  navigateToStep: function(step) {
    this.setStep(step);
  },

  triggerCancelEvent: function() {
    this.trigger('cancel');
  },

  triggerCreateEvent: function() {
    this.trigger('create');
  },

  getStep: function() {
    return this.model.get('step');
  },

  setStep: function(stepNumber) {
    this.model.set('step', stepNumber);
  },

  isEditMode: function() {
    return this.model.get('isEditMode');
  },

  setIsEditMode: function(isEditMode) {
    this.model.set('isEditMode', isEditMode);
  }
});
"use strict";

TSDK.UI.AudienceWorkflow.DialogContent = new PseudoClass({
  toString: 'AudienceWorkflowDialogContent',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
    }
  }),

  construct: function(options) {
    this.model = new Backbone.Model(options.model);
    this.ruleOptions = options.ruleOptions;
    this.initView(options);
    this.registerBinders();
    this.addTargetingWidget();
    this.addRulesReviewStep();
    this.updateConfig(options.config);
  },

  updateConfig: function(config) {
    this.config = config || {};
    _.each(this.components, function(component) {
      if (typeof component.updateConfig === 'function') {
        component.updateConfig(this.config);
      }
    }, this);
  },

  updateModel: function(model) {
    this.model.clear().set(model);
  },

  registerBinders: function() {
    this.bind('navigateToReviewStep');
    this.bind('navigateToRulesCreateStep');
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.AudienceWorkflow.DialogContent
    }).render();
  },

  addTargetingWidget: function() {
    this.addComponent(new TSDK.UI.AudienceWorkflow.TargetingWidget({
      el: this.view.$('.rules-create-container'),
      model: this.model,
      ruleOptions: this.ruleOptions,
      visible: true
    }), 'targetingwidget');
  },

  addRulesReviewStep: function() {
    this.addComponent(new TSDK.UI.AudienceWorkflow.RulesReviewStep({
      el: this.view.$('.rules-review-container'),
      model: this.model,
      visible: false
    }), 'rulesReviewStep')
    .on('navigate:rulesCreateStep', this.navigateToRulesCreateStep);
  },

  navigateToReviewStep: function() {
    var targetWidgetComponent = this.components['targetingwidget'];

    if (targetWidgetComponent.validate(true)) {
      targetWidgetComponent.saveRules();
      targetWidgetComponent.hide({hideChildren: false});
      this.components['rulesReviewStep'].show({model: this.model, silent: true});
      this.scrollToTop();
      return true;
    }

    return false;
  },

  navigateToRulesCreateStep: function() {
    this.components['rulesReviewStep'].hide({ hideChildren: false });
    this.components['targetingwidget'].show({ model: this.model, silent: true });
    this.scrollToTop();
    this.trigger('step:change', 1);
  },

  scrollToTop: function() {
    this.view.$el.scrollTop(0);
  },

  getAudienceToBeSaved: function() {
    var audienceData = this.model.toJSON();
    audienceData.targets = this.components['targetingwidget'].getRulesToBeSaved();
    return audienceData;
  },

  validateAudienceName: function(highlight) {
    return this.components['rulesReviewStep'].validateAudienceName(highlight);
  }
});
TSDK.UI.AudienceWorkflow.AudienceRuleModel = Backbone.Model.extend({

  silentSet: function (property, value, options) {
    var settingOptions = {silent: true};
    if (options) {
      _.extend(settingOptions, options);
    }

    this.set(property, value, settingOptions);
  },

  setType: function(type, options) {
    this.set('type', type, options);
  },

  getType: function() {
    return this.get('type');
  },

  isOfType: function(type) {
    return this.getType() === type;
  },

  setParameter: function(parameter, options) {
    this.set('parameter', parameter, options);
  },

  getParameter: function() {
    return this.get('parameter');
  },

  setOperator: function(operator, options) {
    this.set('operator', operator, options);
  },

  getOperator: function() {
    return this.get('operator');
  },

  setOperands: function(operands, options) {
    this.set('operands', operands, options);
  },

  getOperands: function() {
    return this.get('operands');
  },

  setSummary: function(summary, options) {
    this.set('summary', summary, options);
  },

  getSummary: function() {
    return this.get('summary');
  },

  defaults: {
    type: '',
    parameter: '',
    operator: '',
    operands: [],
    summary: ''
  }
});

"use strict";

TSDK.UI.AudienceWorkflow.AudienceRuleContainer = new PseudoClass({
  toString: 'AudienceRuleContainer',

  extend: F.ModelComponent,

  DEFAULT_ANIMATION_DURATION: 200,

  View: F.View.extend({
    events: {
      'click .rule-option': 'handleRuleOptionClick',
      'click .rule-delete-button': 'triggerRuleDeleteEvent',
      'click .rule-copy-button': 'triggerRuleCopyEvent',
      'click .rule-done-button': 'collapseRuleContainer',
      'click .rule-summary': 'expandRuleContainer'
    }
  }),

  construct: function(options) {
    this.ruleOptions = options.ruleOptions || {};
    this.populateEnabledRules();
    this.initView(options.el);
    this.load(_.extend(options.model, {
      enabledRules: this.enabledRules
    }));
    this.registerBinders();
    this.registerListeners();
  },

  initView: function(el) {
    this.view = new this.View({
      el: el,
      template: TSDK.UI.Templates.AudienceWorkflow.AudienceRuleContainer,
      component: this
    });
  },

  registerBinders: function() {
    this.bind('initRule');
    this.bind('syncRule');
  },

  registerListeners: function() {
    this.listenTo(this.view, 'renderComplete', this.initRule);
  },

  initRule: function() {
    this.addRule(this.getRuleType());
  },

  populateEnabledRules: function() {
    this.enabledRules = [];
    _.each(TSDK.Enums.AudienceRules, function(rule, key) {
      if (_.isObject(rule) && !rule.disabled && (!rule.configRequired || this.ruleOptions[key])) {
        this.enabledRules.push(key);
      }
    }, this);
  },

  syncRule: function(ruleData) {
    this.setRuleData(ruleData, { silent: true });
    this.updateSummaryView();
  },

  updateSummaryView: function() {
    this.view.$('.summary-placeholder').html(TSDK.UI.Templates.AudienceWorkflow.RuleSummary(this.getRuleData()));
    this.clearIncompleteMark();
  },

  handleRuleOptionClick: function(evt) {
    var $ruleOption = $(evt.currentTarget),
      ruleType;

    if ($ruleOption.attr('disabled')) {
      return;
    }

    ruleType = $ruleOption.data('value');

    if (ruleType !== this.getRuleType()) {
      this.setRuleData({ type: ruleType });
      this.triggerRuleTypeChangedEvent();
    }
  },

  triggerRuleTypeChangedEvent: function() {
    this.trigger('rule:type:changed');
  },

  getRuleData: function() {
    return this.model.get('rule');
  },

  setRuleData: function(rule, options) {
    this.model.set('rule', rule, options);
  },

  getRuleType: function() {
    var rule = this.getRuleData();
    return rule && rule.type;
  },

  addRule: function(type) {
    var $rulePlaceholder = this.view.$('.rule-placeholder'),
      RuleComponent = this.getRuleComponent(type),
      rule;

    if (!RuleComponent) {
      return;
    }

    this.destructExistingRule();

    rule = this.addComponent(new RuleComponent({
      el: $rulePlaceholder,
      model: this.getRuleData(),
      ruleOptions: this.ruleOptions[type] || this.ruleOptions[TSDK.Enums.AudienceRules[type]]
    }), 'rule')
    .on('rule:updated', this.syncRule);

    // 'rule:updated' event will not be listened when ruleComponent is being instantiated and shown for first time
    // and therefore show() needs to be called explicitly
    rule.show();
  },

  destructExistingRule: function() {
    var existingRule = this.components['rule'];
    if (existingRule) {
      existingRule.destructButKeepEl();
    }
  },

  getRuleComponent: function(type) {
    var ruleInfo = TSDK.Enums.AudienceRules[type];

    if (_.isString(ruleInfo)) {
      ruleInfo = TSDK.Enums.AudienceRules[ruleInfo];
    }
    return ruleInfo && ruleInfo.component;
  },

  setIndex: function(index) {
    this.model.set('index', index);
  },

  getIndex: function() {
    return this.model.get('index');
  },

  triggerRuleDeleteEvent: function() {
    this.trigger('rule:delete');
  },

  triggerRuleCopyEvent: function() {
    this.trigger('rule:copy', this.getRuleData());
  },

  collapseRuleContainer: function(noAnimation) {
    var that = this,
      animationDuration;

    if (this.isRuleContainerExpanded()) {
      animationDuration = noAnimation === true ? 0 : this.DEFAULT_ANIMATION_DURATION;

      this.view.$('.rule-editor').hide(animationDuration, function () {
        that.view.$el.addClass('collapsed');
      });
    }
  },

  expandRuleContainer: function(noAnimation) {
    var that = this,
      animationDuration = noAnimation === true ? 0 : this.DEFAULT_ANIMATION_DURATION;

    this.trigger('rule:expand');
    this.view.$('.rule-editor').show(animationDuration, function() {
      that.view.$el.removeClass('collapsed');
    });
  },

  isRuleContainerExpanded: function() {
    return !this.view.$el.hasClass('collapsed');
  },

  markIncomplete: function() {
    this.view.$('.rule-definition-box').addClass('incomplete');
  },

  clearIncompleteMark: function() {
    this.view.$('.rule-definition-box').removeClass('incomplete');
    this.components && this.components['rule'] && this.components['rule'].clearIncompleteMark();
  }
});
TSDK.UI.AudienceWorkflow.AudienceRule = new PseudoClass({
  toString: 'AudienceRule',
  extend: F.ModelComponent,

  Model: TSDK.UI.AudienceWorkflow.AudienceRuleModel,

  View: F.View.extend({
    commonEvents: {
      'change .parameterSelector': 'updateParameter',
      'change .operatorSelector': 'updateOperator',
      'change textarea.operandsInput': 'updateOperandsFromTextArea',
      'change coral-autocomplete.operandsInput': 'updateOperandsFromFilters',
      'change coral-select.operandsInput' : 'updateOperandsFromSelect'
    },

    additionalEvents: {},

    events : function() {
      return _.extend({}, this.commonEvents, this.additionalEvents);
    }
  }),

  construct: function(options) {
    this.ruleOptions = options.ruleOptions;
    this.initVars(options);
    this.initSteps();
    this.initView(options.el);
    this.processModel(options.model);
    this.load(options.model);
    this.registerBinders();
    this.registerListeners();
  },

  initVars: function(options) {
    // to be overridden (optional)
  },

  initSteps: function() {
    this.steps = [];
  },

  initView: function(el) {
    this.view = new this.View({
      el: el,
      template: this.getTemplate(),
      component: this
    });
  },

  processModel: function(model) {
    // to be overridden (optional), provides ability to change model attributes before it is set
  },

  registerBinders: function() {
    // to be overridden (optional)
  },

  registerListeners: function() {
    // to be overridden (optional)
  },

  handleRenderComplete: function() {
    this.initWidgets();
    this.updateSummary();
  },

  initWidgets: function() {
    // to be overridden (optional)
  },

  updateParameter: function(evt) {
    var step = $(evt.target).data('step'),
      stepValue = evt.target.value;

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }
    this.model.setParameter(stepValue);
  },

  updateOperator: function(evt) {
    var step = $(evt.target).data('step'),
      stepValue = evt.target.value;

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }
    this.model.setOperator(stepValue);
  },

  setOperands: function(operands) {
    if (!_.isEqual(operands, this.model.getOperands())) {
      this.model.setOperands(operands, { silent: true });
      this.updateSummary();
    }
  },

  updateOperandsFromTextArea: function(evt) {
    var step = $(evt.target).data('step'),
      stepValue = evt.target.value;

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }

    this.setOperands(_.compact(stepValue.split('\n')));
  },

  updateOperandsFromFilters: function(evt) {
    var filter = evt.target;

    if (evt.target.multiple) {
      $(filter).find('input[type=text]').val('');
    }

    this.setOperands(_.clone(filter.values));
  },

  updateOperandsFromSelect: function(event) {
    this.setOperands([ event.target.value ])
  },

  updateSummary: function() {
    var that = this;

    Coral.commons.nextFrame(function() {
       var summary = {},
        i,
        step;

      for (i = 0; i < that.steps.length; i++) {
        step = that.steps[i];
        summary[step.name] = _.isFunction(step.value)
          ? step.value()
          : that.getStepDisplayValue(that.view.$el.find('[data-step=' + i + ']'));
      }

      that.model.setSummary(summary, { silent: true });
      that.triggerRuleUpdatedEvent();
    });
  },

  triggerRuleUpdatedEvent: function() {
    this.trigger('rule:updated', this.model.toJSON());
  },

  clearDependentAttributes: function(curStep) {
    var i,
      defaultRule = this.getDefaultRule(),
      prop;

    for (i = curStep + 1; i < this.steps.length; i++) {
      prop = this.steps[i].name;
      this.model.set(prop, defaultRule[prop], { silent: true });
    }
  },

  getDefaultRule: function() {
    return new this.Model().toJSON();
  },

  // To be overridden by inheriting rule type if any custom validation is required
  isRuleValid: function() {
    return true;
  },

  validate: function(highlight) {
    var step,
      $step,
      stepNumber,
      isStepValid;

    for (stepNumber = 0; stepNumber < this.steps.length; stepNumber++) {
      step = this.steps[stepNumber];
      $step = this.view.$('[data-step=' + stepNumber + ']');
      isStepValid = _.isFunction(step.validate)
        ? step.validate()
        : !($step.length && _.size(this.model.get(step.name)) === 0);   // undefined, empty string, empty array or empty object

      if (!isStepValid) {
        if (highlight) {
          $step.focus().attr('invalid', true);
        }
        return false;
      }
    }

    return this.isRuleValid();
  },

  getRule: function() {
    var stepAttributes = _.pluck(this.steps, 'name').concat('type');
    return _.pick(this.model.toJSON(), stepAttributes);
  },

  getStepDisplayValue: function($stepInput) {
    var cuiComponent = $stepInput && $stepInput.get(0),
      tagName = cuiComponent && cuiComponent.tagName;

    if (!cuiComponent) {
      return '';
    }

    if (!cuiComponent._componentReady) {
      CustomElements.upgradeAll(cuiComponent);
    }

    switch (tagName) {
      case 'CORAL-SELECT':
        return $stepInput.find('coral-select-item[selected]').text();

      case 'TEXTAREA':
        return $stepInput.val().replace(/[\n\r]/g, ' ' + TSDK.I18n.get('OR') + ' ');

      case 'CORAL-AUTOCOMPLETE':
        var isCustomValuesAllowed = !cuiComponent.forceSelection,
          selectedItems = isCustomValuesAllowed ? cuiComponent.values :
            $stepInput
              .find('coral-autocomplete-item[selected]')
              .map(function() { return $(this).text(); })
              .get();

        return selectedItems && selectedItems.join(', ');
    }

    return $stepInput.get(0).value || '';
  },

  clearIncompleteMark: function() {
    var invalidStep = this.view.$('[data-step][invalid]').get(0);
    if (invalidStep) {
      invalidStep.invalid = false;
    }
  },

  initAutocomplete: function(autocomplete) {
    var that = this;
    if (autocomplete) {
      Coral.commons.ready(autocomplete, function () {
        autocomplete.on('coral-autocomplete:showsuggestions', that.showFilterSuggestions.bind(that));
      });
    }
  },

  // To be Overridden
  parseAutoCompleteResults: function(results, parameter, search) {
    return results;
  },

  showFilterSuggestions: function(evt) {
    var autocomplete = evt.target,
      search = evt.detail.value,
      that = this,
      parameter = evt.target.getAttribute('data-parameter');

    evt.preventDefault();

    this.mapRequest.fetch({
      data: {
        search: search,
        parameter: parameter
      },
      success: function(suggestions) {
        suggestions = that.parseAutoCompleteResults(suggestions, parameter, search);
        autocomplete.addSuggestions(suggestions, true);
      }
    });
  },

  notifyError: function(message) {
    this.propagateEvent('error', {
      message: message
    });
  }
});

TSDK.UI.AudienceWorkflow.TargetingWidget = new PseudoClass({
  toString: 'TargetingWidget',
  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'click .add-rule-button': 'handleAddRuleButtonClick'
    }
  }),

  construct: function(options) {
    this.ruleOptions = options.ruleOptions;
    this.view = new this.View({
      el: options.el,
      template: TSDK.UI.Templates.AudienceWorkflow.TargetingWidget,
      component: this
    });

    this.listenTo(this.view, 'renderComplete', function() {
      this.initWidgets();
    });

    this.registerBinders();
    this.load(options.model);

    this.ruleCounter = 0;
    this.ruleContainers = [];
  },

  registerBinders: function() {
    this.bind('deleteRule');
    this.bind('addAudienceRuleContainer');
  },

  initWidgets: function() {
    var rules = this.getRules();

    this.reset();

    if (rules && rules.length) {
      _.each(rules, function (rule) {
        this.addAudienceRuleContainer(rule, true);
      }, this);
    } else {
      this.addNewRule();
    }
  },

  reset: function() {
    this.removeComponents();
    this.ruleCounter = 0;
    this.ruleContainers = [];
  },

  addAudienceRuleContainer: function(rule, collapse) {
    var componentName = 'ruleContainer' + this.ruleCounter,
      $containerEl = $('<div class="tsdk-audience-rule-container"></div>'),
      that = this;

    if (collapse) {
      $containerEl.addClass('collapsed');
    }

    this.addComponent(new TSDK.UI.AudienceWorkflow.AudienceRuleContainer({
      el: $containerEl.appendTo(this.view.$('.rules-placeholder')),
      model: { index: _.size(this.components), rule: this.transformRuleBeforeEdit(rule) },
      visible: true,
      ruleOptions: this.ruleOptions
    }), componentName)
    .on('rule:delete', function() {
      that.deleteRule(componentName);
    })
    .on('rule:copy', function(ruleToCopy) {
      that.collapseRuleContainersExcept();
      that.addAudienceRuleContainer(ruleToCopy);
    })
    .on('rule:expand', function() {
      that.collapseRuleContainersExcept(componentName);
    })
    .on('rule:type:changed', function() {
      that.collapseRuleContainersExcept(componentName);
    });

    this.ruleContainers.push(componentName);
    this.ruleCounter++;
  },

  transformRuleBeforeEdit: function(rule) {
    var networkSpecificParameters = ['ispName', 'domainName', 'connectionSpeed'];
    if (rule && rule.type === 'GEO' && networkSpecificParameters.indexOf(rule.parameter) > -1) {
      rule.type = 'NETWORK';
    }
    return rule;
  },

  collapseRuleContainersExcept: function(ruleContainer) {
    var ruleContainers = _.omit(this.components, ruleContainer);
    _.each(ruleContainers, function(ruleContainer) {
      if (ruleContainer.getRuleType()) {
        ruleContainer.collapseRuleContainer();
      }
    });
  },

  handleAddRuleButtonClick: function() {
    var lastRuleContainer = this.ruleContainers.length > 0 && this.components[this.ruleContainers[this.ruleContainers.length - 1]];
    if (lastRuleContainer && !lastRuleContainer.getRuleType()) {
      return;
    }
    this.collapseRuleContainersExcept(this.components);
    this.addAudienceRuleContainer({});
  },

  addNewRule: function() {
    this.addAudienceRuleContainer({});
  },

  deleteRule: function(componentName) {
    this.removeComponent(componentName);
    this.ruleContainers = _.without(this.ruleContainers, componentName);

    _.each(this.ruleContainers, function(ruleContainer, index) {
      this.components[ruleContainer].setIndex(index);
    }, this);

    if (this.ruleContainers.length === 0) {
      this.addAudienceRuleContainer({});
    }
  },

  getRule: function(index) {
    return this.getRules()[index];
  },

  getRules: function() {
    return this.model.get('targets');
  },

  setRules: function(rules) {
    this.model.set('targets', rules, { silent: true });
  },

  saveRules: function() {
    var rules = [];

    _.each(this.components, function(ruleContainer) {
      if (ruleContainer.getRuleType()) {
        rules.push(ruleContainer.getRuleData());
      }
    }, this);

    this.setRules(rules);
  },

  getRulesToBeSaved: function() {
    var rules = [];

    _.each(this.components, function(ruleContainer) {
      var ruleComponent = ruleContainer.components['rule'];
      if (ruleComponent) {
        rules.push(_.omit(ruleComponent.getRule(), 'summary'));
      }
    }, this);

    return rules;
  },

  validate: function(highlight) {
    var complete = true,
      numOfRules = _.size(this.components);

    _.each(this.components, function(ruleContainer) {
      var ruleComponent = ruleContainer.components['rule'];

      if (!ruleContainer.getRuleType()) {
        if (numOfRules === 1) {
          complete = false;
          ruleContainer.markIncomplete();
        }
        return;
      }

      if (ruleComponent && !ruleComponent.validate(highlight)) {
        complete = false;

        if (highlight) {
          ruleContainer.markIncomplete();
        }
      }
    });

    return complete;
  }
});
TSDK.UI.AudienceWorkflow.RulesReviewStep = new PseudoClass({
  toString: 'RulesReviewStep',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'click .edit-rules-button': 'handleEditRulesButtonClick',
      'change .audience-name': 'handleAudienceNameInputChange',
      'keyup .audience-name': 'handleAudienceNameInputKeyup'
    }
  }),

  construct: function(options) {
    this.view = new this.View({
      el: options.el,
      template: TSDK.UI.Templates.AudienceWorkflow.RulesReviewStep,
      component: this
    });

    this.load(options.model);

    this.targets = [];
  },

  handleEditRulesButtonClick: function() {
    this.trigger('navigate:rulesCreateStep');
  },

  handleAudienceNameInputChange: function(evt) {
    this.view.$('.audience-name').get(0).invalid = false;
    this.setAudienceName(evt.currentTarget.value);
  },

  handleAudienceNameInputKeyup: function(evt) {
    evt.target.invalid = false;
  },

  setAudienceName: function(name) {
    this.model.set('name', name, { silent: true });
  },

  getAudienceName: function() {
    return this.model.get('name');
  },

  validateAudienceName: function(highlight) {
    var audienceName = $.trim(this.getAudienceName()),
      $audienceNameInput = this.view.$('.audience-name');

    if (!audienceName) {
      if (highlight) {
        $audienceNameInput.focus().get(0).invalid = true;
      }
      return false;
    }

    $audienceNameInput.get(0).invalid = false;
    return true;
  }
});
TSDK.UI.AudienceWorkflow.Browser = new PseudoClass({
  toString: 'Browser',
  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.Browser;
  },

  processModel: function(model) {
    if (model && model.type === 'BROWSER') {
      // TGT-11881 transform parameter string to new user agent string for IE
      if (model.parameter === 'MSIE') {
        model.parameter = 'MSIE Trident';
      }

      model.type = 'BROWSER_PARAM';
      model.operands = [ model.parameter ];
      model.parameter = 'browserType';
      model.operator = 'equals';
    }
    model.helpLink = this.ruleOptions && this.ruleOptions.helpLink;
  },

  initSteps: function() {
    this.steps = [
      {
        name: 'parameter',
        clearDependentFields: true
      },
      {
        name: 'operator'
      },
      {
        name: 'operands'
      }
    ];

    this.SingleOperandOperators = [
      'greater',
      'greaterEquals',
      'lesser',
      'lesserEquals'
    ];
  },

  registerBinders: function() {
    this.bind('handleKeyDownOnBrowserInput');
  },

  initWidgets: function() {
    var $browserVersionFilter = this.view.$('.browserVersionLookup'),
      that = this;

    if ($browserVersionFilter.length) {
      Coral.commons.ready($browserVersionFilter.get(0), function() {
        $browserVersionFilter.find('input[type=text]').on('keydown', that.handleKeyDownOnBrowserInput);
      });
    }
  },

  updateOperator: function(evt) {
    var step = $(evt.target).data('step'),
      stepValue = evt.target.value;

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }

    // in case of single operator operands, we clear the operands.
    if (this.SingleOperandOperators.indexOf(stepValue) !== -1) {
      this.model.setOperands([], { silent: true });
    }
    this.model.setOperator(stepValue);
  },

  handleKeyDownOnBrowserInput: function(evt) {
    var keyCode = evt.keyCode || evt.which;

    // Allow: backspace, delete, tab, escape, enter OR home, end, left, right
    if ([46, 8, 9, 27, 13].indexOf(keyCode) > -1 || keyCode >= 35 && keyCode <= 39) {
      return;
    }

    // Ensure that it is a number and stop the keypress (96-105 is keycode for numbers on windows keyboard)
    if (evt.shiftKey || !((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105))) {
      evt.preventDefault();
    }
  },

  validateBrowserVersion: function(value) {
    var filter = this.view.$('.browserVersionLookup').get(0);

    if (!TSDK.UI.Util.isInteger(value)) {
      filter.invalid = true;
      $(filter).focus();

      this.notifyError(TSDK.I18n.get('Browser version must be an integer.'));
    } else {
      filter.invalid = false;
      $(filter).find('input').blur();
    }

    return !filter.invalid;
  },

  isRuleValid: function() {
    if (this.model.get('parameter') === 'browserVersion') {
      return _.every(this.model.getOperands(), function(operand) {
        return this.validateBrowserVersion(operand);
      }, this);
    }

    return true;
  },

  getRule: function() {
    return _.omit(this._super(), 'helpLink');
  }
});

TSDK.UI.AudienceWorkflow.OperatingSystem = new PseudoClass({
  toString: 'OperatingSystem',
  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.OperatingSystem;
  },

  initSteps: function() {
    this.steps = [{
      name: 'parameter'
    }];
  }
});

TSDK.UI.AudienceWorkflow.SitePages = new PseudoClass({
  toString: 'SitePages',

  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
      'change .pageSelector': 'updatePage'
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.SitePages;
  },

  processModel: function(model) {
    var parameter = model.parameter || '',
      params = parameter.split('.');

    if (params.length > 1) {
      _.extend(model, { page: params[0], parameter: params[1] });
    }
  },

  initSteps: function() {
    var that = this;

    this.steps = [
      {
        name: 'page',
        clearDependentFields: true
      },
      {
        name: 'parameter',
        clearDependentFields: true,
        value: function() {
          return [
            that.getStepDisplayValue(that.view.$('.pageSelector')),
            that.getStepDisplayValue(that.view.$('.parameterSelector'))
          ].join(' ');
        }
      },
      {
        name: 'operator',
        clearDependentFields: true
      },
      {
        name: 'operands'
      }
    ];
  },

  updatePage: function(evt) {
    var step = $(evt.target).data('step'),
      stepValue = evt.target.value;

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }
    this.setPage(stepValue);
  },

  setPage: function(type, options) {
    this.model.set('page', type, options);
  },

  getRule: function() {
    var attributes = this._super();
    attributes.parameter = attributes.page + '.' + attributes.parameter;
    return _.omit(attributes, 'page');
  }
});
TSDK.UI.AudienceWorkflow.Geo = new PseudoClass({
  toString: 'Geo',

  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.Geo;
  },

  initVars: function() {
    this.mapRequest = new TSDK.MapRequest(this.ruleOptions);
  },

  initSteps: function() {
    this.steps = [
      {
        name: 'parameter',
        clearDependentFields: true
      },
      {
        name: 'operator'
      },
      {
        name: 'operands'
      }
    ];
  },

  initWidgets: function() {
    this.$invalidOperandsError = this.view.$('.invalidOperandsError');
    this.initAutocomplete(this.view.$('.countryLookup').get(0));
    this.initAutocomplete(this.view.$('.stateLookup').get(0));
    this.initAutocomplete(this.view.$('.cityLookup').get(0));
    this.initAutocomplete(this.view.$('.metroLookup').get(0));
  },

  updateOperandsFromTextArea: function(evt) {
    var $operandsInput = $(evt.target),
      patternToValidate = $operandsInput.data('pattern'),
      rangeMin = parseFloat($operandsInput.data('min')),
      rangeMax = parseFloat($operandsInput.data('max')),
      operandsArray = _.compact($operandsInput.val().split('\n')),
      invalidOperandsArray = [],
      validOperandsArray = [];

    if (patternToValidate) {
      _.each(operandsArray, function(operand) {
        if (operand && (new RegExp(patternToValidate)).test(operand)) {
          validOperandsArray.push(operand);
        } else {
          invalidOperandsArray.push(operand);
        }
      });
    } else if(rangeMin && rangeMax) {
      _.each(operandsArray, function(operand) {
        var operandVal = parseFloat(operand);
        if (operandVal && operandVal >= rangeMin && operandVal <= rangeMax) {
          validOperandsArray.push(operand);
        } else {
          invalidOperandsArray.push(operand);
        }
      });
    } else {
      validOperandsArray = operandsArray;
    }

    if (invalidOperandsArray.length) {
      var err = TSDK.I18n.get('Ignored invalid value(s)') + ': ' + invalidOperandsArray.join(', ');
      this.$invalidOperandsError.text(err).removeClass('hidden');
    } else {
      this.$invalidOperandsError.addClass('hidden');
    }

    $operandsInput.val(validOperandsArray.join('\n'));

    this.setOperands(validOperandsArray);
  }
});
TSDK.UI.AudienceWorkflow.Mobile = new PseudoClass({
  toString: 'Mobile',

  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
      'change .device-type': 'updateDeviceType',
      'change coral-numberinput.operandsInput': 'updateOperandsFromNumberInput'
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.Mobile;
  },

  initVars: function() {
    this.mapRequest = new TSDK.MapRequest(this.ruleOptions);
  },

  initSteps: function() {
    var self = this;

    this.steps = [
    {
      name: 'parameter',
      clearDependentFields: true
    },
    {
      name: 'operator'
    },
    {
      name: 'operands',
      value: function() {
        var $operands = self.view.$('.operandsInput');

        if ($operands.hasClass('lower-value') || $operands.hasClass('upper-value')) {
          return [
            self.view.$('.operandsInput.lower-value').get(0).value,
            self.view.$('.operandsInput.upper-value').get(0).value
          ].join(TSDK.I18n.get(' to '));
        }

        return self.getStepDisplayValue($operands);
      },
      validate: function() {
        var operator = self.model.getOperator(),
          operands = self.model.getOperands();

        if (operands.length === 0) {
          return false;
        }

        if (operator === 'between') {
          return operands[0]
              && operands[1]
              && TSDK.UI.AudienceWorkflow.Util.isInteger(operands[0])
              && TSDK.UI.AudienceWorkflow.Util.isInteger(operands[1])
              && Number(operands[1]) > Number(operands[0]);
        }

        if (operator === 'greater' || operator === 'lesser') {
          return operands[0]
            && TSDK.UI.AudienceWorkflow.Util.isInteger(operands[0])
            && Number(operands[0]) >= 0;
        }

        return true;
      }

    }];
  },

  registerListeners: function() {
    this.listenTo(this.model, 'change:parameter', this.handleParameterChanged);
  },

  initWidgets: function() {
    this.initAutocomplete(this.view.$('.modelLookup').get(0));
    this.initAutocomplete(this.view.$('.vendorLookup').get(0));
  },

  parseAutoCompleteResults: function(results, parameter, search) {
    var isIphoneModel,
      isBlackBerryDevice;

    if (parameter === 'model') {
      // TGT-8909: Remove iphone model options from results (And keep only iphone)
      // TGT-8937: Remove Blackberry since delivery does not work on Blackberry devices
      results = _.filter(results, function(resultObject) {
        var item = resultObject['value'].toLowerCase();
        isIphoneModel = item.indexOf('iphone') === 0;
        isBlackBerryDevice = item.indexOf('blackberry') !== -1;

        return item === 'iphone' || (!isIphoneModel && !isBlackBerryDevice);
      });
    }

    if (parameter === 'vendor') {
      // TGT-10561: Remove Blackberry since delivery does not work on Blackberry devices
      results = _.filter(results, function(resultObject) {
        var item = resultObject['value'].toLowerCase();
        return item.toLowerCase().indexOf('blackberry') === -1;
      });
    }

    return results;
  },

  updateDeviceType: function(event) {
    var optionDeviceType = event.target.value,
      deviceType = this.model.get('deviceType');

    this.model.set('deviceType', optionDeviceType, { silent: true });
  },

  updateOperandsFromNumberInput: function(event) {
    var $operands = this.view.$('.operandsInput'),
      operands = [ event.target.value ];

    // Handle case of between operator
    if ($operands.hasClass('lower-value') || $operands.hasClass('upper-value')) {
      operands = [
        this.view.$('.operandsInput.lower-value').get(0).value,
        this.view.$('.operandsInput.upper-value').get(0).value
      ];
    }

    this.setOperands(operands);
  },

  getRule: function() {
    var stepAttributes = _.pluck(this.steps, 'name').concat('type');

    if (this.model.getParameter() === 'mobileOs') {
      stepAttributes.push('deviceType');
    }

    return _.pick(this.model.toJSON(), stepAttributes);
  },

  setDefaultOperator: function(parameterValue) {
    var PARAMETERS_WITH_DEFAULT_OPERATOR = [ 'mobileDevice', 'isMobilePhone', 'isTablet' ];

    if (PARAMETERS_WITH_DEFAULT_OPERATOR.indexOf(parameterValue) !== -1) {
      this.model.setOperator('equals');
    }
  },

  handleParameterChanged: function() {
    this.setDefaultOperator(this.model.getParameter());
  }
});

TSDK.UI.AudienceWorkflow.Network = new PseudoClass({
  toString: 'Network',

  extend: TSDK.UI.AudienceWorkflow.Geo,

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.Network;
  },

  initWidgets: function() {
    this.$invalidOperandsError = this.view.$('.invalidOperandsError');
    this.initAutocomplete(this.view.$('.connectionSpeedLookup').get(0));
  },

  getRule: function() {
    var attributes = this._super();
    attributes.type = 'GEO';
    return attributes;
  }
});
TSDK.UI.AudienceWorkflow.TrafficSource = new PseudoClass({
  toString: 'TrafficSource',

  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.TrafficSource;
  },

  initSteps: function() {
    this.steps = [
      {
        name: 'parameter',
        clearDependentFields: true
      },
      {
        name: 'operator'
      },
      {
        name: 'operands'
      }
    ];
  }
});
TSDK.UI.AudienceWorkflow.TargetLibrary = new PseudoClass({
  toString: 'TargetLibrary',
  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.TargetLibrary;
  },

  initVars: function() {
    this.mapRequest = new TSDK.MapRequest(this.ruleOptions);
  },

  construct: function() {
    if (this.mapRequest) {
      this.fetchAudiences();
    }
  },

  initSteps: function() {
    this.steps = [{
      name: 'parameter'
    }];
  },

  initWidgets: function() {
    this.parameterSelector = this.view.$('.parameterSelector').get(0);
    if (!this.model.get('audiences')) {
      this.parameterSelector.loading = true;
    }
  },

  fetchAudiences: function() {
    var that = this;

    this.model.set('loading', true);

    this.mapRequest.fetch({
      success: function(data) {
        that.model.set('audiences', data);
        that.model.unset('loading');
      },
      error: function() {
        that.showErrorNotification(TSDK.I18n.get('Failed to fetch target library from server.'));
        that.model.unset('loading');
      }
    });
  }
});

TSDK.UI.AudienceWorkflow.VisitorProfile = new PseudoClass({
  toString: 'VisitorProfile',
  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {}
  }),

  constants: {
    PROFILE_ATTRIBUTE_TYPES: {
      SCRIPT: 'SCRIPT',
      CATEGORY_AFFINITY: 'CATEGORY_AFFINITY',
      MBOX: 'MBOX',
      CRS: 'CRS',
      UNKNOWN: 'UNKNOWN'
    },

    TARGETING_TYPES: {
      USER: 'USER',
      CRS: 'CRS'
    },

    CRS_PREFIX: 'crs.'
  },

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.VisitorProfile;
  },

  initVars: function() {
    if (this.ruleOptions) {
      this.mapRequest = new TSDK.MapRequest(this.ruleOptions, true);
    }
  },

  construct: function(options) {
    if (this.mapRequest) {
      this.fetchProfileParameters();
    }
  },

  initSteps: function() {
    this.steps = [
      {
        name: 'parameter',
        clearDependentFields: true
      },
      {
        name: 'operator'
      },
      {
        name: 'operands'
      }
    ];
  },

  initWidgets: function() {
    this.$invalidValueError = this.view.$('.invalid-value-error');
  },

  getRule: function() {
    return _.omit(this.model.toJSON(), 'parameters', 'loading');
  },

  isComplete: function() {
    var order,
      $step,
      stepName,
      modelValue;

    if (!this.$invalidValueError.hasClass('hidden')) {
      this.markIncomplete();
      return false;
    }

    for (order = 1; order < this.steps.length; order++) {
      $step = this.view.$('.step[data-order="' + order + '"]');

      if ($step.length) {
        stepName = this.steps[order].name;
        modelValue = this.model.get(stepName);
        if (!modelValue || (typeof modelValue === "object" && _.size(modelValue) === 0)) {
          this.markIncomplete();
          return false;
        }
      }
    }

    return true;
  },

  validateStep: function($step, value) {
    var patternToValidate = $step.data('pattern'),
      errorAlert = $step.data('error-alert') || TSDK.I18n.get('Please enter valid value.'),
      isValid = true;

    if (patternToValidate) {
      isValid = _.every([].concat(value), function(val) {
        return (new RegExp(patternToValidate)).test(val);
      });

      if (isValid) {
        this.$invalidValueError.addClass('hidden');
      } else {
        this.$invalidValueError.text(errorAlert).removeClass('hidden');
      }
    }

    return isValid;
  },

  updateOperandsFromTextArea: function(evt) {
    var $input = $(evt.target),
      step = $input.data('step'),
      stepValue = evt.target.value;

    if (this.validateStep($input, stepValue)) {
      this.model.setOperands(_.compact(stepValue.split('\n')), { silent: true });
      this.updateSummary();
    }
  },

  updateParameter: function(evt) {
    var selector = evt.target,
      step = $(selector).data('step'),
      stepValue = selector.value,
      $selectedItem = $(selector.selectedItem),
      type = $selectedItem.data('type') || 'VISITOR_PROFILE',
      parametertargetid = $selectedItem.data('parametertargetid') || '';

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }
    this.model.setType(type, { silent: true });
    this.model.set('parametertargetid', parametertargetid, { silent: true });
    this.model.setParameter(stepValue);
  },

  fetchProfileParameters: function() {
    var self = this;

    this.model.set('loading', true);

    this.mapRequest.fetch({
      success: function (response) {
        var parameters = self.parseProfileParameters(response);
        self.model.set('parameters', parameters, { silent: true });
        self.model.unset('loading');
      },
      error: function() {
        self.showErrorNotification(TSDK.I18n.get('Failed to fetch custom parameters from server.'));
        self.model.unset('loading');
      }
    });
  },

  parseProfileParameters: function(response) {
    _.each(response, function(param) {
      param.type = param.type ? param.type.toUpperCase() : this.constants.PROFILE_ATTRIBUTE_TYPES.UNKNOWN;

      if (param.type === this.constants.PROFILE_ATTRIBUTE_TYPES.SCRIPT) {
        param.type = this.constants.TARGETING_TYPES.USER;
      } else if (param.type === this.constants.PROFILE_ATTRIBUTE_TYPES.CRS
        || param.type === this.constants.PROFILE_ATTRIBUTE_TYPES.UNKNOWN) {
        param.type = this.constants.TARGETING_TYPES.CRS;

        if (_.isString(param.name) && param.name.indexOf(this.constants.CRS_PREFIX) === 0) {
          param.name = param.name.substring(this.constants.CRS_PREFIX.length);
        }
      }
    }, this);

    return _.groupBy(response, function(param) {
      return param.type;
    });
  },

  showErrorNotification: function(msg) {
    this.propagateEvent('error', {
      message: msg
    });
  }
});
TSDK.UI.AudienceWorkflow.CustomParameters = new PseudoClass({
  toString: 'CustomParameters',
  extend: TSDK.UI.AudienceWorkflow.AudienceRule,

  View: TSDK.UI.AudienceWorkflow.AudienceRule.prototype.View.extend({
    additionalEvents: {
      'change .mboxSelector': 'updateMboxAndFetchParameters',
      'change .input-parameter': 'updateParameter'
    }
  }),

  getTemplate: function() {
    return TSDK.UI.Templates.AudienceWorkflow.CustomParameters;
  },

  initVars: function() {
    if (this.ruleOptions) {
      if (this.ruleOptions.mboxes) {
        this.mboxRequest = new TSDK.MapRequest(this.ruleOptions.mboxes);
      }
      if (this.ruleOptions.mboxParameters) {
        this.mboxParameterRequest = new TSDK.MapRequest(this.ruleOptions.mboxParameters, true);
      }
    }
  },

  construct: function(options) {
    if (this.mboxRequest) {
      this.fetchMboxes();
    }
    if (this.mboxParameterRequest) {
      this.fetchParameters(this.model.get('mbox'));
    }
  },

  initSteps: function() {
    var that = this;

    this.steps = [
      {
        name: 'mbox',
        clearDependentFields: true,
        validate: function() {
          return !(that.view.$('.mboxSelector').length && _.isUndefined(that.model.get('mbox')));
        }
      },
      {
        name: 'parameter',
        clearDependentFields: true
      },
      {
        name: 'operator'
      },
      {
        name: 'operands'
      }
    ];
  },

  initWidgets: function() {
    CustomElements.upgradeAll(this.view.el);
    this.$invalidValueError = this.view.$('.invalid-value-error');
  },

  isComplete: function() {
    var order,
      $step,
      stepName,
      modelValue;

    if (!this.$invalidValueError.hasClass('hidden')) {
      this.markIncomplete();
      return false;
    }

    for (order = 1; order < this.steps.le; order++) {
      $step = this.view.$('.step[data-order="' + order + '"]');

      if ($step.length) {
        stepName = this.steps[order].name;
        modelValue = this.model.get(stepName);
        if (!modelValue || (typeof modelValue === "object" && _.size(modelValue) === 0)) {
          this.markIncomplete();
          return false;
        }
      }
    }

    return true;
  },

  validateStep: function($step, value) {
    var patternToValidate = $step.data('pattern'),
      errorAlert = $step.data('error-alert') || Granite.I18n.get('Please enter valid value.'),
      isValid = true;

    if (patternToValidate) {
      value = [].concat(value);
      isValid = _.every(value, function(val) {
        return (new RegExp(patternToValidate)).test(val);
      });

      if (isValid) {
        this.$invalidValueError.addClass('hidden');
      } else {
        this.$invalidValueError.text(errorAlert).removeClass('hidden');
      }
    }

    return isValid;
  },

  updateMboxAndFetchParameters: function(evt) {
     var step = $(evt.target).data('step'),
      stepValue = evt.target.value;

    if (this.steps[step].clearDependentFields) {
      this.clearDependentAttributes(step);
    }
    this.model.set('mbox', stepValue);
    this.fetchParameters(stepValue);
  },

  fetchParameters: function(mbox) {
    var self = this;

    this.model.unset('parameters', { silent: !!mbox});

    if (mbox) {
      this.model.set('paramsLoading', true);

      this.mboxParameterRequest.fetch({
        data: {
          mbox: mbox
        },
        success: function (mboxParameters) {
          mboxParameters = _.filter(mboxParameters, function (param) {
            return param.parameterType === 'MBOX';
          });
          self.model.set('parameters', mboxParameters, { silent: true });
          self.model.unset('paramsLoading');
        },
        error: function () {
          self.showErrorNotification(TSDK.I18n.get('Failed to fetch mbox parameters from server.'));
          self.model.unset('paramsLoading');
        }
      });
    }
  },

  fetchMboxes: function() {
    var self = this;

    this.model.set('mboxesLoading', true);

    this.mboxRequest.fetch({
      success: function(mboxes) {
        self.model.set('mboxes', mboxes, { silent: true });
        self.model.unset('mboxesLoading');
      },
      error: function() {
        self.showErrorNotification(TSDK.I18n.get('Failed to fetch mboxes from server.'));
        self.model.unset('mboxesLoading');
      }
    });
  },

  getRule: function() {
    return _.omit(this.model.toJSON(), 'mboxes', 'parameters');
  },

  showErrorNotification: function(msg) {
    this.propagateEvent('error', {
      message: msg
    });
  }
});

TSDK.EnumUtil.addEnum('AudienceRules', {
  LIBRARY: {
    icon: 'filingCabinet',
    label: TSDK.I18n.get('Target Library'),
    component: TSDK.UI.AudienceWorkflow.TargetLibrary,
    configRequired: true
  },
  GEO: {
    icon: 'location',
    label: TSDK.I18n.get('Geo'),
    component: TSDK.UI.AudienceWorkflow.Geo,
    configRequired: true
  },
  NETWORK: {
    icon: 'data',
    label: TSDK.I18n.get('Network'),
    component: TSDK.UI.AudienceWorkflow.Network,
    configRequired: true
  },
  MOBILE: {
    icon: 'deviceMobile',
    label: TSDK.I18n.get('Mobile'),
    component: TSDK.UI.AudienceWorkflow.Mobile,
    configRequired: true
  },
  MBOX: {
    icon: 'gearsEdit',
    label: TSDK.I18n.get('Custom'),
    component: TSDK.UI.AudienceWorkflow.CustomParameters
  },
  OPERATING_SYSTEM: {
    icon: 'deviceLaptop',
    label: TSDK.I18n.get('OS'),
    component: TSDK.UI.AudienceWorkflow.OperatingSystem
  },
  SITE_PAGE: {
    icon: 'pages', 
    label: TSDK.I18n.get('Site Pages'),
    component: TSDK.UI.AudienceWorkflow.SitePages
  },
  BROWSER_PARAM: {
    icon: 'globeSearch',
    label: TSDK.I18n.get('Browser'),
    component: TSDK.UI.AudienceWorkflow.Browser
  },
  BROWSER: 'BROWSER_PARAM',
  VISITOR_PROFILE: {
    icon: 'imageProfile',
    label: TSDK.I18n.get('Visitor Profile'),
    component: TSDK.UI.AudienceWorkflow.VisitorProfile
  },
  USER: 'VISITOR_PROFILE',
  PROFILE: 'VISITOR_PROFILE',
  CRS: 'VISITOR_PROFILE',
  TRAFFIC_SOURCES: {
    icon: 'merge', 
    label: TSDK.I18n.get('Traffic Sources'),
    component: TSDK.UI.AudienceWorkflow.TrafficSource
  }
});
TSDK.UI.AudienceWorkflow.prototype.config={
};
"use strict";

TSDK.UI.AudiencePicker = new PseudoClass({
  toString: 'AudiencePicker',

  extend: TSDK.UI.ConfigurableComponent,

  initialize: function(options) {
    options = options || {};
    this.audienceWorkflowOptions = options.audienceWorkflow;
    this._initConfigs();
    this._registerBinders();
    this._initDialog();
    this._addSubComponents();

    if (options.visible) {
      this.showPicker();
    }
  },

  _initConfigs: function() {
    this.initialConfig = this.config;
  },

  _registerBinders: function() {
    this.bind('_toggleFullscreen');
    this.bind('_triggerSelectedEvent');
    this.bind('_updateOnAudiencesSelection');
    this.bind('_scrollListToTop');
    this.bind('_openAudienceWorkflow')
  },

  _initDialog: function() {
    this.audiencePicker = new Coral.Dialog().set({ backdrop: 'static' });
    $(this.audiencePicker)
      .addClass('tsdk-audience-picker')
      .appendTo('body');
  },

  handleConfigChanged: function() {
    this._addOrRemoveAudienceWorkflow();
  },

  showPicker: function(config) {
    config = _.extend({}, this.initialConfig, config);

    if (config) {
      this.configure(config);

      var audiencePickerContent = this.components['audiencePickerDialogContent'],
        audiencePickerHeader = this.components['audiencePickerDialogHeader'],
        selectedAudiences = config.selected;

      this.components['audiencePickerDialogContent'].updateConfig(config);

      if (selectedAudiences) {
        if (!_.isArray(selectedAudiences)) {
          selectedAudiences = [selectedAudiences];
        }
        audiencePickerContent.setSelectedAudiences(selectedAudiences);
        audiencePickerHeader.updateCount(selectedAudiences.length);
      }

      if (config.fullscreen) {
        this._toggleFullscreen(true);
      }
    }

    $(this.audiencePicker).toggleClass('multi-selection-mode', this._isMultiSelectionMode());

    this.audiencePicker.show();

    Coral.commons.nextFrame(this._scrollListToTop);

    return this; // required to allow chaining
  },

  reload: function() {
    this.components['audiencePickerDialogContent'].updateList();
  },

  _scrollListToTop: function() {
    $(this.audiencePicker).find('.audience-picker-list').scrollTop(0);
  },

  _addSubComponents: function() {
    this._addDialogHeader();
    this._addDialogContent();
    this._addOrRemoveAudienceWorkflow();

    if (this.config.multiTenant) {
      this._addOrRemoveTenantDropdown();
    }
  },

  _addDialogHeader: function() {
    this.addComponent(new TSDK.UI.AudiencePicker.DialogHeader({
      el: $(this.audiencePicker).find('coral-dialog-header'),
      visible: true
    }), 'audiencePickerDialogHeader')
    .on('fullscreen:toggle', this._toggleFullscreen)
    .on('done', this._triggerSelectedEvent);
  },

  _addDialogContent: function() {
    this.addComponent(new TSDK.UI.AudiencePicker.DialogContent({
      el: $(this.audiencePicker).find('coral-dialog-content'),
      visible: true,
      config: this.config,
      fetchOptions: this.fetchOptions
    }), 'audiencePickerDialogContent')
    .on('audiences:selected', this._updateOnAudiencesSelection)
    .on('audience:create', this._openAudienceWorkflow);
  },

  _addOrRemoveAudienceWorkflow: function() {
    var that = this,
      existingAudienceWorkflowComponent = this.components['audienceWorkflow'],
      audienceWorkflowDialogContent = this.components['audiencePickerDialogContent'],
      showCreateAudienceButton = false;

    if (!audienceWorkflowDialogContent) {
      return;
    }

    if (this.config.create) {
      if (!existingAudienceWorkflowComponent) {
        this.addComponent(new TSDK.UI.AudienceWorkflow(this.audienceWorkflowOptions), 'audienceWorkflow')
          .on('audience:created', function (audience, success) {
            that.trigger('audience:created', audience, function () {
              success();
              that.reload();
            });
          });
      }
      showCreateAudienceButton = true;
    } else if (existingAudienceWorkflowComponent) {
      existingAudienceWorkflowComponent.destructButKeepEl();
    }
    audienceWorkflowDialogContent.toggleCreateAudienceButton(showCreateAudienceButton);
  },

  _addOrRemoveTenantDropdown: function() {
    var showDropdown = this.config.engine !== 'tnt' && this.config.engine !== 'cq';
    if (this.components['audiencePickerDialogContent']) {
      this.components['audiencePickerDialogContent'].toggleTenantDropdown(showDropdown);
    }
  },

  _openAudienceWorkflow: function() {
    this.components['audienceWorkflow'].openWorkflow({
      fullscreen: this.audiencePicker.fullscreen
    });
  },

  reset: function() {
    _.each(this.components, function(component) {
      if (typeof component.reset === 'function') {
        component.reset();
      }
    });
  },

  _updateOnAudiencesSelection: function(selectedAudiences) {
    this.selectedAudiences = selectedAudiences;
    if (this._isMultiSelectionMode()) {
      this.components['audiencePickerDialogHeader'].updateCount(selectedAudiences.length);
    } else {
      this._triggerSelectedEvent();
    }
  },

  notifyError: function(message) {
    this.trigger('error', {
      message: message
    });
  },

  _isMultiSelectionMode: function() {
    var multiSelection = this.config.multiSelection;
    return typeof multiSelection == 'boolean' ? multiSelection : false;
  },

  _toggleFullscreen: function(toggleToFullscreen) {
    this.audiencePicker.fullscreen = toggleToFullscreen;
    $(this.audiencePicker).find('coral-dialog-header').toggleClass('coral--dark', toggleToFullscreen);
  },

  _triggerSelectedEvent: function() {
    if (this.selectedAudiences) {
      this.trigger('selected', _.map(this.selectedAudiences, function(audience) { return audience.attributes; }));
    }
    this.audiencePicker.hide();
  }
});
"use strict";

TSDK.UI.AudiencePicker.DialogHeader = new PseudoClass({
  toString: 'AudiencePickerDialogHeader',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'click .fullscreen-button': 'toggleFullscreenMode',
      'click .done-button': 'triggerDoneEvent'
    }
  }),

  construct: function(options) {
    this.initView(options);
    this.load(options.model);
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      template: TSDK.UI.Templates.AudiencePicker.DialogHeader
    }).render();
  },

  toggleFullscreenMode: function(evt) {
    var toggleToFullscreen = $(evt.currentTarget).data('toggle');
    this.trigger('fullscreen:toggle', toggleToFullscreen);
  },

  triggerDoneEvent: function() {
    this.trigger('done');
  },

  updateCount: function(audiencesCount) {
    this.view.model.set('count', audiencesCount);
  },

  reset: function() {
    this.updateCount(0);
  }
});
"use strict";

TSDK.UI.AudiencePicker.DialogContent = new PseudoClass({
  toString: 'AudiencePickerDialogContent',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'click .add-audience-button': 'handleAddAudienceButtonClick'
    }
  }),

  construct: function(options) {
    this.setFetchOptions(options.fetchOptions);
    this.updateConfig(options.config);
    this.initView(options);
    this.addSubComponents(options);
  },

  setFetchOptions: function(fetchOptions) {
    this.fetchOptions = fetchOptions;
  },

  updateConfig: function(config) {
    this.config = config || {};
    _.each(this.components, function(component) {
      if (_.isFunction(component.updateConfig)) {
        component.updateConfig(this.config);
      }
    }, this);

    this.handleConfigChanged();
  },

  handleConfigChanged: function() {
    if (this.view) {
      this.addOrRemoveSearcher();
    }
  },

  initView: function(options) {
    this.view = new this.View({
      el: options.el,
      component: this,
      model: {
        config: this.config
      },
      template: TSDK.UI.Templates.AudiencePicker.DialogContent
    }).render();
  },

  addSubComponents: function(options) {
    this.addOrRemoveSearcher();
    this.addAudienceList(options);
    this.addSelectedAudiences(options);

    if (this.config.multiTenant) {
      this.addTenantDropdown();
    }
  },

  addOrRemoveSearcher: function() {
    var existingSearcherComponent = this.components['searcher'];
    if (this.config.search) {
      if (!existingSearcherComponent) {
        this.addComponent(new TSDK.UI.AudiencePicker.Searcher({
          el: this.view.$('.audience-searcher-placeholder'),
          visible: true
        }), 'searcher')
        .on('search', this.searchAudience.bind(this));
      }
    } else if (existingSearcherComponent) {
      existingSearcherComponent.destructButKeepEl();
      delete this.components['searcher'];
    }
  },

  addTenantDropdown: function() {
    var tenantDropdownModel = new TSDK.UI.AudiencePicker.TenantDropdownModel(),
      that = this,
      listingParams = this._extractBrandFromParams();

    tenantDropdownModel.url = this.fetchOptions.listingsUrl + listingParams;
    this.addComponent(new TSDK.UI.AudiencePicker.TenantDropdown({
      el: this.view.$('.audience-tenant-dropdown-placeholder'),
      visible: true,
      config: this.config
    }), 'tenant-dropdown')
    .on('select', function(e) {
      that.components['audiencelist'].updateFetchOptions({
        suffix: e != null ? e.path : ''
      });
      that.updateList();
    });

    tenantDropdownModel.fetch({
      success: function() {
        that.components['tenant-dropdown'].setItems(tenantDropdownModel.getItems());
      },
      error: function() {
        that.components['tenant-dropdown'].setItems([]);
      }
    });
  },

  addAudienceList: function() {
    this.addComponent(new TSDK.UI.AudiencePicker.AudienceList({
      el: this.view.$('.audience-picker-list'),
      visible: true,
      config: this.config,
      fetchOptions: this.fetchOptions
    }), 'audiencelist')
    .on('list:itemSelected', this.audienceItemSelected.bind(this))
    .on('collection:loaded', this.updateListWithSelectedAudiences.bind(this));

    var that = this;
    this.view.$('.audience-picker-list').bind('scroll', function(event){
      that.components['audiencelist'].handleScroll(event);
    });
  },

  addSelectedAudiences: function() {
    this.addComponent(new TSDK.UI.AudiencePicker.SelectedAudiences(), 'selectedAudienceList');
  },

  _extractBrandFromParams: function() {
    var brand = /[?&](brand=[^&]+)/.exec(this.fetchOptions.urlParams);

    if (brand && brand.length >= 1) {
      return '?' + brand[1];
    }

    return '';
  },

  reset: function() {
    _.each(this.components, function(component) {
      if (_.isFunction('function')) {
        component.reset();
      }
    });
  },

  setSelectedAudiences: function(selectedAudiences) {
    var audienceListComponent = this.components['audiencelist'];
    audienceListComponent.setSelectedAudiences(selectedAudiences);
    this.components['selectedAudienceList'].setSelectedAudiences(audienceListComponent.getSelectedAudiences());
  },

  handleAddAudienceButtonClick: function() {
    this.trigger('audience:create');
  },

  audienceItemSelected: function(params) {
    var audienceModel = params.model;

    if (!this.parent._isMultiSelectionMode()) {
      this.components['selectedAudienceList'].reset();
      this.components['audiencelist'].deselectAll();
    }

    audienceModel.toggleSelected();

    if (audienceModel.isSelected()) {
      this.selectAudience(audienceModel);
    } else {
      this.deselectAudience(audienceModel);
    }
  },

  selectAudience: function(audience) {
    this.selectAudiences([audience]);
  },

  deselectAudience: function(audience) {
    this.deselectAudiences([audience]);
  },

  selectAudiences: function(audiences) {
    this.components['selectedAudienceList'].add(audiences);

    if (this.components['audiencelist'].allAudiencesAreSelected()) {
      this.checkSelectAllCheckbox();
    }
  },

  getSelectedAudiencesCount: function() {
    return this.components['selectedAudienceList'].getCount();
  },

  deselectAudiences: function(audiences) {
    this.components['selectedAudienceList'].remove(audiences);
  },

  enableAddToReportsButton: function() {
    this.view.$('.addAndClosePicker').prop('disabled', false);
  },

  disableAddToReportsButton: function() {
    this.view.$('.addAndClosePicker').prop('disabled', true);
  },

  updateListWithSelectedAudiences: function() {
    var cachedAudiences = this.components['selectedAudienceList'].getSelectedAudiences();

    if (!cachedAudiences.length) {
      return;
    }

    this.components['audiencelist'].setSelectedAudiences(cachedAudiences);
  },

  updateList: function() {
    this.components['audiencelist'].updateList();
  },

  searchAudience: function(value) {
    this.components['audiencelist'].search(value);
  },

  toggleCreateAudienceButton: function(show) {
    this.view.$('.add-audience-button').toggleClass('hidden', !show);
  },

  toggleTenantDropdown: function(show) {
    this.components['tenant-dropdown'].toggleShow(show);
  }
});
TSDK.UI.InfiniteScrollList = new PseudoClass({
  toString: 'InfiniteScrollList',

  extend: F.ListComponent,

  options: {
    defaultParams: {
      pageSize: 10,
      page: 1
    }
  },

  currentPage: 1,

  loading: false,

  defaultNumConsecutiveErrorCallbacks: 1,

  numConsecutiveErrorCallbacks: 1,

  currentSearchString: '',

  // will be initialized after first load
  totalNumberOfPagesToLoad: -1,

  fetch: function(fetchParams, callback, update) {
    if (this.pagination) {
      this.fetchWithPagination.apply(this, arguments);
    } else {
      this.fetchWithoutPagination.apply(this, arguments);
    }
  },

  fetchWithoutPagination: function(fetchParams, callback) {
    this.params = _.omit(_.extend({}, this.options.defaultParams, fetchParams), 'page', 'pageSize');

    // Fetch collection contents
    this.collection.fetch({
      data: this.params,
      success: function() {
        this.numConsecutiveErrorCallbacks = this.defaultNumConsecutiveErrorCallbacks;

        this.collection.trigger('loaded');

        // Component event
        this.trigger('collection:loaded', this.collection, this.collection.models.length);
        this.collectionLoaded = true;

        if (typeof callback === 'function') {
          callback.call(this, this.collection);
        }
        this.loading = false;
      }.bind(this),
      error: function(model, response) {
        if (typeof callback === 'function') {
          // "callback.call(this, response)" may cause infinite loop as F.CollectionComponent sends
          // "show()" in the callback which calls "fetch()" method in turn. Being the same call same
          // erroneous response is returned leading to the vicious cycle.
          // Restricting number of consecutive callbacks to prevent this.
          if (this.numConsecutiveErrorCallbacks > 0) {
            callback.call(this, response);
            this.numConsecutiveErrorCallbacks--;
          }
        }
      }.bind(this)
    });

    return this;
  },

  fetchWithPagination: function(fetchParams, callback, update) {
    // Flags to either add new results, remove/update existing results to end of list or rebuild list
    var appendResults = true,
      removeResults = false,
      updateResults = true,
      resetCollection = false;

    // If flagged as not update (equivalent to reset) we need to reset list and reset current page to 1
    if (!update) {
      this.currentPage = 1;
      appendResults = false;
      removeResults = true;
      updateResults = false;
      resetCollection = true;
    }

    // Combine new params, if any, with defaults and store, overwriting previous params
    if (fetchParams) {
      this.params = _.extend({}, this.options.defaultParams, fetchParams);
    } else {
      // Overwrite old params with defaults and send a request with only default params
      this.params = _.extend({}, this.options.defaultParams);
    }

    //set the request values for page and page size against current values
    this.params['page'] = this.currentPage;

    //if there is currently a search string being used, tack that on to the append op
    if (this.currentSearchString && this.currentSearchString != '') {
      this.params['search'] = this.currentSearchString;
    }

    this.params['pageSize'] = this.getPageSize();

    if (this.fetchInitiator !== 'scroll') {
      this.noMorePagesAvailable = false;
    }

    // Fetch collection contents
    this.collection.fetch({
      data: this.params,
      add: appendResults,
      remove: removeResults,
      update: updateResults,
      reset: resetCollection,
      success: function(collectionRef, rawResponse) {
        this.numConsecutiveErrorCallbacks = this.defaultNumConsecutiveErrorCallbacks;
        this.totalNumberOfPagesToLoad = this.getPagesInResponse(rawResponse);
        this.hasMorePages = this.getHasMoreInResponse(rawResponse);

        // Collection event
        if (!update) {
          this.collection.trigger('loaded');
        }

        // Component event
        this.trigger('collection:loaded', this.collection);
        this.collectionLoaded = true;

        if (typeof callback === 'function') {
          callback.call(this, this.collection);
        }
        this.fetchNextPageCallback(this.collection);

        if (this.fetchInitiator === 'scroll' && this.collection.length === this.collectionLength) {
          // when new page was fetched due to scrolling and there is no new model added to collection,
          // don't fetch more pages on scroll
          this.noMorePagesAvailable = true;
        }
        this.collectionLength = this.collection.length;
        this.fetchInitiator = void 0;

        this.loading = false;
      }.bind(this),
      error: function(model, response) {
        if (typeof callback === 'function') {
          // "callback.call(this, response)" may cause infinite loop as F.CollectionComponent sends
          // "show()" in the callback which calls "fetch()" method in turn. Being the same call same
          // erroneous response is returned leading to the vicious cycle.
          // Restricting number of consecutive callbacks to prevent this.
          if (this.numConsecutiveErrorCallbacks > 0) {
            callback.call(this, response);
            this.numConsecutiveErrorCallbacks--;
          }
        }
        this.fetchNextPageCallback(this.collection);
      }.bind(this)
    });

    return this;
  },

  /**
   * Implementing classes can override this method to call per page callback.
   */
  fetchNextPageCallback: function(collection) {
    // No-OP
  },

  handleScroll: function(event) {
    if (this.loading) {
      return;
    }

    var scrollingElement = event.currentTarget;
    var SCROLL_BOTTOM_DECIDER = 0.8; // After scroll bar reaches 80% of scrolling element's height, we will fetch next items
    var isScrollingElementEndReached = (scrollingElement.scrollTop + scrollingElement.clientHeight >= SCROLL_BOTTOM_DECIDER * scrollingElement.scrollHeight);

    if (isScrollingElementEndReached) {
      this.fetchAvailablePage();
    }
  },

  isNextPageAvailable: function() {
    if (_.isNumber(this.totalNumberOfPagesToLoad)) {
      return this.totalNumberOfPagesToLoad > 0 && this.currentPage < this.totalNumberOfPagesToLoad;
    }

    if (_.isBoolean(this.hasMorePages)) {
      return this.hasMorePages;
    }

    return !this.noMorePagesAvailable;
  },

  fetchAvailablePage: function() {
    if (this.isNextPageAvailable()) {
      this.currentPage++;
      this.fetchInitiator = 'scroll';
      this.loading = true;
      this.fetchNextPage();
    }
  },

  // Override this method in your class to change argument values passed to fetch method. [e.g. to pass a callback]
  fetchNextPage: function() {
    this.fetch(this.fetchParams, null, true);
  },

  fillAvailableSpace: function() {
    if (!this.view.$el.is(':visible') || this.collection.isEmpty()) {
      return;
    }

    var allContainers = this.getAllContainers(),
        rowHeight = $(allContainers[0]).outerHeight(true),
        siblingsHeight = this.getSiblingsHeight(),
        availableSpaceHeight = window.innerHeight - this.view.$el.closest('.scrollable').offset().top - siblingsHeight,
        plentySpaceForMoreList = ( availableSpaceHeight -  rowHeight * allContainers.length ) > 0;

    if (plentySpaceForMoreList) {
      this.fetchAvailablePage();
    }
  },

  getSiblingsHeight: function() {
    return _.reduce(this.view.$el.siblings(), function(memo, sibling) {
      return memo + $(sibling).outerHeight(true)
    }, 0);
  },

  getAllContainers: function() {
    return this.view.$('.listItem');
  },

  getPageSize: function() {
    var pageSize = this.fetchOptions && this.fetchOptions.pageSize;
    return _.isNumber(pageSize) ? pageSize : this.options.defaultParams.pageSize;
  },

  getPagesInResponse: function(response) {
    if (this.fetchOptions && this.fetchOptions.pages) {
      return response[this.fetchOptions.pages];
    }
  },

  getHasMoreInResponse: function(response) {
    if (this.fetchOptions && this.fetchOptions.hasMore) {
      return response[this.fetchOptions.hasMore];
    }
  }
});

TSDK.UI.AudiencePicker.AudienceModel = Backbone.Model.extend({

  silentSet: function (property, value, options) {
    var settingOptions = {silent: true};
    if (options) {
      _.extend(settingOptions, options);
    }

    this.set(property, value, settingOptions);
  },

  setName: function(newName) {
    this.silentSet('name', newName);
  },

  getName: function() {
    return this.get('name');
  },

  getId: function() {
    return this.get('id');
  },

  isSelected: function() {
    return this.get('selected');
  },

  setSelected: function(selected) {
    this.set('selected', selected);
  },

  toggleSelected: function() {
    this.setSelected(!this.isSelected());
  },

  defaults: {
    'selected': false,
    'name': '',
    'size': 0
  }
});

TSDK.UI.AudiencePicker.AudiencesCollection = Backbone.Collection.extend({

  model: TSDK.UI.AudiencePicker.AudienceModel,

  setFetchOptions: function(fetchOptions) {
    this.url = fetchOptions.url;
    this.preprocess = fetchOptions.preprocess;
  },

  parse: function(response, options) {
    // Ensure that the audience with id "all_visitors" is always the first item in the collection
    // and that the remainder of the collection is sorted alphabetically by name
    // TO-DO: Remove this code once the mid-tier can correctly return a sorted collection
    var params = options.data,
      audienceArray = this.getAudiencesFromResponse(response),
      allVisitorsAudience = _.find(audienceArray, function(audience) {
        return audience.id === 'all_visitors';
      }),
      allVisitorsIndex = 0;

    if (allVisitorsAudience) {
      allVisitorsIndex = audienceArray.indexOf(allVisitorsAudience);
    }

    if (allVisitorsIndex) {
      allVisitorsAudience = audienceArray[allVisitorsIndex];

      audienceArray.splice(allVisitorsIndex, 1);

      audienceArray = _.sortBy(audienceArray, function(audience) {
        return audience['name'].toLowerCase();
      });

      audienceArray.unshift(allVisitorsAudience);
    }

    if (_.isString(params.search) && this.search && this.search !== 'server') {
      audienceArray = _.filter(audienceArray, function(audience) {
        var name = audience.name;
        return _.isString(name) && name.toLowerCase().indexOf(params.search.toLowerCase()) > -1;
      }, this);
    }

    return audienceArray;
  },

  getAudiencesFromResponse: function(response) {
    if (_.isFunction(this.preprocess)) {
      return this.preprocess(response);
    }

    if (_.isArray(response)) {
      return response;
    }

    return [];
  }
});
TSDK.UI.AudiencePicker.AudienceList = new PseudoClass({

  toString: 'AudienceList',

  extend: TSDK.UI.InfiniteScrollList,

  Collection: TSDK.UI.AudiencePicker.AudiencesCollection,

  options: {
    defaultParams: {
      pageSize: 100
    }
  },

  numConsecutiveErrorCallbacks: 0,

  ItemTemplate: function() {
    if (this.model.isSelected()) {
      this.$el.addClass('selected');
    } else {
      this.$el.removeClass('selected');
    }

    if (this.model.getId() === 'all_visitors') {
      this.$el.addClass('all_visitors_container');
    }

    return TSDK.UI.Templates.AudiencePicker.AudienceListItem.apply(this, arguments);
  },

  construct: function(options) {
    this.updateConfig(options.config);
    this.updateFetchOptions(options.fetchOptions);
    this.fetchParams = {};
    this.registerBinders();
    this.registerGlobalTriggers();
  },

  destruct: function() {
    this.unRegisterGlobalTriggers();
  },

  registerBinders: function() {
    this.bind('sortAudiences');
  },

  registerGlobalTriggers: function() {
    F.on('audienceSorter:change', this.sortAudiences);
  },

  unRegisterGlobalTriggers: function() {
    F.off('audienceSorter:change', this.sortAudiences);
  },

  updateConfig: function(config) {
    this.config = _.extend({}, this.config, config);
    this.pagination = this.config.pagination;
    this.collection.search = this.config.search;
  },

  updateFetchOptions: function(fetchOptions) {
    this.fetchOptions =  _.extend({}, this.fetchOptions, fetchOptions);
    this.collection.setFetchOptions(this.fetchOptions);
  },

  getAllAudiences: function() {
    return this.getAudiencesFromContainers(this.getAllAudienceContainers());
  },

  getSelectedAudiences: function() {
    var $selectedAudienceContainers = this.getSelectedAudienceContainers();
    return this.getAudiencesFromContainers($selectedAudienceContainers);
  },

  getAudiencesFromContainers: function($containers) {
    var audiences = [];

    _.each($containers, function($audienceContainer) {
      var audience = this.getModelFromLi($audienceContainer);
      audiences.push(audience);
    }, this);

    return audiences;
  },

  setAllSelected: function(selected) {
    _.each(this.getAllAudiences(), function(audience){
      audience.setSelected(selected);
    });
  },

  selectAll: function() {
    this.setAllSelected(true);
  },

  deselectAll: function() {
    this.setAllSelected(false);
  },

  setSelectedAudiences: function(audiences) {
    var audiencesId = _.pluck(audiences, 'id');

    _.each(this.getAllAudiences(), function(audience){
      audience.setSelected(audiencesId.indexOf(audience.getId()) > -1);
    });
  },

  getSelectedAudienceContainers: function() {
    return this.getAllAudienceContainers().filter('.selected');
  },

  getAllAudienceContainers: function() {
    // reporting audiences has one hidden default (All Qualified Visitors)
    // return this.view.$('li').filter(':visible');
    return this.view.$('li');
  },

  getAllVisibleAudienceCount: function() {
    return this.getAllAudienceContainers().size();
  },

/*
  //Future direction (add a possibility to show only selected) + to revert to previous state
  setList: function(audiences) {
    this.collection.reset(audiences)
      .trigger('loaded');

    this.trigger('collection:loaded', this.collection, this.collection.length);
  },
  mergeListWithSelectedAudiences: function(audiences) {
    this.merge(audiences, {
      add: true,
      merge: true,
      remove: false
    });
  },
*/

  allAudiencesAreSelected: function() {
    var audiences  = this.getAllAudiences();
    var notSelectedAudience;

    if (!audiences.length) {
      return false;
    }

    notSelectedAudience = _.find(audiences, function(audienceModel) {
      return !audienceModel.isSelected();
    });

    return typeof notSelectedAudience === 'undefined';
  },

  merge: function(audiences, options) {
    this.collection.add(audiences, options);
  },

  search: function(query, searchBy) {
    searchBy = searchBy || 'search';
    this.fetchParams[searchBy] = query;
    this.updateList();
  },

  updateList: function() {
    var suffix = this.fetchOptions.suffix || "";
    var url = this.fetchOptions.baseUrl + suffix + this.fetchOptions.urlParams;

    this.collection.setFetchOptions({
      url: url,
      preprocess: this.collection.preprocess
    });
    this.fetch(this.fetchParams);
  },

  sortAudiences: function (sortBy, sortOrder) {
    this.setParameter('sortBy', sortBy);
    this.setParameter('sortOrder', sortOrder);

    this.updateList();
  },

  setParameter: function(name, value){
    if (typeof value !== 'string' || value === '') {
      delete this.fetchParams[name];
    } else {
      this.fetchParams[name] = value;
    }
  },

  reset: function() {
    this.deselectAll();
    this.view.$el.scrollTop(0);
    this.fetchParams = {};
  }
});


TSDK.UI.AudiencePicker.SelectedAudiences = new PseudoClass({
  toString: 'selectedItems',

  extend: F.Component,

  options: {
    visible: true
  },

  construct: function() {
    this.cacheCollection = new Backbone.Collection([], {
      model: TSDK.UI.AudiencePicker.AudienceModel
    })
    .bind('add', this.triggerSelectionEvent.bind(this))
    .bind('remove', this.triggerSelectionEvent.bind(this));
  },

  getSelectedAudiences: function() {
    return this.cacheCollection.models;
  },

  getCount: function() {
    return this.cacheCollection.size();
  },

  triggerSelectionEvent: function() {
    this.parent.trigger('audiences:selected', this.getSelectedAudiences());
  },

  add: function(audienceModels) {
    var that = this;

    _.each(audienceModels, function(audienceModel){
      if (!audienceModel.isSelected()) {
        throw that.toString() + ' trying to add non selected audience: ' + audienceModel;
      }
    });
    this.cacheCollection.add(audienceModels);
  },

  remove: function(audienceModels) {
    this.cacheCollection.remove(audienceModels);
  },

  reset: function() {
    this.cacheCollection.reset();
  },

  addSelectedAudiences: function(audiences) {
    this.cacheCollection.add(audiences);
  },

  setSelectedAudiences: function(audiences) {
    this.reset();
    this.addSelectedAudiences(audiences);
  }
});

TSDK.UI.AudiencePicker.Searcher = new PseudoClass({

  toString: 'Searcher',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'keyup .search-input input': 'triggerSearchEvent',
      'click .search-input button': 'reset'
    }
  }),

  SEARCH_TIMEOUT: 300,

  construct: function(options) {
    this.initView(options.el);
  },

  initView: function(el) {
    this.view = new this.View({
      el: el,
      component: this,
      template: TSDK.UI.Templates.AudiencePicker.Searcher
    }).render();

    this.initVars();
  },

  initVars: function() {
    this.searchInputElement = this.view.$('.search-input').get(0);
    this.searchProcessId = null;
  },

  triggerSearchEvent: function(event) {
    var ESCAPE_KEY_CODE = 27,
      that = this;

    if (this.searchProcessId) {
      clearTimeout(this.searchProcessId);
    }

    if (event.keyCode === ESCAPE_KEY_CODE || event.which === ESCAPE_KEY_CODE) {
      $(event.currentTarget).blur();
      event.currentTarget.value = '';
    }

    this.searchProcessId = setTimeout(function(){
      that.triggerChangeSearchEvent(event.currentTarget.value);
    }, this.SEARCH_TIMEOUT);
  },

  triggerChangeSearchEvent: function (newValue) {
    var trimmedValue = newValue.replace(/^\s+|\s+$/g, '');
    this.trigger('search', trimmedValue);
  },

  reset: function() {
    this.searchInputElement.value = '';
    this.triggerChangeSearchEvent('');
  }
});

TSDK.UI.AudiencePicker.TenantDropdown = new PseudoClass({

  toString: 'TenantDropdown',

  extend: F.ModelComponent,

  View: F.View.extend({
    events: {
      'change .tenant-dropdown': 'onSelect'
    }
  }),

  construct: function(options) {
    this.initView(options.el);
    this.initVars(options);
  },

  initView: function(el) {
    this.view = new this.View({
      el: el,
      component: this,
      template: TSDK.UI.Templates.AudiencePicker.TenantDropdown
    }).render();
  },

  onSelect: function(event) {
    var value = event.target.value;
    var selectedIndex = parseInt(value);
    var selectedItem = this.items[selectedIndex];
    if (!selectedItem && value && selectedIndex !== -1) {
      selectedItem = {path: "/" + encodeURIComponent(value)}
    }
    this.trigger('select', selectedItem);
  },

  toggleShow: function(show) {
    this.view.$el.toggle(show);
  },

  setItems: function(items) {
    var select = this.view.$el.find('.tenant-dropdown').get(0);
    var config = this.config;
    this.items = items;

    select.items.clear();
    select.items.add({
      selected: false,
      value: -1,
      content: {
        textContent: this.view.$el.data('root-name')
      }
    });
    items.forEach(function(item, index) {
      select.items.add({
        value: index,
        content: {
          textContent: config.multiTenantHiddenPathSegment ?
            item.path.replace(config.multiTenantHiddenPathSegment, '') : item.path
        }
      });
    });
  },

  initVars: function(options) {
    this.config = _.extend({}, options.config);
    this.items = [];
  }

});

TSDK.UI.AudiencePicker.TenantDropdownModel = Backbone.Model.extend({

  getItems: function() {
    return this.get('items') || [];
  }
  
});

Handlebars.registerHelper('getAudienceSource', function(audienceJSON) {
  var origin = audienceJSON.origin || '--';

  switch (origin.toUpperCase()) {
    case 'TNT': return TSDK.I18n.get('Target');
    case 'CLOUD': return TSDK.I18n.get('Marketing Cloud');
    default: return origin;
  }
});

Handlebars.registerHelper('getAudienceIcon', function(audienceJSON) {
  var ruleInfo = TSDK.Enums.AudienceRules[audienceJSON.type];
  return ruleInfo && ruleInfo.icon || 'users';
});
TSDK.UI.AudiencePicker.prototype.config={
};
this["TSDK"] = this["TSDK"] || {};
this["TSDK"]["UI"] = this["TSDK"]["UI"] || {};
this["TSDK"]["UI"]["Templates"] = this["TSDK"]["UI"]["Templates"] || {};
this["TSDK"]["UI"]["Templates"]["MboxPickerComponent"] = this["TSDK"]["UI"]["Templates"]["MboxPickerComponent"] || {};

this["TSDK"]["UI"]["Templates"]["MetricsComponent"] = this["TSDK"]["UI"]["Templates"]["MetricsComponent"] || {};

this["TSDK"]["UI"]["Templates"]["Goals"] = this["TSDK"]["UI"]["Templates"]["Goals"] || {};

this["TSDK"]["UI"]["Templates"]["GoalsAndSettings"] = this["TSDK"]["UI"]["Templates"]["GoalsAndSettings"] || {};

this["TSDK"]["UI"]["Templates"]["DiagramComponent"] = this["TSDK"]["UI"]["Templates"]["DiagramComponent"] || {};

this["TSDK"]["UI"]["Templates"]["ExperienceRailComponent"] = this["TSDK"]["UI"]["Templates"]["ExperienceRailComponent"] || {};

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"] = this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"] || {};

this["TSDK"]["UI"]["Templates"]["AudiencePicker"] = this["TSDK"]["UI"]["Templates"]["AudiencePicker"] || {};

Handlebars.registerPartial("AdvancedMetricActionType", this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["AdvancedMetricActionType"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "hidden";
},"3":function(container,depth0,helpers,partials,data) {
    return "selected=\"selected\"";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"row fixed\">\n      <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"How will the count be incremented?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <coral-select class=\"select-advanced-metric-action-type width-18\">\n        <coral-select-item value=\"COUNT_ONCE\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"COUNT_ONCE",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Once per Entrant",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"COUNT_LANDINGS\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"COUNT_LANDINGS",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"On Every Impression (Excl. Page Refreshes)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"ALWAYS_CONVERT\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"ALWAYS_CONVERT",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"On Every Impression",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      </coral-select>\n    </div>\n";
},"7":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"row fixed\">\n      <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What experience will users see if they reenter the activity?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <coral-select class=\"select-advanced-metric-action-type width-18\">\n        <coral-select-item value=\"RESTART_SAME_EXPERIENCE\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"RESTART_SAME_EXPERIENCE",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Same Experience",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"RESTART_RANDOM_EXPERIENCE\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"RESTART_RANDOM_EXPERIENCE",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Random Experience",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"RESTART_NEW_EXPERIENCE\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"RESTART_NEW_EXPERIENCE",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Unseen Experience",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      </coral-select>\n    </div>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"row fixed\">\n      <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What will the users see instead of the activity content?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <coral-select class=\"select-advanced-metric-action-type width-18\">\n        <coral-select-item value=\"EXCLUDE_TO_SAME_EXPERIENCE\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"EXCLUDE_TO_SAME_EXPERIENCE",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Same Experience (without Tracking)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"BAN_FROM_CAMPAIGN\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.advancedMetricActionType : depth0),"BAN_FROM_CAMPAIGN",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Default/Other Activity Content",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      </coral-select>\n    </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"advanced-metric-action "
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.isAdvancedSettingsVisible : depth0),{"name":"unless","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\">\n  <div class=\"coral-Accordion-label uppercase\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Advanced Settings",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n  <div class=\"row fixed\">\n    <div class=\"grey sub-heading\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What will happen after a user encounters this goal metric?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n\n    <coral-select class=\"select-post-goal-success-action width-21\">\n      <coral-select-item value=\"incrementCountKeepUser\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.postGoalSuccessAction : depth0),"incrementCountKeepUser",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Increment Count & Keep User in Activity",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"incrementCountReleaseUserAllowEntry\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.postGoalSuccessAction : depth0),"incrementCountReleaseUserAllowEntry",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Increment Count, Release User & Allow Reentry",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"incrementCountBarEntry\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.postGoalSuccessAction : depth0),"incrementCountBarEntry",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Increment Count, Release User & Bar from Reentry",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n  </div>\n\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.postGoalSuccessAction : depth0),"incrementCountKeepUser","",{"name":"in","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.postGoalSuccessAction : depth0),"incrementCountReleaseUserAllowEntry",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.postGoalSuccessAction : depth0),"incrementCountBarEntry",{"name":"equals","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>\n";
},"useData":true}));

Handlebars.registerPartial("MetricsItemElementClick", this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItemElementClick"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.escapeExpression;

  return "    <span>&nbsp;"
    + alias1(container.lambda(((stack1 = (depth0 != null ? depth0.constraints : depth0)) != null ? stack1.length : stack1), depth0))
    + "&nbsp;"
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"selected",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;</span>\n    <coral-icon icon=\"edit\" size=\"XS\" class=\"select-elements e2e-select-elements\"></coral-icon>\n    <coral-icon icon=\"delete\" size=\"XS\" class=\"delete-elements e2e-delete-elements\"></coral-icon>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <button is=\"coral-button\" type=\"button\" class=\"select-elements e2e-select-elements\">\n      "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Select elements",{"name":"i18n","hash":{},"data":data}))
    + "\n    </button>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"row fixed constraintsCell\">\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.constraints : depth0)) != null ? stack1.length : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "</div>\n";
},"useData":true}));

Handlebars.registerPartial("MetricsItemMboxFields", this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItemMboxFields"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression, alias4="function";

  return "    <div class=\"constraint mboxSearch row fixed\" data-display-type=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"mbox",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias1,(data && data.index),{"name":"if","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      <div class=\"cell step mboxLookup"
    + alias3(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias4 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + " display-inline\" data-order=\"2\" constraint-order=\""
    + alias3(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias4 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\"></div>\n"
    + ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || alias2).call(alias1,((stack1 = (depths[1] != null ? depths[1].constraints : depths[1])) != null ? stack1.length : stack1),1,{"name":"notEquals","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "        <span class=\"cell width-2 grey\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"OR",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var helper;

  return "        <div class=\"cell width-2\">\n          <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"minusCircle\" iconSize=\"S\" class=\"remove-constraint\" id="
    + container.escapeExpression(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"index","hash":{},"data":data}) : helper)))
    + "></button>\n        </div>\n";
},"6":function(container,depth0,helpers,partials,data) {
    return "    <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"addCircle\" iconSize=\"S\" class=\"add-constraint padding-l-0\">\n      "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Add an Mbox",{"name":"i18n","hash":{},"data":data}))
    + "\n    </button>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"constraintsCell\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.constraints : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.specialmbox : depth0),{"name":"unless","hash":{},"fn":container.program(6, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true,"useDepths":true}));

Handlebars.registerPartial("MetricsItemPageView", this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItemPageView"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"row fixed\">\n  <coral-select class=\"select-matcher\">\n    <coral-select-item value=\"exact\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.matcher : depth0),"exact",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"URL is",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.matcher : depth0),"contains",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"URL contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n</div>\n"
    + ((stack1 = container.invokePartial(partials.MetricsItemUrlFields,depth0,{"name":"MetricsItemUrlFields","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

Handlebars.registerPartial("MetricsItemUrlFields", this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItemUrlFields"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression, alias4="function";

  return "  <div class=\"row fixed constraint\" data-display-type=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"URL",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias1,(data && data.index),{"name":"if","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n    <input is=\"coral-textfield\" placeholder=\"http://www.\" name=\""
    + alias3(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias4 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" value=\""
    + alias3(((helper = (helper = helpers.term || (depth0 != null ? depth0.term : depth0)) != null ? helper : alias2),(typeof helper === alias4 ? helper.call(alias1,{"name":"term","hash":{},"data":data}) : helper)))
    + "\" class=\"terminput cell\">\n\n"
    + ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || alias2).call(alias1,((stack1 = (depths[1] != null ? depths[1].constraints : depths[1])) != null ? stack1.length : stack1),1,{"name":"notEquals","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "      <div class=\"cell width-2 grey\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"OR",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var helper;

  return "      <div class=\"cell width-2\">\n        <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"minusCircle\" iconSize=\"S\" class=\"remove-constraint\" id="
    + container.escapeExpression(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"index","hash":{},"data":data}) : helper)))
    + "></button>\n      </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.constraints : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n<div class=\"row fixed\">\n  <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"addCircle\" iconSize=\"S\" class=\"add-constraint padding-l-0\">\n    "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Add another URL",{"name":"i18n","hash":{},"data":data}))
    + "\n  </button>\n</div>";
},"useData":true,"useDepths":true}));

Handlebars.registerPartial("AudienceAB", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["AudienceAB"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.AudienceBox,depth0,{"name":"AudienceBox","data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.NoAudienceBox,depth0,{"name":"NoAudienceBox","data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.name : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

Handlebars.registerPartial("AudienceBox", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["AudienceBox"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return container.escapeExpression(((helper = (helper = helpers.icon || (depth0 != null ? depth0.icon : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"icon","hash":{},"data":data}) : helper)));
},"3":function(container,depth0,helpers,partials,data) {
    return "users";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"tsdk-audience-box\">\n  <coral-icon icon=\""
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.icon : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "\" size=\"XS\" class=\"audience-icon\"></coral-icon>\n  <strong class=\"audience-title\">"
    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</strong>\n  <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"breadcrumb\" iconsize=\"XS\" class=\"audience-options-button\"></button>\n  <coral-popover class=\"context-menu\" placement=\"bottom\" target=\"_prev\">\n    <coral-popover-content>\n      <coral-selectlist>\n        <coral-selectlist-item value=\"edit\">\n          <coral-icon icon=\"edit\"></coral-icon>\n          <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Edit",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </coral-selectlist-item>\n        <coral-selectlist-item value=\"remove\">\n          <coral-icon icon=\"delete\"></coral-icon>\n          <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Remove",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </coral-selectlist-item>\n      </coral-selectlist>\n    </coral-popover-content>\n  </coral-popover>\n</div>";
},"useData":true}));

Handlebars.registerPartial("ExperienceAB", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["ExperienceAB"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return container.escapeExpression(((helper = (helper = helpers.visitorPercentage || (depth0 != null ? depth0.visitorPercentage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"visitorPercentage","hash":{},"data":data}) : helper)));
},"3":function(container,depth0,helpers,partials,data) {
    return "0";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.ExperienceBox,depth0,{"name":"ExperienceBox","data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"7":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.NoExperienceBox,depth0,{"name":"NoExperienceBox","data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"visitor-box\">\n  <input is=\"coral-textfield\" class=\"visitor-percentage\" value=\""
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.visitorPercentage : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "\">\n  <span class=\"visitor-percentage-symbol\">%</span>\n</div>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.name : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.program(7, data, 0),"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

Handlebars.registerPartial("ExperienceBox", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["ExperienceBox"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div class=\"tsdk-experience-box\">\n  <strong class=\"experience-title\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</strong>\n  <input is=\"coral-textfield\" class=\"experience-title-input\" value=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\">\n  <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"breadcrumb\" iconsize=\"XS\" class=\"experience-options-button\"></button>\n  <coral-popover class=\"context-menu\" placement=\"bottom\" target=\"_prev\">\n    <coral-popover-content>\n      <coral-selectlist>\n        <coral-selectlist-item value=\"edit\">\n          <coral-icon icon=\"edit\"></coral-icon>\n          <span>"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Edit",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </coral-selectlist-item>\n        <coral-selectlist-item value=\"remove\">\n          <coral-icon icon=\"delete\"></coral-icon>\n          <span>"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Remove",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </coral-selectlist-item>\n        <coral-selectlist-item value=\"rename\">\n          <coral-icon icon=\"text\"></coral-icon>\n          <span>"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Rename",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </coral-selectlist-item>\n      </coral-selectlist>\n    </coral-popover-content>\n  </coral-popover>\n</div>";
},"useData":true}));

Handlebars.registerPartial("ExperienceXT", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["ExperienceXT"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.ExperienceBox,depth0,{"name":"ExperienceBox","data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.NoExperienceBox,depth0,{"name":"NoExperienceBox","data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.name : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

Handlebars.registerPartial("NoAudienceBox", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["NoAudienceBox"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "view-mode";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <strong class=\"audience-title\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"No Audience",{"name":"i18n","hash":{},"data":data}))
    + "</strong>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "    <coral-icon icon=\"add\" size=\"S\" class=\"audience-icon\"></coral-icon>\n    <strong class=\"audience-title\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Add Audience",{"name":"i18n","hash":{},"data":data}))
    + "</strong>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"tsdk-audience-box no-audience "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.viewMode : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.viewMode : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.program(5, data, 0),"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true}));

Handlebars.registerPartial("NoExperienceBox", this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["NoExperienceBox"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "view-mode";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <strong class=\"experience-title\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"No Experience",{"name":"i18n","hash":{},"data":data}))
    + "</strong>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "    <coral-icon icon=\"add\" size=\"S\" class=\"experience-icon\"></coral-icon>\n    <strong class=\"experience-title\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Add Experience",{"name":"i18n","hash":{},"data":data}))
    + "</strong>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"tsdk-experience-box no-experience "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.viewMode : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.viewMode : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.program(5, data, 0),"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true}));

Handlebars.registerPartial("AudienceRule", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["AudienceRule"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "    <span class=\"message\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Add rules to define an audience.",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"targetingwidget\">\n"
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0["jcr:title"] : depth0),{"name":"unless","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  <div class=\"rules\"></div>\n  <div class=\"tooltip error arrow-bottom hoverError deleteRuleConfirmationDialog\">\n    <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Are you sure you want to delete?",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    <button class=\"icon-close white\"></button>\n    <button class=\"icon-delete white warning\"></button>\n  </div>\n  <div class=\"dropdown rulesdropdown\" data-init=\"dropdown\" title='"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add a targeting rule",{"name":"i18n","hash":{},"data":data}))
    + "'>\n    <select class=\"ruleselector\">\n      <option value=\"\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Rule",{"name":"i18n","hash":{},"data":data}))
    + "</option>\n      <option value=\"SITE_PAGE\"><i class=\"icon-pages\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Site Pages",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n      <option value=\"MBOX\"><i class=\"icon-pages\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Custom Parameters",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n      <option value=\"BROWSER_PARAM\"><i class=\"icon-unmerge\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Browser",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n      <option value=\"OPERATING_SYSTEM\"><i class=\"icon-unmerge\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Operating System",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n      <option value=\"VISITOR_PROFILE\"><i class=\"icon-demographic\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Visitor Profile",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n      <option value=\"LIBRARY\"><i class=\"icon-archive\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Target Library",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n      <option value=\"TRAFFIC_SOURCES\"><i class=\"icon-merge\"></i><span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Traffic Sources",{"name":"i18n","hash":{},"data":data}))
    + "</span></option>\n    </select>\n  </div>\n</div>";
},"useData":true}));

Handlebars.registerPartial("RuleSelector", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["RuleSelector"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"rule-option "
    + ((stack1 = (helpers.matchesAudienceType || (depth0 && depth0.matchesAudienceType) || alias2).call(alias1,depth0,((stack1 = (depths[1] != null ? depths[1].rule : depths[1])) != null ? stack1.type : stack1),{"name":"matchesAudienceType","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\" data-value=\""
    + alias3(container.lambda(depth0, depth0))
    + "\">\n      <coral-icon class=\"rule-icon\" icon=\""
    + alias3((helpers.getIconForAudienceType || (depth0 && depth0.getIconForAudienceType) || alias2).call(alias1,depth0,{"name":"getIconForAudienceType","hash":{},"data":data}))
    + "\" size=\"M\"></coral-icon>\n      <div class=\"rule-label\">"
    + alias3((helpers.getLabelForAudienceType || (depth0 && depth0.getLabelForAudienceType) || alias2).call(alias1,depth0,{"name":"getLabelForAudienceType","hash":{},"data":data}))
    + "</div>\n    </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "<div class=\"tsdk-audience-rule-selector\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.enabledRules : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>\n\n";
},"useData":true,"useDepths":true}));

Handlebars.registerPartial("RuleSummary", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["RuleSummary"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <span class=\"summary-section-label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Attribute Type",{"name":"i18n","hash":{},"data":data}))
    + ":&nbsp;</span>\n    <span class=\"summary-rule-type\">\n      <coral-icon icon=\""
    + alias3((helpers.getIconForAudienceType || (depth0 && depth0.getIconForAudienceType) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),{"name":"getIconForAudienceType","hash":{},"data":data}))
    + "\"></coral-icon>\n      "
    + alias3((helpers.getLabelForAudienceType || (depth0 && depth0.getLabelForAudienceType) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),{"name":"getLabelForAudienceType","hash":{},"data":data}))
    + "\n    </span>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.summary : depth0)) != null ? stack1.parameter : stack1),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.escapeExpression, alias2=container.lambda;

  return "      <span class=\"summary-section-label\">"
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"When",{"name":"i18n","hash":{},"data":data}))
    + ":</span>\n      <span class=\"summary-rule-parameter\">"
    + alias1(alias2(((stack1 = (depth0 != null ? depth0.summary : depth0)) != null ? stack1.parameter : stack1), depth0))
    + "</span>\n      <span class=\"summary-rule-operator\">"
    + alias1(alias2(((stack1 = (depth0 != null ? depth0.summary : depth0)) != null ? stack1.operator : stack1), depth0))
    + "</span>\n      <span class=\"summary-rule-operands\">"
    + alias1(alias2(((stack1 = (depth0 != null ? depth0.summary : depth0)) != null ? stack1.operands : stack1), depth0))
    + "</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"tsdk-rule-summary-text\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.type : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.summary : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true}));

Handlebars.registerPartial("MatchOperator", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["MatchOperator"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n  <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"matches",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  <coral-select-item value=\"doesNotEqualIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqualIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not match",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n</coral-select>\n";
},"useData":true}));

Handlebars.registerPartial("MobileDeviceType", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["MobileDeviceType"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "checked=\"checked\"";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<label class=\"device-type-option\">\n  <input type=\"checkbox\" name=\"device-type-option\" data-value=\""
    + alias4(((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"value","hash":{},"data":data}) : helper)))
    + "\"\n    "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.value : depth0),(depth0 != null ? depth0.deviceType : depth0),{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n  <span class=\"cursor-pointer\"><i class=\""
    + alias4(((helper = (helper = helpers.deviceIconClass || (depth0 != null ? depth0.deviceIconClass : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"deviceIconClass","hash":{},"data":data}) : helper)))
    + "\"></i>&nbsp;"
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</span>\n</label>\n";
},"useData":true}));

Handlebars.registerPartial("MobileDimension", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["MobileDimension"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "  <coral-numberinput min=\"0\" class=\"operandsInput\" data-step=\"2\" placeholder=\"Enter a number\" value=\""
    + container.escapeExpression(container.lambda(((stack1 = (depth0 != null ? depth0.operands : depth0)) != null ? stack1["0"] : stack1), depth0))
    + "\"></coral-numberinput>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "  <coral-numberinput step=\"1\" min=\"0\" class=\"operandsInput lower-value\" data-step=\"2\" placeholder=\"Enter a number\" value=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.operands : depth0)) != null ? stack1["0"] : stack1), depth0))
    + "\"></coral-numberinput>\n  <span class=\"operandsSeparator\">"
    + alias2((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"to",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n  <coral-numberinput step=\"1\" min=\"1\" class=\"operandsInput upper-value\" data-step=\"2\" placeholder=\"Enter a number\" value=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.operands : depth0)) != null ? stack1["1"] : stack1), depth0))
    + "\"></coral-numberinput>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n  <coral-select-item value=\"greater\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Greater Than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  <coral-select-item value=\"lesser\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesser",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Less Than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  <coral-select-item value=\"between\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"between",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Between",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n</coral-select>\n\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater","lesser",{"name":"in","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"between",{"name":"equals","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true}));

Handlebars.registerPartial("MobileOsOptions", this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["MobileOsOptions"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<coral-autocomplete-item value=\"osAndroid\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osAndroid",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Android",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n<coral-autocomplete-item value=\"osOsx\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osOsx",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"iOS",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n<coral-autocomplete-item value=\"osWindows\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osWindows",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Windows",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n<coral-autocomplete-item value=\"osLinux\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osLinux",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Linux",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n<coral-autocomplete-item value=\"osProprietary\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osProprietary",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Proprietary",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n<coral-autocomplete-item value=\"osRim\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osRim",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Blackberry",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n<coral-autocomplete-item value=\"osSymbian\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"osSymbian",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Symbian",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n";
},"useData":true}));

this["TSDK"]["UI"]["Templates"]["MboxPickerComponent"]["MboxPicker"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "    <coral-autocomplete-item value=\""
    + alias2(alias1(depth0, depth0))
    + "\" data-special=\"true\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depths[1] != null ? depths[1].selected : depths[1]),depth0,{"name":"equals","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias2(alias1(depth0, depth0))
    + "</coral-autocomplete-item>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "selected";
},"4":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "    "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depths[1] != null ? depths[1].exclude : depths[1]),depth0,{"name":"hasValue","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "");
},"5":function(container,depth0,helpers,partials,data) {
    return "";
},"7":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "\n      <coral-autocomplete-item value=\""
    + alias2(alias1(depth0, depth0))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depths[2] != null ? depths[2].selected : depths[2]),depth0,{"name":"equals","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias2(alias1(depth0, depth0))
    + "</coral-autocomplete-item>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<coral-autocomplete placeholder=\"Search mbox\" class=\"tsdk-mboxpicker\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.specialMboxes : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.items : depth0),{"name":"each","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</coral-autocomplete>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["Metrics"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"coral-Heading coral-Heading--3 section-heading\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Optimization Goal (Specifies goal for algorithm to optimize)*",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"coral-Heading coral-Heading--3 section-heading\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Goal Metric*",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"conversion-block\">\n      <div class=\"coral-Heading coral-Heading--3 section-heading\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Conversion Metric (Specifies when to restart activity)",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n        <div class=\"conversion-checkbox-container\">\n        <coral-checkbox class=\"conversion-metric-checkbox\" checked "
    + ((stack1 = helpers.unless.call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CONVERSION_METRIC_CHECKBOX_ENABLED : stack1),{"name":"unless","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n            <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Same as Optimization Goal",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n          </coral-checkbox>\n        </div>\n        <div class=\"conversion\"></div>\n      </div>\n";
},"6":function(container,depth0,helpers,partials,data) {
    return "disabled";
},"8":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"additional-metrics\">\n      <div class=\"coral-Heading coral-Heading--3 section-heading\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Additional Metrics",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <div class=\"additional\"></div>\n      <div class=\"grey sub-heading margin-t-1-25\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Configure other success metrics for reporting.",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <div>\n        <button type=\"button\" is=\"coral-button\" iconsize=\"S\" id=\"addmetrics\" class=\"addmetrics\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add a New Metric",{"name":"i18n","hash":{},"data":data}))
    + "</button>\n      </div>\n    </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"tsdk-ui-metrics\">\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.POST_GOAL_METRIC_TRACKING_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "  <div class=\"goal\"></div>\n\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.POST_GOAL_METRIC_TRACKING_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || helpers.helperMissing).call(alias1,(depth0 != null ? depth0.reportingSolution : depth0),"analytics",{"name":"notEquals","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItem"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "            <coral-selectlist-item value=\"delete\" class=\"delete-metric\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Delete",{"name":"i18n","hash":{},"data":data}))
    + "</coral-selectlist-item>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "            <coral-selectlist-item value=\"advancedSettings\" "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isAdvancedSettingsVisible : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Advanced Settings",{"name":"i18n","hash":{},"data":data}))
    + "</coral-selectlist-item>\n";
},"4":function(container,depth0,helpers,partials,data) {
    return "disabled";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "            <coral-select-item value=\"conversion\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"conversion",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Conversion",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "selected";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ACTION_VIEWED_MBOX_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"revenue\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"revenue",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Revenue",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"12":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "            <coral-select-item value=\"engagement\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"engagement",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Engagement",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "          <coral-tooltip variant=\"inspect\" placement=\"right\" class=\"goalnote\" target=\"#metric-selector\" interaction=\"off\" open>\n            "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"This metric will determine the success of your activity.",{"name":"i18n","hash":{},"data":data}))
    + "\n          </coral-tooltip>\n";
},"16":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"row fixed\">\n          <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Default View for Reporting",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n          <coral-select class=\"select-revenue-type\">\n            <coral-select-item value=\"rpv\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.revenueType : depth0),"rpv",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Revenue Per Visitor (RPV)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n            <coral-select-item value=\"aov\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.revenueType : depth0),"aov",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Average Order Value (AOV)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.REVENUE_SALES_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(17, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.REVENUE_ORDERS_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </coral-select>\n        </div>\n";
},"17":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"sales\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.revenueType : depth0),"sales",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Total Sales",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"19":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"conversionRate\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.revenueType : depth0),"conversionRate",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Orders",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"21":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"row fixed\">\n          <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"There are three ways you can measure engagement, which would you like to measure?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n          <coral-select class=\"select-engagement-type\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select action",{"name":"i18n","hash":{},"data":data}))
    + "\">\n            <coral-select-item value=\"pageViews\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.engagementType : depth0),"pageViews",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Page Views",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n            <coral-select-item value=\"customScoring\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.engagementType : depth0),"customScoring",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Custom Scoring",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n            <coral-select-item value=\"timeOnSite\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.engagementType : depth0),"timeOnSite",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Time on Site",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n          </coral-select>\n\n"
    + ((stack1 = (helpers.ifEither || (depth0 && depth0.ifEither) || alias2).call(alias1,(depth0 != null ? depth0.isGoalMetric : depth0),true,(depth0 != null ? depth0.conversion : depth0),true,{"name":"ifEither","hash":{},"fn":container.program(22, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </div>\n";
},"22":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.PROJECTED_EARNINGS_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(23, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"23":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.engagementType : depth0),"pageViews","timeOnSite",{"name":"in","hash":{},"fn":container.program(24, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"24":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "                <div class=\"row fixed metric-worth\">\n                  <div class=\"grey sub-heading padding-t-0-6\">\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.engagementType : depth0),"timeOnSite",{"name":"equals","hash":{},"fn":container.program(25, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.engagementType : depth0),"pageViews",{"name":"equals","hash":{},"fn":container.program(27, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "                    <span>&nbsp;<a class=\"coral-Link\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What is this",{"name":"i18n","hash":{},"data":data}))
    + "?</a></span>\n                    <coral-tooltip placement=\"right\" target=\"_prev\">\n                      "
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Providing a value for your goal allows Target to calculate an estimated lift in revenue.",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;\n                      <a href=\"http://microsite.omniture.com/t2/help/en_US/target/#target-Creating_an_Activity\" target=\"_blank\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Learn more",{"name":"i18n","hash":{},"data":data}))
    + "</a>\n                    </coral-tooltip>\n                  </div>\n                  <input is=\"coral-textfield\" placeholder=\""
    + alias3(container.lambda(((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CURRENCY_SYMBOL : stack1), depth0))
    + "\" value=\""
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.worth : depth0),{"name":"if","hash":{},"fn":container.program(29, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\" class=\"metric-worth-input\">\n                </div>\n";
},"25":function(container,depth0,helpers,partials,data) {
    return "                      "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Estimated value of a minute on site",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;\n";
},"27":function(container,depth0,helpers,partials,data) {
    return "                      "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Estimated value of a page view",{"name":"i18n","hash":{},"data":data}))
    + "\n";
},"29":function(container,depth0,helpers,partials,data) {
    return container.escapeExpression((helpers.number || (depth0 && depth0.number) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.worth : depth0),{"name":"number","hash":{},"data":data}));
},"31":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"row fixed\">\n          <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What action was taken by your audience to indicate your goal has been reached?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n          <coral-select class=\"select-action width-100p-imp\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select action",{"name":"i18n","hash":{},"data":data}))
    + "\">\n            <coral-select-item value=\"pageView\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"pageView",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Viewed a page",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ACTION_VIEWED_MBOX_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(32, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ACTION_CLICK_MBOX_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(34, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CLICK_TRACKING_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(36, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CLICK_RECOMMENDATION_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(38, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "         </coral-select>\n        </div>\n\n        "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"pageView",{"name":"equals","hash":{},"fn":container.program(40, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n        "
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxView","mboxClick",{"name":"in","hash":{},"fn":container.program(42, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n        "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"elementClick",{"name":"equals","hash":{},"fn":container.program(44, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n\n"
    + ((stack1 = (helpers.ifEither || (depth0 && depth0.ifEither) || alias2).call(alias1,(depth0 != null ? depth0.isGoalMetric : depth0),true,(depth0 != null ? depth0.conversion : depth0),true,{"name":"ifEither","hash":{},"fn":container.program(46, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"32":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"mboxView\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxView",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Viewed an mbox",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"34":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"mboxClick\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxClick",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clicked on mbox",{"name":"i18n","hash":{},"data":data}))
    + "\n              </coral-select-item>\n";
},"36":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"elementClick\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"elementClick",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clicked an element",{"name":"i18n","hash":{},"data":data}))
    + "\n              </coral-select-item>\n";
},"38":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"clickRecommendation\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"clickRecommendation",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clicked on recommendation",{"name":"i18n","hash":{},"data":data}))
    + "\n              </coral-select-item>\n";
},"40":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemPageView,depth0,{"name":"MetricsItemPageView","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"42":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemMboxFields,depth0,{"name":"MetricsItemMboxFields","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"44":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemElementClick,depth0,{"name":"MetricsItemElementClick","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"46":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.PROJECTED_EARNINGS_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(47, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"47":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.action : depth0),"pageView","mboxView","elementClick","clickRecommendation",{"name":"in","hash":{},"fn":container.program(48, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"48":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "              <div class=\"row fixed metric-worth\">\n                <div class=\"grey sub-heading padding-t-0-6\">\n                  "
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Estimated Value of one conversion",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;\n                  <span>&nbsp;<a class=\"coral-Link\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What is this",{"name":"i18n","hash":{},"data":data}))
    + "?</a></span>\n                  <coral-tooltip placement=\"right\" target=\"_prev\">\n                    "
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Providing a value for your goal allows Target to calculate an estimated lift in revenue.",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;\n                    <a href=\"http://microsite.omniture.com/t2/help/en_US/target/#target-Creating_an_Activity\" target=\"_blank\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Learn more",{"name":"i18n","hash":{},"data":data}))
    + "</a>\n                  </coral-tooltip>\n                </div>\n                <input is=\"coral-textfield\" placeholder=\""
    + alias3(container.lambda(((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CURRENCY_SYMBOL : stack1), depth0))
    + "\" value=\""
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.worth : depth0),{"name":"if","hash":{},"fn":container.program(29, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\" class=\"metric-worth-input\">\n              </div>\n";
},"50":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"row fixed\">\n          <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What action was taken by your audience to indicate your goal has been reached?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n          <coral-select class=\"select-action width-100p-imp\">\n            <coral-select-item value=\"mboxView\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxView",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Viewed an mbox",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ACTION_CLICK_MBOX_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(34, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CLICK_RECOMMENDATION_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(38, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </coral-select>\n        </div>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"pageView",{"name":"equals","hash":{},"fn":container.program(51, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxView",{"name":"equals","hash":{},"fn":container.program(53, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"51":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "          <div class=\"row fixed\">\n            <coral-select class=\"select-matcher\">\n              <coral-select-item value=\"exact\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.matcher : depth0),"exact",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"URL is",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n              <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.matcher : depth0),"contains",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"URL contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n            </coral-select>\n          </div>\n\n"
    + ((stack1 = container.invokePartial(partials.MetricsItemUrlFields,depth0,{"name":"MetricsItemUrlFields","data":data,"indent":"          ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"53":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemMboxFields,depth0,{"name":"MetricsItemMboxFields","data":data,"indent":"          ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<coral-accordion class=\"metric\">\n  <coral-accordion-item selected class=\"metric-item\">\n    <input is=\"coral-textfield\" name=\"metricname\" maxlength=\"25\" class=\"metric-name-input\" value=\""
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "\">\n    <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"moreVertical\" iconSize=\"S\" class=\"context-options-button\">\n    </button>\n    <coral-popover target=\"_prev\" class=\"context-menu\" alignmy=\"left top\" alignat=\"left bottom\">\n      <coral-popover-content>\n        <coral-selectlist class=\"container-relative context-menu-option\">\n          <coral-selectlist-item value=\"rename\" class=\"rename-metric\">"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Rename",{"name":"i18n","hash":{},"data":data}))
    + "</coral-selectlist-item>\n          <coral-selectlist-item value=\"clear\" class=\"clear-metric-fields\">"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clear all fields",{"name":"i18n","hash":{},"data":data}))
    + "</coral-selectlist-item>\n"
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.isGoalMetric : depth0),{"name":"unless","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ADVANCED_SETTINGS_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </coral-selectlist>\n      </coral-popover-content>\n    </coral-popover>\n\n\n    <coral-accordion-item-label class=\"metric-header display-inline-block width-90p\">\n      <span class=\"metric-name-label uppercase\">"
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</span>\n      <div class=\"metric-summary font-normal\"></div>\n    </coral-accordion-item-label>\n\n    <coral-accordion-item-content>\n      <div class=\"row fixed\">\n        <div class=\"grey sub-heading\">"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What do you want to measure with this activity?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n\n        <coral-select class=\"select-metric-type width-100p-imp\" id=\"metric-selector\" placeholder=\""
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select success metric",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CONVERSION_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.REVENUE_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ENGAGEMENT_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </coral-select>\n\n"
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.type : depth0),{"name":"unless","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </div>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"revenue",{"name":"equals","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"engagement",{"name":"equals","hash":{},"fn":container.program(21, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"conversion",{"name":"equals","hash":{},"fn":container.program(31, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.revenueType : depth0),{"name":"if","hash":{},"fn":container.program(50, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n      <div class=\"advanced-metric-action-placeholder\">\n"
    + ((stack1 = container.invokePartial(partials.AdvancedMetricActionType,depth0,{"name":"AdvancedMetricActionType","data":data,"indent":"        ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "      </div>\n\n    </coral-accordion-item-content>\n  </coral-accordion-item>\n</coral-accordion>";
},"usePartial":true,"useData":true});

this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItemA4T"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "            <coral-selectlist-item value=\"rename\" class=\"rename-metric\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Rename",{"name":"i18n","hash":{},"data":data}))
    + "</coral-selectlist-item>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "            <coral-select-item value=\"conversion\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"conversion",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Conversion",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"4":function(container,depth0,helpers,partials,data) {
    return "selected";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "            <coral-select-item value=\"analytics\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"analytics",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Use an Analytics metric",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"8":function(container,depth0,helpers,partials,data) {
    return "          <coral-tooltip variant=\"inspect\" placement=\"right\" class=\"goalnote\" target=\"#metric-selector\" interaction=\"off\" open>\n            "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"This metric will determine the success of your activity.",{"name":"i18n","hash":{},"data":data}))
    + "\n          </coral-tooltip>\n";
},"10":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "        <div class=\"grey sub-heading\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"The following are metrics available from Analytics:",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n        <div class=\"row fixed\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.reportSuite : depth0),{"name":"if","hash":{},"fn":container.program(11, data, 0, blockParams, depths),"inverse":container.program(16, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "        </div>\n";
},"11":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "          <coral-select class=\"select-analytics-metric width-100p-imp\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Select Metric",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.analyticsMetrics : depth0),{"name":"each","hash":{},"fn":container.program(12, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </coral-select>\n          <coral-wait class=\"left middle loading "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.analyticsMetrics : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\"></coral-wait>\n";
},"12":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "              <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"id","hash":{},"data":data}) : helper)))
    + "\" data-source=\""
    + alias4(((helper = (helper = helpers.source || (depth0 != null ? depth0.source : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"source","hash":{},"data":data}) : helper)))
    + "\" data-support=\""
    + alias4(((helper = (helper = helpers.support || (depth0 != null ? depth0.support : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"support","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.id : depth0),(depths[1] != null ? depths[1].analyticsMetricId : depths[1]),{"name":"equals","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "hidden";
},"16":function(container,depth0,helpers,partials,data) {
    return "          <div class=\"rs-alert\">\n            <coral-icon icon=\"alert\"></coral-icon>\n            <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Please select a report suite to see the metrics available from Analytics.",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n          </div>\n          <coral-wait class=\"left middle loading hidden\"></coral-wait>\n";
},"18":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"row fixed\">\n          <div class=\"grey sub-heading padding-t-0-6\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What action was taken by your audience to indicate your goal has been reached?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n          <coral-select class=\"select-action width-100p-imp\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select action",{"name":"i18n","hash":{},"data":data}))
    + "\">\n            <coral-select-item value=\"pageView\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"pageView",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Viewed a page",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ACTION_VIEWED_MBOX_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ACTION_CLICK_MBOX_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(21, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CLICK_TRACKING_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(23, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CLICK_RECOMMENDATION_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(25, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </coral-select>\n        </div>\n\n        "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"pageView",{"name":"equals","hash":{},"fn":container.program(27, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n        "
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxView","mboxClick",{"name":"in","hash":{},"fn":container.program(29, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n        "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"elementClick",{"name":"equals","hash":{},"fn":container.program(31, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n";
},"19":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"mboxView\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxView",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Viewed an mbox",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"21":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"mboxClick\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"mboxClick",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clicked on mbox",{"name":"i18n","hash":{},"data":data}))
    + "\n              </coral-select-item>\n";
},"23":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"elementClick\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"elementClick",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clicked an element",{"name":"i18n","hash":{},"data":data}))
    + "\n              </coral-select-item>\n";
},"25":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "              <coral-select-item value=\"clickRecommendation\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.action : depth0),"clickRecommendation",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clicked on recommendation",{"name":"i18n","hash":{},"data":data}))
    + "\n              </coral-select-item>\n";
},"27":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemPageView,depth0,{"name":"MetricsItemPageView","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"29":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemMboxFields,depth0,{"name":"MetricsItemMboxFields","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"31":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MetricsItemElementClick,depth0,{"name":"MetricsItemElementClick","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<coral-accordion class=\"metric\">\n  <coral-accordion-item selected class=\"metric-item\">\n    <input is=\"coral-textfield\" name=\"metricname\" maxlength=\"25\" class=\"metric-name-input\" value=\""
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "\">\n    <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"moreVertical\" iconSize=\"S\" class=\"context-options-button\">\n    </button>\n    <coral-popover target=\"_prev\" class=\"context-menu\" alignmy=\"left top\" alignat=\"left bottom\">\n      <coral-popover-content>\n        <coral-selectlist class=\"container-relative context-menu-option\">\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"conversion",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          <coral-selectlist-item value=\"clear\" class=\"clear-metric-fields\">"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Clear all fields",{"name":"i18n","hash":{},"data":data}))
    + "</coral-selectlist-item>\n        </coral-selectlist>\n      </coral-popover-content>\n    </coral-popover>\n\n    <coral-accordion-item-label class=\"metric-header display-inline-block width-90p\">\n      <span class=\"metric-name-label uppercase\">"
    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</span>\n      <div class=\"metric-summary font-normal\"></div>\n    </coral-accordion-item-label>\n\n    <coral-accordion-item-content>\n      <div class=\"row fixed\">\n        <div class=\"grey sub-heading\">"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"What do you want to measure with this activity?",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n\n        <coral-select class=\"select-metric-type width-100p-imp\" id=\"metric-selector\" placeholder=\""
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select success metric",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.CONVERSION_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.ANALYTICS_METRIC_ENABLED : stack1),{"name":"if","hash":{},"fn":container.program(6, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </coral-select>\n\n"
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.type : depth0),{"name":"unless","hash":{},"fn":container.program(8, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </div>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"analytics",{"name":"equals","hash":{},"fn":container.program(10, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.type : depth0),"conversion",{"name":"equals","hash":{},"fn":container.program(18, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </coral-accordion-item-content>\n  </coral-accordion-item>\n</coral-accordion>\n";
},"usePartial":true,"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["MetricsComponent"]["MetricsItemSummary"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "  <span class=\"font-italic\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Metric:",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;</span>\n  <span class=\"color-3287d2-imp\">"
    + alias3(((helper = (helper = helpers.type || (depth0 != null ? depth0.type : depth0)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"type","hash":{},"data":data}) : helper)))
    + "</span>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.action : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <span class=\"font-italic\">&nbsp;"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Action:",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;</span>\n    <span class=\"color-3287d2-imp\">"
    + alias3(((helper = (helper = helpers.action || (depth0 != null ? depth0.action : depth0)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"action","hash":{},"data":data}) : helper)))
    + "</span>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.terms : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <span class=\"font-italic\">\n        &nbsp;"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.constraint : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + "&nbsp;\n      </span><span class=\"color-3287d2-imp first-term\">"
    + container.escapeExpression(container.lambda(((stack1 = (depth0 != null ? depth0.terms : depth0)) != null ? stack1["0"] : stack1), depth0))
    + "</span>\n\n"
    + ((stack1 = (helpers.gt || (depth0 && depth0.gt) || helpers.helperMissing).call(alias1,((stack1 = (depth0 != null ? depth0.terms : depth0)) != null ? stack1.length : stack1),1,{"name":"gt","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "\n          "
    + ((stack1 = (helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"{0}:",{"name":"i18n","hash":{"comment":"{0} is either mbox or URL. May need to add space before colon for some languages."},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n";
},"5":function(container,depth0,helpers,partials,data) {
    var helper;

  return container.escapeExpression(((helper = (helper = helpers.constraint || (depth0 != null ? depth0.constraint : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"constraint","hash":{},"data":data}) : helper)));
},"7":function(container,depth0,helpers,partials,data) {
    return "          "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"term:",{"name":"i18n","hash":{},"data":data}))
    + "\n        ";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <span class=\"color-3287d2-imp\">&nbsp;&&nbsp;"
    + alias3((helpers.subtract || (depth0 && depth0.subtract) || alias2).call(alias1,((stack1 = (depth0 != null ? depth0.terms : depth0)) != null ? stack1.length : stack1),1,{"name":"subtract","hash":{},"data":data}))
    + "&nbsp;"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"other",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"11":function(container,depth0,helpers,partials,data) {
    var helper;

  return "  <span class=\"font-bold uppercase\">"
    + container.escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"title","hash":{},"data":data}) : helper)))
    + "</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.type : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(11, data, 0),"data":data})) != null ? stack1 : "");
},"useData":true});

this["TSDK"]["UI"]["Templates"]["Goals"]["Goals"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "  <div class=\"reporting-data\">\n"
    + ((stack1 = helpers.unless.call(alias1,((stack1 = (depths[1] != null ? depths[1].config : depths[1])) != null ? stack1.SHOW_ONLY_ANALYTICS : stack1),{"name":"unless","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n    <div class=\"row fixed reporting-company-suite-container "
    + ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || alias2).call(alias1,(depth0 != null ? depth0.reportingSolution : depth0),"analytics",{"name":"notEquals","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\">\n      <div class=\"padding-r-1 cell sc-company-container\">\n        <div class=\"grey sub-heading\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Company",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n        <div class=\"sc-company-picker-placeholder\"></div>\n      </div>\n      <div class=\"cell report-suite-container\">\n        <div class=\"grey sub-heading\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Report Suite",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n        <div class=\"report-suite-picker-placeholder\"></div>\n      </div>\n    </div>\n\n    <div class=\"divider-container\">\n      <div class=\"divider-line\"></div>\n    </div>\n  </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <div class=\"row fixed reporting-source\">\n        <div class=\"grey sub-heading\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Reporting Source",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n        <coral-select class=\"reporting-solution\">\n          <coral-select-item value=\"target\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.reportingSolution : depth0),"target",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n            "
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Adobe Target",{"name":"i18n","hash":{},"data":data}))
    + "\n          </coral-select-item>\n          <coral-select-item value=\"analytics\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.reportingSolution : depth0),"analytics",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n            "
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Adobe Analytics",{"name":"i18n","hash":{},"data":data}))
    + "\n          </coral-select-item>\n        </coral-select>\n      </div>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "selected";
},"5":function(container,depth0,helpers,partials,data) {
    return "hidden";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.isAnalyticsSupported : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n<div class=\"tsdk-metrics\"></div>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["Goals"]["ReportSuitePicker"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "  <coral-wait></coral-wait>\n";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.reportSuites : depth0)) != null ? stack1.length : stack1),0,{"name":"equals","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.program(6, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"rs-alert\">\n      <coral-icon icon=\"alert\"></coral-icon>\n      <span class=\"alert-text\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"There are no Target-enabled report suites available.",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;<a href=\"https://marketing.adobe.com/resources/help/en_US/target/a4t/\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Learn more.",{"name":"i18n","hash":{},"data":data}))
    + "</a></span>\n    </div>\n";
},"6":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "    <coral-select class=\"report-suite-picker\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Select Report Suite",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.reportSuites : depth0),{"name":"each","hash":{},"fn":container.program(7, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </coral-select>\n";
},"7":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "        <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(data && data.key),(depths[1] != null ? depths[1].selectedReportSuite : depths[1]),{"name":"equals","hash":{},"fn":container.program(8, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"8":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.reportSuites : depth0),undefined,{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.program(3, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "");
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["Goals"]["SCCompanyPicker"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "  <coral-wait></coral-wait>\n";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.scCompanies : depth0)) != null ? stack1.length : stack1),0,{"name":"equals","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.program(6, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <div class=\"sc-alert\">\n      <coral-icon icon=\"alert\"></coral-icon>\n      <span class=\"alert-text\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"There are no Target-enabled companies available.",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;<a href=\"https://marketing.adobe.com/resources/help/en_US/target/a4t/\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Learn more.",{"name":"i18n","hash":{},"data":data}))
    + "</a></span>\n    </div>\n";
},"6":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "    <coral-select class=\"sc-company-picker\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.scCompanies : depth0),{"name":"each","hash":{},"fn":container.program(7, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </coral-select>\n";
},"7":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "        <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.name : depth0),(depths[1] != null ? depths[1].selectedCompany : depths[1]),{"name":"equals","hash":{},"fn":container.program(8, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"8":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.scCompanies : depth0),undefined,{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.program(3, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\n";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["GoalsAndSettings"]["GoalsAndSettings"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tsdk-goals\"></div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["DiagramAB"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.unless.call(depth0 != null ? depth0 : (container.nullContext || {}),(data && data.index),{"name":"unless","hash":{},"fn":container.program(2, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"diagram-cell width-50p\">\n            <div class=\"container-relative width-100p display-table\">\n              <div class=\"diagram-cell\">\n                <div class=\"lineBottom line-cell-top\">&nbsp;</div>\n                <div class=\"lineTop line-cell-bottom lineLeft\"><div class=\"cell middle\"></div></div>\n              </div>\n              <div class=\"diagram-cell experience-column\">\n"
    + ((stack1 = container.invokePartial(partials.ExperienceAB,depth0,{"name":"ExperienceAB","data":data,"indent":"                ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "              </div>\n            </div>\n          </div> <!-- experiencesCol -->\n        </div>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "          <div class=\"diagram-row\" data-index=\""
    + container.escapeExpression(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\n            <div class=\"diagram-cell width-50p\">\n              <div class=\"display-table width-100p\">\n                <div class=\"diagram-cell audience-column\">&nbsp;</div>\n                <div class=\"diagram-cell\">&nbsp;</div>\n              </div>\n            </div>\n            <div class=\"diagram-cell width-50p\">\n              <div class=\"container-relative width-100p display-table\">\n                <div class=\"diagram-cell\">\n                  <div class=\"lineBottom line-cell-top lineLeft\">&nbsp;</div>\n                  <div class=\"lineTop line-cell-bottom lineLeft\">&nbsp;</div>\n                </div>\n                <div class=\"diagram-cell experience-column\">\n"
    + ((stack1 = container.invokePartial(partials.ExperienceAB,depth0,{"name":"ExperienceAB","data":data,"indent":"                  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "                </div>\n              </div>\n            </div> <!-- experiencesCol -->\n          </div>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "        <div class=\"diagram-cell width-50p\">\n            <div class=\"container-relative width-100p display-table\">\n              <div class=\"diagram-cell\">\n                <div class=\"lineBottom line-cell-top\">&nbsp;</div>\n                <div class=\"lineTop line-cell-bottom\">&nbsp;</div>\n              </div>\n              <div class=\"diagram-cell experience-column\">\n"
    + ((stack1 = container.invokePartial(partials.ExperienceAB,depth0,{"name":"ExperienceAB","data":data,"indent":"                ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "              </div>\n            </div>\n          </div> <!-- experiencesCol -->\n        </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<section class=\"tsdk-diagram diagram-ab display-table\">\n  <div class=\"height-1-5 display-table-row\">\n    <div class=\"diagram-cell width-50p\">\n      <span class=\"section-title\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"AUDIENCE",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    </div>\n    <div class=\"diagram-cell width-50p\">\n      <div class=\"container-relative width-100p display-table\">\n        <div class=\"diagram-cell\">&nbsp;</div>\n        <div class=\"diagram-cell padding-0 experience-column\">\n          <div class=\"visitor-box placeholder\">&nbsp;</div>\n          <span class=\"section-title\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"EXPERIENCES",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"display-table-row-group\">\n    <div class=\"diagram-row\" data-index=\"0\">\n      <div class=\"diagram-cell width-50p\">\n        <div class=\"display-table width-100p\">\n          <div class=\"diagram-cell audience-column\">\n"
    + ((stack1 = container.invokePartial(partials.AudienceAB,(depth0 != null ? depth0.audience : depth0),{"name":"AudienceAB","data":data,"indent":"            ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "          </div>\n          <div class=\"diagram-cell\">\n            <div class=\"lineBottom line-cell-top\">&nbsp;</div>\n            <div class=\"lineTop\">&nbsp;</div>\n          </div>\n        </div>\n      </div> <!-- audiencesCol -->\n\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.experiences : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "")
    + "  </div>\n</section>\n";
},"usePartial":true,"useData":true});

this["TSDK"]["UI"]["Templates"]["DiagramComponent"]["DiagramXT"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "      <div class=\"diagram-row\" data-index=\""
    + container.escapeExpression(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\n        <div class=\"diagram-cell width-50p\">\n          <div class=\"display-table width-100p\">\n            <div class=\"diagram-cell audience-column\">\n"
    + ((stack1 = container.invokePartial(partials.AudienceAB,(depth0 != null ? depth0.audience : depth0),{"name":"AudienceAB","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n            <div class=\"diagram-cell\">\n              <div class=\"lineBottom line-cell-top\">&nbsp;</div>\n              <div class=\"lineTop\">&nbsp;</div>\n            </div>\n          </div>\n        </div> <!-- audiencesCol -->\n\n        <div class=\"diagram-cell width-50p\">\n          <div class=\"container-relative width-100p display-table\">\n            <div class=\"diagram-cell\">\n              <div class=\"lineBottom line-cell-top\">&nbsp;</div>\n              <div class=\"lineTop\"><div class=\"cell middle\"></div></div>\n            </div>\n            <div class=\"diagram-cell experience-column\">\n"
    + ((stack1 = container.invokePartial(partials.ExperienceXT,depth0,{"name":"ExperienceXT","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n          </div>\n        </div> <!-- experiencesCol -->\n      </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<section class=\"tsdk-diagram diagram-xt display-table\">\n  <div class=\"height-1-5 display-table-row\">\n    <div class=\"diagram-cell width-50p\">\n      <span class=\"section-title\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"AUDIENCES",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    </div>\n    <div class=\"diagram-cell width-50p\">\n      <div class=\"container-relative width-100p display-table\">\n        <div class=\"diagram-cell\">&nbsp;</div>\n        <div class=\"diagram-cell padding-0 experience-column\">\n          <span class=\"section-title\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"EXPERIENCES",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"display-table-row-group\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.experiences : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\n</section>\n\n";
},"usePartial":true,"useData":true});

this["TSDK"]["UI"]["Templates"]["ExperienceRailComponent"]["ExperienceRailAB"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "right";
},"3":function(container,depth0,helpers,partials,data) {
    return "left";
},"5":function(container,depth0,helpers,partials,data) {
    return "chevronRight";
},"7":function(container,depth0,helpers,partials,data) {
    return "chevronLeft";
},"9":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "      <div class=\"rail-row experience-row "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(data && data.index),((stack1 = (depths[1] != null ? depths[1].config : depths[1])) != null ? stack1.activeIndex : stack1),{"name":"equals","hash":{},"fn":container.program(10, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\"\n           data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" title=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\">\n        <div class=\"rail-cell label-area\">\n          <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"triangleDown\" iconsize=\"XS\" class=\"menu-button\"></button>\n          <span class=\"rail-label\">"
    + alias4((helpers.getExperienceShortName || (depth0 && depth0.getExperienceShortName) || alias2).call(alias1,(depth0 != null ? depth0.name : depth0),{"name":"getExperienceShortName","hash":{},"data":data}))
    + "</span>\n        </div>\n        <div class=\"rail-cell collapsible-area\">\n          <div class=\"experience-name\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</div>\n        </div>\n      </div>\n";
},"10":function(container,depth0,helpers,partials,data) {
    return "active";
},"12":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <div class=\"rail-row add-experience\">\n        <div class=\"rail-cell label-area\">\n          <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"add\" iconsize=\"XS\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Experience",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n        </div>\n        <div class=\"rail-cell collapsible-area\">\n          <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Experience",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n        </div>\n      </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.escapeExpression, alias2=depth0 != null ? depth0 : (container.nullContext || {}), alias3=helpers.helperMissing;

  return "<div class=\"tsdk-experience-rail tsdk-experience-rail-ab\"\n     data-mode=\""
    + alias1(container.lambda(((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.mode : stack1), depth0))
    + "\" data-placement=\""
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.placement : stack1),"right",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.program(3, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\">\n  <div class=\"rail-label-background\"></div>\n  <div class=\"rail-rows-container rail-header-row\">\n    <div class=\"rail-row\">\n      <div class=\"rail-cell label-area\">\n        <button type=\"button\" is=\"coral-button\" variant=\"minimal\" iconsize=\"XS\"\n                icon=\""
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.placement : stack1),"right",{"name":"equals","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\"\n                class=\"collapse-btn hidden-in-collapsed-mode hidden-in-expanding-mode\" title=\""
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || alias3).call(alias2,"Collapse",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n        <button type=\"button\" is=\"coral-button\" variant=\"minimal\" iconsize=\"XS\"\n                icon=\""
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.placement : stack1),"right",{"name":"equals","hash":{},"fn":container.program(7, data, 0, blockParams, depths),"inverse":container.program(5, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\"\n                class=\"expand-btn hidden-in-expanded-mode hidden-in-collapsing-mode\" title=\""
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || alias3).call(alias2,"Expand",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n      </div>\n      <div class=\"rail-cell collapsible-area\">\n        <span><strong>"
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || alias3).call(alias2,"Experiences",{"name":"i18n","hash":{},"data":data}))
    + "</strong></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"rail-rows-container rail-body-rows\">\n"
    + ((stack1 = helpers.each.call(alias2,(depth0 != null ? depth0.experiences : depth0),{"name":"each","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.lt || (depth0 && depth0.lt) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.experiences : depth0)) != null ? stack1.length : stack1),((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.maxCount : stack1),{"name":"lt","hash":{},"fn":container.program(12, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\n</div>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["ExperienceRailComponent"]["ExperienceRailActionMenu"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "  <coral-selectlist class=\"action-menu\">\n"
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.actions : depth0),"edit",{"name":"hasValue","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.actions : depth0),"rename",{"name":"hasValue","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.actions : depth0),"duplicate",{"name":"hasValue","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.actions : depth0),"delete",{"name":"hasValue","hash":{},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </coral-selectlist>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "      <coral-selectlist-item value=\"edit\">\n        <coral-icon icon=\"edit\"></coral-icon>\n        <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Edit Audience",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n      </coral-selectlist-item>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "      <coral-selectlist-item value=\"rename\">\n        <coral-icon icon=\"text\"></coral-icon>\n        <span>"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.experienceOnly : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + "</span>\n      </coral-selectlist-item>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Rename",{"name":"i18n","hash":{},"data":data}));
},"7":function(container,depth0,helpers,partials,data) {
    return container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Rename Experience",{"name":"i18n","hash":{},"data":data}));
},"9":function(container,depth0,helpers,partials,data) {
    return "      <coral-selectlist-item value=\"duplicate\">\n        <coral-icon icon=\"copy\"></coral-icon>\n        <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Duplicate",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n      </coral-selectlist-item>\n";
},"11":function(container,depth0,helpers,partials,data) {
    return "      <coral-selectlist-item value=\"delete\">\n        <coral-icon icon=\"delete\"></coral-icon>\n        <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Delete",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n      </coral-selectlist-item>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.actions : depth0)) != null ? stack1.length : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true});

this["TSDK"]["UI"]["Templates"]["ExperienceRailComponent"]["ExperienceRailRenamePopover"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rename-popover\">\n  <div><strong>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Rename Experience",{"name":"i18n","hash":{},"data":data}))
    + "</strong></div>\n  <input is=\"coral-textfield\" class=\"experience-title-input\" value=\""
    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\"/>\n  <div class=\"align-r\">\n    <button type=\"button\" is=\"coral-button\" variant=\"minimal\" iconsize=\"S\" icon=\"close\" class=\"rename-cancel-button\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Cancel",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n    <button type=\"button\" is=\"coral-button\" variant=\"minimal\" iconsize=\"S\" icon=\"check\" class=\"rename-save-button\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Save",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n  </div>\n</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["ExperienceRailComponent"]["ExperienceRailXT"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "right";
},"3":function(container,depth0,helpers,partials,data) {
    return "left";
},"5":function(container,depth0,helpers,partials,data) {
    return "chevronRight";
},"7":function(container,depth0,helpers,partials,data) {
    return "chevronLeft";
},"9":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = (helpers.ifAudienceValid || (depth0 && depth0.ifAudienceValid) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.audience : depth0),{"name":"ifAudienceValid","hash":{},"fn":container.program(10, data, 0, blockParams, depths),"inverse":container.program(13, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression, alias5=container.lambda;

  return "        <div class=\"rail-row experience-row "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(data && data.index),((stack1 = (depths[2] != null ? depths[2].config : depths[2])) != null ? stack1.activeIndex : stack1),{"name":"equals","hash":{},"fn":container.program(11, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\"\n             data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" title=\""
    + alias4(alias5(((stack1 = (depth0 != null ? depth0.audience : depth0)) != null ? stack1.name : stack1), depth0))
    + " - "
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\">\n          <div class=\"rail-cell label-area\">\n            <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"triangleDown\" iconsize=\"XS\" class=\"menu-button\"></button>\n            <span class=\"rail-label\">"
    + alias4((helpers.getExperienceShortName || (depth0 && depth0.getExperienceShortName) || alias2).call(alias1,(depth0 != null ? depth0.name : depth0),{"name":"getExperienceShortName","hash":{},"data":data}))
    + "</span>\n          </div>\n          <div class=\"rail-cell collapsible-area\">\n            <div class=\"audience-name\">"
    + alias4(alias5(((stack1 = (depth0 != null ? depth0.audience : depth0)) != null ? stack1.name : stack1), depth0))
    + "</div>\n            <div class=\"experience-name\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</div>\n          </div>\n        </div>\n";
},"11":function(container,depth0,helpers,partials,data) {
    return "active";
},"13":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"rail-row experience-row no-context "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(data && data.index),((stack1 = (depths[2] != null ? depths[2].config : depths[2])) != null ? stack1.activeIndex : stack1),{"name":"equals","hash":{},"fn":container.program(11, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + " add-audience\"\n             data-index=\""
    + alias3(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\n          <div class=\"rail-cell label-area\">\n            <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"add\" iconsize=\"XS\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Audience",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n          </div>\n          <div class=\"rail-cell collapsible-area\">\n            <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Audience",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n          </div>\n        </div>\n";
},"15":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = (helpers.unlessSingleExperienceWithNoAudience || (depth0 && depth0.unlessSingleExperienceWithNoAudience) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.experiences : depth0),{"name":"unlessSingleExperienceWithNoAudience","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"16":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"rail-row add-experience\">\n          <div class=\"rail-cell label-area\">\n            <button type=\"button\" is=\"coral-button\" variant=\"minimal\" icon=\"add\" iconsize=\"XS\"\n                    title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Experience Targeting",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n          </div>\n          <div class=\"rail-cell collapsible-area\">\n            <span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Add Experience Targeting",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n          </div>\n        </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.escapeExpression, alias2=depth0 != null ? depth0 : (container.nullContext || {}), alias3=helpers.helperMissing;

  return "<div class=\"tsdk-experience-rail tsdk-experience-rail-xt\"\n     data-mode=\""
    + alias1(container.lambda(((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.mode : stack1), depth0))
    + "\" data-placement=\""
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.placement : stack1),"right",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.program(3, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\">\n  <div class=\"rail-label-background\"></div>\n  <div class=\"rail-rows-container\">\n    <div class=\"rail-row\">\n      <div class=\"rail-cell label-area\">\n        <button type=\"button\" is=\"coral-button\" variant=\"minimal\" iconsize=\"XS\"\n                icon=\""
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.placement : stack1),"right",{"name":"equals","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\"\n                class=\"collapse-btn hidden-in-collapsed-mode hidden-in-expanding-mode\" title=\""
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || alias3).call(alias2,"Collapse",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n        <button type=\"button\" is=\"coral-button\" variant=\"minimal\" iconsize=\"XS\"\n                icon=\""
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.placement : stack1),"right",{"name":"equals","hash":{},"fn":container.program(7, data, 0, blockParams, depths),"inverse":container.program(5, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\"\n                class=\"expand-btn hidden-in-expanded-mode hidden-in-collapsing-mode\" title=\""
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || alias3).call(alias2,"Expand",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n      </div>\n      <div class=\"rail-cell collapsible-area\">\n        <span><strong>"
    + alias1((helpers.i18n || (depth0 && depth0.i18n) || alias3).call(alias2,"Audiences",{"name":"i18n","hash":{},"data":data}))
    + "</strong></span>\n      </div>\n    </div>\n\n"
    + ((stack1 = helpers.each.call(alias2,(depth0 != null ? depth0.experiences : depth0),{"name":"each","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.lt || (depth0 && depth0.lt) || alias3).call(alias2,((stack1 = (depth0 != null ? depth0.experiences : depth0)) != null ? stack1.length : stack1),((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.maxCount : stack1),{"name":"lt","hash":{},"fn":container.program(15, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\n</div>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["AudienceRuleContainer"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "  <div class=\"display-table-row\">\n    <div class=\"rule-label-column display-table-cell\"></div>\n    <div class=\"rule-section-column rules-operator-cell display-table-cell\">\n      <span class=\"rules-operator\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"And",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    </div>\n  </div>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <div class=\"rule-section-label margin-t-1-5\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"When",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n        <div class=\"rule-section\">\n          <div class=\"rule-placeholder\"></div>\n          <div class=\"rule-actions\">\n            <button type=\"button\" class=\"rule-delete-button\" is=\"coral-button\" variant=\"minimal\" icon=\"delete\" iconsize=\"S\"\n              title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Delete",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n            <button type=\"button\" class=\"rule-copy-button\" is=\"coral-button\" variant=\"minimal\" icon=\"copy\" iconsize=\"S\"\n              title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Copy",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n            <button type=\"button\" class=\"rule-done-button\" is=\"coral-button\" variant=\"minimal\" icon=\"checkCircle\" iconsize=\"S\"\n              title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Done",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n          </div>\n        </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || alias2).call(alias1,(depth0 != null ? depth0.index : depth0),0,{"name":"notEquals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "<div class=\"display-table-row\">\n  <div class=\"rule-heading display-table-cell rule-label-column\">\n    <strong>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Rule",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;#"
    + alias3((helpers.add || (depth0 && depth0.add) || alias2).call(alias1,(depth0 != null ? depth0.index : depth0),1,{"name":"add","hash":{},"data":data}))
    + "</strong>\n  </div>\n  <div class=\"display-table-cell rule-section-column coral-Well rule-definition-box\">\n    <div class=\"rule-editor\">\n      <div class=\"rule-section-label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select Attribute Type",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n"
    + ((stack1 = container.invokePartial(partials.RuleSelector,depth0,{"name":"RuleSelector","data":data,"indent":"      ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.rule : depth0)) != null ? stack1.type : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\n    <div class=\"rule-summary\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Expand",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <span class=\"summary-placeholder\">"
    + ((stack1 = container.invokePartial(partials.RuleSummary,(depth0 != null ? depth0.rule : depth0),{"name":"RuleSummary","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "</span>\n      <coral-icon class=\"rule-expand-icon\" icon=\"chevronDown\" size=\"XS\"></coral-icon>\n    </div>\n  </div>\n</div>";
},"usePartial":true,"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["DialogContent"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tsdk-audience-workflow-content\">\n  <div class=\"rules-create-container\"></div>\n  <div class=\"rules-review-container\"></div>\n</div>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["DialogHeader"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "    <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Edit Audience",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Create New Audience",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var helper;

  return "    <span>("
    + container.escapeExpression(((helper = (helper = helpers.count || (depth0 != null ? depth0.count : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"count","hash":{},"data":data}) : helper)))
    + ")</span>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "      <button type=\"button\" class=\"next-button\" is=\"coral-button\" variant=\"primary\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Next",{"name":"i18n","hash":{},"data":data}))
    + "</button>\n";
},"9":function(container,depth0,helpers,partials,data) {
    return "      <button type=\"button\" class=\"create-button\" is=\"coral-button\" variant=\"primary\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Save",{"name":"i18n","hash":{},"data":data}))
    + "</button>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"tsdk-header-content\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isEditMode : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.count : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n  <span class=\"action-toolbar\">\n    <button type=\"button\" class=\"fullscreen-button fullScreen-button\" is=\"coral-button\" variant=\"minimal\" icon=\"fullScreen\" iconsize=\"S\"\n            data-toggle=\"true\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Fullscreen",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n    <button type=\"button\" class=\"fullscreen-button fullScreenExit-button\" is=\"coral-button\" variant=\"minimal\" icon=\"fullScreenExit\" iconsize=\"S\"\n            data-toggle=\"false\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Exit Fullscreen",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n    <button type=\"button\" class=\"close-button\" is=\"coral-button\" variant=\"minimal\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Cancel",{"name":"i18n","hash":{},"data":data}))
    + "</button>\n"
    + ((stack1 = (helpers.lt || (depth0 && depth0.lt) || alias2).call(alias1,(depth0 != null ? depth0.step : depth0),(depth0 != null ? depth0.totalSteps : depth0),{"name":"lt","hash":{},"fn":container.program(7, data, 0),"inverse":container.program(9, data, 0),"data":data})) != null ? stack1 : "")
    + "  </span>\n</div>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["RulesReviewStep"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || alias2).call(alias1,(data && data.index),0,{"name":"notEquals","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    <div>\n      <span class=\"rule-label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Rule",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;#"
    + alias3((helpers.add || (depth0 && depth0.add) || alias2).call(alias1,(data && data.index),1,{"name":"add","hash":{},"data":data}))
    + "</span>\n"
    + ((stack1 = container.invokePartial(partials.RuleSummary,depth0,{"name":"RuleSummary","data":data,"indent":"      ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "    </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "      <div class=\"rules-operator\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"AND",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"audience-name-label\">\n  <strong>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Audience Name",{"name":"i18n","hash":{},"data":data}))
    + "</strong>\n</div>\n<input type=\"text\" class=\"audience-name width-100p\" is=\"coral-textfield\" value=\""
    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\" maxlength=\"200\">\n\n<div class=\"audience-rules-summary-label\">\n  <strong>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Rules",{"name":"i18n","hash":{},"data":data}))
    + "</strong>\n</div>\n<div class=\"audience-rules-summary coral-Well\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.targets : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>\n\n<button type=\"button\" class=\"edit-rules-button\" is=\"coral-button\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Edit",{"name":"i18n","hash":{},"data":data}))
    + "</button>";
},"usePartial":true,"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["TargetingWidget"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "          "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Add Another Rule",{"name":"i18n","hash":{},"data":data}))
    + "\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "          "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Add Rule",{"name":"i18n","hash":{},"data":data}))
    + "\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"rules-placeholder\"></div>\n<div class=\"display-table width-100p\">\n  <div class=\"display-table-row\">\n    <div class=\"rule-label-column display-table-cell\"></div>\n    <div class=\"rule-section-column display-table-cell\">\n      <button type=\"button\" class=\"add-rule-button\" is=\"coral-button\" variant=\"minimal\" icon=\"addCircle\" iconsize=\"S\">\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.targets : depth0)) != null ? stack1.length : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "      </button>\n    </div>\n  </div>\n</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["Browser"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n        <coral-autocomplete-item value=\"Chrome\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"Chrome",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Chrome",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"Firefox\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"Firefox",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Firefox",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"Safari\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"Safari",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Safari",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"MSIE Trident\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"MSIE Trident",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Internet Explorer",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"Edge\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"Edge",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Microsoft Edge",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"Opera\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"Opera",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Opera",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"iPad\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"iPad",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"iPad",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"iPhone\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"iPhone",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"iPhone",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n      </coral-autocomplete>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"7":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n        <coral-autocomplete-item value=\"en\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"en",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"English",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"fr\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"fr",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"French",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"de\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"de",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"German",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"ja\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"ja",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Japanese",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"ko\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"ko",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Korean",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"pt\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"pt",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Portuguese",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"ru\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"ru",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Russian",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"es\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"es",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Spanish",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n        <coral-autocomplete-item value=\"zh-tw\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"zh-tw",{"name":"hasValue","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Traditional Chinese",{"name":"i18n","hash":{},"data":data}))
    + "</coral-autocomplete-item>\n      </coral-autocomplete>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"greater\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is greater than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"greaterEquals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greaterEquals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is greater than or equal to",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"lesser\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesser",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is less than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"lesserEquals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesserEquals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is less than or equal to",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput browserVersionLookup no-suggestion\"\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || helpers.helperMissing).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals","doesNotEqual",{"name":"in","hash":{},"fn":container.program(11, data, 0),"inverse":container.program(13, data, 0),"data":data})) != null ? stack1 : "")
    + ">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(15, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"11":function(container,depth0,helpers,partials,data) {
    return "          placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Enter major version numbers",{"name":"i18n","hash":{},"data":data}))
    + "\" multiple\n";
},"13":function(container,depth0,helpers,partials,data) {
    return "          placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Enter major version number",{"name":"i18n","hash":{},"data":data}))
    + "\"\n        ";
},"15":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "          <coral-autocomplete-item value=\""
    + alias2(alias1(depth0, depth0))
    + "\" selected>"
    + alias2(alias1(depth0, depth0))
    + "</coral-autocomplete-item>\n";
},"17":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.helpLink : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"18":function(container,depth0,helpers,partials,data) {
    var helper;

  return "      <a is=\"coral-anchorbutton\" variant=\"minimal\" icon=\"helpCircle\" iconsize=\"XS\"\n         class=\"help-link\" href=\""
    + container.escapeExpression(((helper = (helper = helpers.helpLink || (depth0 != null ? depth0.helpLink : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"helpLink","hash":{},"data":data}) : helper)))
    + "\" target=\"_blank\"></a>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"browserType\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"browserType",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Type",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"locale\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"locale",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Language",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"browserVersion\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"browserVersion",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Version",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"browserType",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"locale",{"name":"equals","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"browserVersion",{"name":"equals","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(17, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["CustomParameters"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "      <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"value","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.value : depth0),(depths[1] != null ? depths[1].mbox : depths[1]),{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.content || (depth0 != null ? depth0.content : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"content","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <input data-step=\"1\" is=\"coral-textfield\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter parameter name",{"name":"i18n","hash":{},"data":data}))
    + "\" class=\"input-parameter\" value=\""
    + alias3(((helper = (helper = helpers.parameter || (depth0 != null ? depth0.parameter : depth0)) != null ? helper : alias2),(typeof helper === "function" ? helper.call(alias1,{"name":"parameter","hash":{},"data":data}) : helper)))
    + "\">\n";
},"7":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.mbox : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"8":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-select data-step=\"1\" class=\"parameterSelector\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Select parameter",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.parameters : depth0),{"name":"each","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-select>\n";
},"9":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.name : depth0),(depths[1] != null ? depths[1].parameter : depths[1]),{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"11":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"2\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Choose evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"containsIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"containsIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotContainIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotContainIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"equalsIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equalsIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqualIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqualIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"greater\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is greater than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"greaterEquals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greaterEquals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is greater than or equal to",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"lesser\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesser",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is less than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"lesserEquals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesserEquals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is less than or equal to",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"paramPresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter is present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"paramNotPresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramNotPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter is not present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"paramNotPresentValueNotPresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramNotPresentValueNotPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter or value is not present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"paramValuePresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramValuePresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter value is present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n";
},"13":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <textarea data-step=\"3\" is=\"coral-textarea\" cols=\"30\" rows=\"5\" class=\"operandsInput\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"15":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <textarea data-step=\"3\" is=\"coral-textarea\" cols=\"30\" rows=\"5\" class=\"operandsInput\"\n      data-pattern=\"^-?\\d+\\.?\\d*$\" data-error-alert=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Please enter a single decimal value.",{"name":"i18n","hash":{},"data":data}))
    + "\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"17":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"wait-container\">\n      <coral-wait></coral-wait>\n      <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Please wait",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"mboxSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.mbox : depth0),"",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Create parameter",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.mboxes : depth0),{"name":"each","hash":{},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </coral-select>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.mbox : depth0),"",{"name":"equals","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.parameter : depth0),{"name":"if","hash":{},"fn":container.program(11, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"containsIgnoreCase","doesNotContainIgnoreCase","equals","equalsIgnoreCase","doesNotEqualIgnoreCase",{"name":"in","hash":{},"fn":container.program(13, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater","greaterEquals","lesser","lesserEquals",{"name":"in","hash":{},"fn":container.program(15, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.ifEither || (depth0 && depth0.ifEither) || alias2).call(alias1,(depth0 != null ? depth0.paramsLoading : depth0),true,(depth0 != null ? depth0.mboxesLoading : depth0),true,{"name":"ifEither","hash":{},"fn":container.program(17, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n  <coral-tooltip class=\"invalid-value-error hidden\" variant=\"error\" placement=\"right\" target=\"_prev\"></coral-tooltip>\n</div>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["Geo"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"matches\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"matches",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"matches",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotMatch\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotMatch",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not match",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput countryLookup\" data-parameter=\"countries\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "          <coral-autocomplete-item value=\""
    + alias2(alias1(depth0, depth0))
    + "\" selected>"
    + alias2(alias1(depth0, depth0))
    + "</coral-autocomplete-item>\n";
},"7":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"matches\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"matches",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"matches",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotMatch\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotMatch",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not match",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"8":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput stateLookup\" data-parameter=\"regions\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"10":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"matches\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"matches",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"matches",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotMatch\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotMatch",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not match",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"11":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput cityLookup\" data-parameter=\"cities\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"contains",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotContain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotContain",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"noZipCodeRecorded\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"noZipCodeRecorded",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"no zip code recorded",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"anyZipCode\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"anyZipCode",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"any zip code",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"contains","doesNotContain","equals","doesNotEqual",{"name":"in","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"14":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <textarea data-step=\"2\" is=\"coral-textarea\" cols=\"10\" rows=\"5\" class=\"operandsInput zipcode\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"16":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"matches\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"matches",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"matches",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotMatch\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotMatch",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not match",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(17, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"17":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput metroLookup\" data-parameter=\"metros\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"country\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"country",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Country",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"region\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"region",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"State",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"city\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"city",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"City",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"zip\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"zip",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Zip code",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"dma\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"dma",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"DMA",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"country",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"region",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"city",{"name":"equals","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"zip",{"name":"equals","hash":{},"fn":container.program(13, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"dma",{"name":"equals","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  <coral-tooltip class=\"invalidOperandsError hidden\" variant=\"error\" placement=\"right\" target=\"_prev\"></coral-tooltip>\n</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["Mobile"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select class=\"device-type\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Device Type",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"\" "
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.deviceType : depth0),{"name":"unless","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Any Device",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"isMobilePhone\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.deviceType : depth0),"isMobilePhone",{"name":"equals","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Phone",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"isTablet\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.deviceType : depth0),"isTablet",{"name":"equals","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Tablet",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"mobileDevice\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.deviceType : depth0),"mobileDevice",{"name":"equals","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Mobile",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "selected";
},"4":function(container,depth0,helpers,partials,data) {
    return "selected=\"selected\"";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MatchOperator,depth0,{"name":"MatchOperator","data":data,"indent":"    ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"7":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput osLookup\" data-parameter=\"os\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = container.invokePartial(partials.MobileOsOptions,depth0,{"name":"MobileOsOptions","data":data,"indent":"        ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <coral-select data-step=\"2\" class=\"operandsInput\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n        <coral-select-item value=\"1\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"1",{"name":"hasValue","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"true",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"0\" "
    + ((stack1 = (helpers.hasValue || (depth0 && depth0.hasValue) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"0",{"name":"hasValue","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"false",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      </coral-select>\n";
},"12":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MobileDimension,depth0,{"name":"MobileDimension","data":data,"indent":"    ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"14":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.MatchOperator,depth0,{"name":"MatchOperator","data":data,"indent":"    ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(15, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"15":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "      <coral-autocomplete data-step=\"2\" data-parameter=\""
    + alias4(((helper = (helper = helpers.parameter || (depth0 != null ? depth0.parameter : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"parameter","hash":{},"data":data}) : helper)))
    + "\" class=\"operandsInput "
    + alias4(((helper = (helper = helpers.parameter || (depth0 != null ? depth0.parameter : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"parameter","hash":{},"data":data}) : helper)))
    + "Lookup\" placeholder=\""
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"16":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "          <coral-autocomplete-item value=\""
    + alias2(alias1(depth0, depth0))
    + "\" selected>"
    + alias2(alias1(depth0, depth0))
    + "</coral-autocomplete-item>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"mobileOs",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"model\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"model",{"name":"equals","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Device Model",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"vendor\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"vendor",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Device Vendor",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"mobileDevice\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"mobileDevice",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Is Mobile Device",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"isMobilePhone\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"isMobilePhone",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Is Mobile Phone",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"isTablet\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"isTablet",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Is Tablet",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"mobileOs\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"mobileOs",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"OS",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"displayHeight\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"displayHeight",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Screen Height (px)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"displayWidth\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"displayWidth",{"name":"equals","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Screen Width (px)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"mobileOs",{"name":"equals","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"mobileDevice","isTablet","isMobilePhone",{"name":"in","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"displayHeight",{"name":"equals","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"displayWidth",{"name":"equals","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"vendor","model",{"name":"in","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"usePartial":true,"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["Network"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"contains",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotContain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotContain",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <textarea data-step=\"2\" is=\"coral-textarea\" cols=\"10\" rows=\"5\" class=\"operandsInput ispName textInput\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"ISP Name",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"contains",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotContain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotContain",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"7":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <textarea data-step=\"2\" is=\"coral-textarea\" cols=\"10\" rows=\"5\" class=\"operandsInput domainName textInput\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Domain Name",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"matches\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"matches",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"matches",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotMatch\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotMatch",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not match",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.operator : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <coral-autocomplete data-step=\"2\" class=\"operandsInput connectionSpeedLookup\" data-parameter=\"connection_speed\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" forceselection=\"true\" multiple>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.operands : depth0),{"name":"each","hash":{},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </coral-autocomplete>\n";
},"11":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "          <coral-autocomplete-item value=\""
    + alias2(alias1(depth0, depth0))
    + "\" selected>"
    + alias2(alias1(depth0, depth0))
    + "</coral-autocomplete-item>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"ispName\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"ispName",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"ISP",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"domainName\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"domainName",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Domain Name",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"connectionSpeed\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"connectionSpeed",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Connection Speed",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"ispName",{"name":"equals","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"domainName",{"name":"equals","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"connectionSpeed",{"name":"equals","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  <coral-tooltip class=\"invalidOperandsError hidden\" variant=\"error\" placement=\"right\" target=\"_prev\"></coral-tooltip>\n</div>\n\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["OperatingSystem"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"Linux\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Linux",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Linux",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"Macintosh\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Macintosh",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Macintosh",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"Windows\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Windows",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Windows",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["SitePages"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"1\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"url\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"url",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"URL",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"domain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"domain",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Domain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"query\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"query",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Query",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.page : depth0),"currentPage","landingPage",{"name":"in","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </coral-select>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing;

  return "        <coral-select-item value=\"fragment\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"fragment",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Hash (#) fragment",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <coral-select data-step=\"2\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"contains",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotContain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotContain",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals (case sensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n"
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"fragment",{"name":"equals","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </coral-select>\n";
},"7":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "        <coral-select-item value=\"present\" data-unary=\"true\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"present",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"notPresent\" data-unary=\"true\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"notPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is not present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"empty\" data-unary=\"true\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"empty",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is empty",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"notEmpty\" data-unary=\"true\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"notEmpty",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is not empty",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <textarea data-step=\"3\" is=\"coral-textarea\" class=\"operandsInput\" cols=\"30\" rows=\"5\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"pageSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"currentPage\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.page : depth0),"currentPage",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Current Page",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"previousPage\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.page : depth0),"previousPage",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Previous Page",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"landingPage\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.page : depth0),"landingPage",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Landing Page",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.page : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.parameter : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"contains","doesNotContain","equals","equals","doesNotEqual",{"name":"in","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["Social"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n <coral-select name=\"0\" class=\"step0 parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n   <coral-select-item value=\"Digg\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Digg",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Digg",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n   <coral-select-item value=\"Facebook\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Facebook",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Facebook",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n   <coral-select-item value=\"Myspace\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Myspace",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Myspace",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n   <coral-select-item value=\"Twitter\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Twitter",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Twitter",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n   <coral-select-item value=\"Pinterest\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Pinterest",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Pinterest",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n   <coral-select-item value=\"UrlShortener\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"UrlShortener",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Url Shorteners",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n </coral-select>\n</div>";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["TargetLibrary"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "      <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"value","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.value : depth0),(depths[1] != null ? depths[1].parameter : depths[1]),{"name":"equals","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.content || (depth0 != null ? depth0.content : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"content","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "selected";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.parameter : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"5":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "        <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.parameter || (depth0 != null ? depth0.parameter : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"parameter","hash":{},"data":data}) : helper)))
    + "\" selected>"
    + alias4(((helper = (helper = helpers.parameter || (depth0 != null ? depth0.parameter : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"parameter","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"wait-container\">\n      <coral-wait></coral-wait>\n      <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Please wait",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.audiences : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.program(4, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "  </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.loading : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["TrafficSource"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return ((stack1 = helpers["if"].call(alias1,(depths[1] != null ? depths[1].parameter : depths[1]),{"name":"if","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depths[1] != null ? depths[1].operator : depths[1]),{"name":"if","hash":{},"fn":container.program(6, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n        <coral-select-item value=\"contains\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depths[1] != null ? depths[1].operator : depths[1]),"contains",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"doesNotContain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depths[1] != null ? depths[1].operator : depths[1]),"doesNotContain",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depths[1] != null ? depths[1].operator : depths[1]),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals (case sensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"doesNotEqual\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depths[1] != null ? depths[1].operator : depths[1]),"doesNotEqual",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      </coral-select>\n";
},"6":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <textarea data-step=\"2\" is=\"coral-textarea\" class=\"operandsInput\" cols=\"30\" rows=\"3\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depths[1] != null ? depths[1].operands : depths[1]),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n    <coral-select-item value=\"baidu.com\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"baidu.com",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Baidu",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"bing.com\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"bing.com",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Bing",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"google.com\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"google.com",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Google",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"yahoo.com\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"yahoo.com",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"From Yahoo",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"landingPageReferrer.url\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"landingPageReferrer.url",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Referring Landing Page: URL",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"landingPageReferrer.domain\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"landingPageReferrer.domain",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Referring Landing Page: Domain",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n    <coral-select-item value=\"landingPageReferrer.query\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"landingPageReferrer.query",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Referring Landing Page: Query",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n  </coral-select>\n\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"landingPageReferrer.url","landingPageReferrer.domain","landingPageReferrer.query",{"name":"in","hash":{},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>\n";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["AudienceWorkflow"]["VisitorProfile"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "selected";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return ((stack1 = helpers.each.call(alias1,((stack1 = (depth0 != null ? depth0.parameters : depth0)) != null ? stack1.USER : stack1),{"name":"each","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers.each.call(alias1,((stack1 = (depth0 != null ? depth0.parameters : depth0)) != null ? stack1.PROFILE : stack1),{"name":"each","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers.each.call(alias1,((stack1 = (depth0 != null ? depth0.parameters : depth0)) != null ? stack1.CRS : stack1),{"name":"each","hash":{},"fn":container.program(11, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\" data-parametertargetid=\""
    + alias4(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"id","hash":{},"data":data}) : helper)))
    + "\" data-type=\"USER\"\n"
    + ((stack1 = helpers["if"].call(alias1,(depths[2] != null ? depths[2].parametertargetid : depths[2]),{"name":"if","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\n          </coral-select-item>\n";
},"5":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "              "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.id : depth0),(depths[2] != null ? depths[2].parametertargetid : depths[2]),{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n";
},"7":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "              "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.name : depth0),(depths[2] != null ? depths[2].parameter : depths[2]),{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n            ";
},"9":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\" data-type=\"PROFILE\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.name : depth0),(depths[2] != null ? depths[2].parameter : depths[2]),{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</coral-select-item>\n";
},"11":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          <coral-select-item value=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\" data-parametertargetid=\""
    + alias4(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"id","hash":{},"data":data}) : helper)))
    + "\" data-type=\"CRS\"\n"
    + ((stack1 = helpers["if"].call(alias1,(depths[2] != null ? depths[2].parametertargetid : depths[2]),{"name":"if","hash":{},"fn":container.program(5, data, 0, blockParams, depths),"inverse":container.program(7, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + ">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\n          </coral-select-item>\n";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = (helpers.notEquals || (depth0 && depth0.notEquals) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.type : depth0),"VISITOR_PROFILE",{"name":"notEquals","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"14":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "      <coral-select data-step=\"1\" class=\"operatorSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Choose evaluator",{"name":"i18n","hash":{},"data":data}))
    + "\">\n        <coral-select-item value=\"containsIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"containsIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"contains (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"doesNotContainIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotContainIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not contain (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"equals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"equalsIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"equalsIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"equals (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"doesNotEqualIgnoreCase\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"doesNotEqualIgnoreCase",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"does not equal (case insensitive)",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"greater\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is greater than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"greaterEquals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greaterEquals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is greater than or equal to",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"lesser\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesser",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is less than",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"lesserEquals\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"lesserEquals",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"is less than or equal to",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"paramPresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter is present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"paramNotPresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramNotPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter is not present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"paramNotPresentValueNotPresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramNotPresentValueNotPresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter or value is not present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n        <coral-select-item value=\"paramValuePresent\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"paramValuePresent",{"name":"equals","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"parameter value is present",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      </coral-select>\n";
},"16":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <textarea data-step=\"2\" is=\"coral-textarea\" cols=\"30\" rows=\"5\" class=\"operandsInput\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"18":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "    <textarea data-step=\"2\" is=\"coral-textarea\" cols=\"30\" rows=\"5\" class=\"operandsInput\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Enter each value in new line.",{"name":"i18n","hash":{},"data":data}))
    + "\"\n      data-pattern=\"^-?\\d+\\.?\\d*$\" data-error-alert=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Please enter a single decimal value.",{"name":"i18n","hash":{},"data":data}))
    + "\">"
    + alias3((helpers.join || (depth0 && depth0.join) || alias2).call(alias1,(depth0 != null ? depth0.operands : depth0),"\\n",{"name":"join","hash":{},"data":data}))
    + "</textarea>\n";
},"20":function(container,depth0,helpers,partials,data) {
    return "    <span class=\"wait-container\">\n      <coral-wait></coral-wait>\n      <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Please wait",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n    </span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"rule-content\">\n  <coral-select data-step=\"0\" class=\"parameterSelector\" placeholder=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Select",{"name":"i18n","hash":{},"data":data}))
    + "\">\n      <coral-select-item value=\"New Visitor\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"New Visitor",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"New Visitor",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"Returning Visitor\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Returning Visitor",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Returning Visitor",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"In other tests\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"In other tests",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"In other tests",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"First page of session\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"First page of session",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"First page of session",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"Not in other tests\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Not in other tests",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Not in other tests",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n      <coral-select-item value=\"Not first page of session\" "
    + ((stack1 = (helpers.equals || (depth0 && depth0.equals) || alias2).call(alias1,(depth0 != null ? depth0.parameter : depth0),"Not first page of session",{"name":"equals","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Not first page of session",{"name":"i18n","hash":{},"data":data}))
    + "</coral-select-item>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.parameters : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </coral-select>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.parameter : depth0),{"name":"if","hash":{},"fn":container.program(13, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"containsIgnoreCase","doesNotContainIgnoreCase","equals","equalsIgnoreCase","doesNotEqualIgnoreCase",{"name":"in","hash":{},"fn":container.program(16, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = (helpers["in"] || (depth0 && depth0["in"]) || alias2).call(alias1,(depth0 != null ? depth0.operator : depth0),"greater","greaterEquals","lesser","lesserEquals",{"name":"in","hash":{},"fn":container.program(18, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.loading : depth0),{"name":"if","hash":{},"fn":container.program(20, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n  <coral-tooltip class=\"invalid-value-error hidden\" variant=\"error\" placement=\"right\" target=\"_prev\"></coral-tooltip>\n</div>";
},"useData":true,"useDepths":true});

this["TSDK"]["UI"]["Templates"]["AudiencePicker"]["AudienceListItem"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "checked=\"checked\"";
},"3":function(container,depth0,helpers,partials,data) {
    return "          "
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"by {0}",(depth0 != null ? depth0.modifiedBy : depth0),{"name":"i18n","hash":{},"data":data}))
    + "\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div class=\"row fixed audienceListRow\">\n  <div class=\"cell middle select-item\">\n    <coral-checkbox value=\""
    + alias4(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"id","hash":{},"data":data}) : helper)))
    + "\" "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.selected : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "></coral-checkbox>\n  </div>\n  <div class=\"cell middle type\"><coral-icon icon=\""
    + alias4((helpers.getAudienceIcon || (depth0 && depth0.getAudienceIcon) || alias2).call(alias1,depth0,{"name":"getAudienceIcon","hash":{},"data":data}))
    + "\" size=\"S\"></coral-icon></div>\n\n  <div class=\"cell middle name ellipsis-text\" title=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</div>\n\n  <div class=\"cell middle path ellipsis-text\" title=\""
    + alias4(((helper = (helper = helpers.path || (depth0 != null ? depth0.path : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"path","hash":{},"data":data}) : helper)))
    + "\">"
    + alias4(((helper = (helper = helpers.path || (depth0 != null ? depth0.path : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"path","hash":{},"data":data}) : helper)))
    + "</div>\n\n  <div class=\"cell middle source\">"
    + alias4((helpers.getAudienceSource || (depth0 && depth0.getAudienceSource) || alias2).call(alias1,depth0,{"name":"getAudienceSource","hash":{},"data":data}))
    + "</div>\n\n  <div class=\"cell middle change-log\">\n    <div class=\"updateInfoContainer\">\n      <div>"
    + alias4((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Updated",{"name":"i18n","hash":{},"data":data}))
    + "&nbsp;"
    + alias4((helpers.getDate || (depth0 && depth0.getDate) || alias2).call(alias1,(depth0 != null ? depth0.modifiedAt : depth0),{"name":"getDate","hash":{"comment":"Date format pattern for moment.js. e.g. Nov 13 2013 (http://momentjs.com/docs)","format":"DD MMM YYYY"},"data":data}))
    + "</div>\n      <div>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.modifiedBy : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </div>\n    </div>\n  </div>\n</div>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudiencePicker"]["DialogContent"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "    <span class=\"audience-tenant-dropdown-placeholder\" data-root-name=\"/\"></span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"audience-picker-toolbar\">\n  <span class=\"audience-searcher-placeholder\"></span>\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.config : depth0)) != null ? stack1.multiTenant : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  <button type=\"button\" class=\"add-audience-button\" is=\"coral-button\" variant=\"minimal\" icon=\"addCircle\" iconsize=\"S\">\n    "
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Create audience",{"name":"i18n","hash":{},"data":data}))
    + "\n  </button>\n</div>\n<ul class=\"list audience-picker-list-header\">\n  <li class=\"header\">\n    <div class=\"row fixed audienceListRow\">\n      <div class=\"cell middle select-item\">&nbsp;</div>\n      <div class=\"cell middle type\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Type",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <div class=\"cell middle name\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Name",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <div class=\"cell middle path\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Path",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <div class=\"cell middle source\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Source",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n      <div class=\"cell change-log middle\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Change Log",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n    </div>\n  </li>\n</ul>\n<ul class=\"list audience-picker-list\"></ul>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudiencePicker"]["DialogHeader"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return "    <span>("
    + container.escapeExpression(((helper = (helper = helpers.count || (depth0 != null ? depth0.count : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"count","hash":{},"data":data}) : helper)))
    + ")</span>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "      <button type=\"button\" class=\"done-button\" is=\"coral-button\" variant=\"primary\">"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Done",{"name":"i18n","hash":{},"data":data}))
    + "</button>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div class=\"tsdk-header-content\">\n  <span class=\"fullscreen-title-header\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Choose Audience",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.count : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n  <span class=\"action-toolbar\">\n    <button type=\"button\" class=\"fullscreen-button fullScreen-button\" is=\"coral-button\" variant=\"minimal\" icon=\"fullScreen\" iconsize=\"S\"\n            data-toggle=\"true\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Fullscreen",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n    <button type=\"button\" class=\"fullscreen-button fullScreenExit-button\" is=\"coral-button\" variant=\"minimal\" icon=\"fullScreenExit\" iconsize=\"S\"\n            data-toggle=\"false\" title=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Exit Fullscreen",{"name":"i18n","hash":{},"data":data}))
    + "\"></button>\n    <button type=\"button\" class=\"close-button\" is=\"coral-button\" variant=\"minimal\" coral-close>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"Cancel",{"name":"i18n","hash":{},"data":data}))
    + "</button>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.count : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </span>\n</div>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudiencePicker"]["Searcher"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<coral-search class=\"search-input\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Search",{"name":"i18n","hash":{},"data":data}))
    + "\" name=\"field\"></coral-search>\n";
},"useData":true});

this["TSDK"]["UI"]["Templates"]["AudiencePicker"]["TenantDropdown"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<coral-autocomplete name=\"Select\" class=\"tenant-dropdown\" placeholder=\""
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"Audience Folder",{"name":"i18n","hash":{},"data":data}))
    + "\" match=\"contains\"></coral-autocomplete>\r\n";
},"useData":true});