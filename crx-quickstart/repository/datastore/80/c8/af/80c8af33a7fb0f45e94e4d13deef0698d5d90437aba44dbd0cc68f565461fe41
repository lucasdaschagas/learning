/*!************************************************************************
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2015 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 **************************************************************************/

(function (s7ve, Granite) {
    "use strict";
    
    /**
     * Common gallery metadata to be referenced for gallery configuration 
     */
    var S7ICON_GALLERY_METADATA = {
        darkContent: [
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon1_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon2_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon3_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon4_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon5_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon6_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon7_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon8_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon9_dark_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon10_dark_up_touch.png"
        ],
        lightContent: [
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon1_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon2_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon3_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon4_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon5_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon6_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon7_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon8_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon9_light_up_touch.png",
            "/etc/dam/viewers/s7viewers/html5/images/v2/imagemap/ImageMapEffect_icon10_light_up_touch.png"
        ]
    };
    
    // External reference to make accessible when using older SDK that doesnâ€™t support metadata configuration
    s7ve.GalleryContent = S7ICON_GALLERY_METADATA;

    /**
     * This object contains supplemental modifier descriptors that allow
     * the AEM style editor to provide additional constraints that have
     * not been specified by the SDK. This object is merged with the SDK
     * model found in StyleModel.js when the editor initializes.
     */
    s7ve.StyleEditor.SUPPLEMENTAL_DESCRIPTORS = {
        fullscreenbutton: {
            style: {
                selectors: {
                    "s7fullscreenbutton[state][selected]": {
                        name: Granite.I18n.get("General"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                config: {}
                            },
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ]
                    },
                    "s7fullscreenbutton[state][selected][selected=false]": {
                        name: Granite.I18n.get(""),
                        models: [
                                ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("FullScreen Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7fullscreenbutton[state][selected][selected=true]": {
                        name: Granite.I18n.get(""),
                        models: [
                                ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Minimize Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        playpausebutton: {
            style: {
                selectors: {
                    "s7playpausebutton[state][selected]": {
                        name: Granite.I18n.get("General"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ]
                    },
                    "s7playpausebutton[state][selected][selected=true]:not([replay=true])": {
                        name: Granite.I18n.get(""),
                        models: [
                                ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Play Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7playpausebutton[state][selected][selected=false]:not([replay=true])": {
                        name: Granite.I18n.get(""),
                        models: [
                                ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Pause Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7playpausebutton[state][selected][replay=true][selected=true]": {
                        name: Granite.I18n.get(""),
                        models: [
                                ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Replay Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        videoscrubber: {
            style: {
                selectors: {
                    "s7controlbar .s7videoscrubber": {
                        name: Granite.I18n.get("Body"),
                        models: [
                        ],
                        selectors: {
                            "s7knob": {
                                name: Granite.I18n.get("Scrubber Knob"),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: true
                                            },
                                            "background-size": {
                                                hide: true
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            },
                            "s7track": {
                                name: Granite.I18n.get("Track Style"),
                                tip: Granite.I18n.get("Defines initial appearance of scrubber bar."),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7trackloaded": {
                                name: Granite.I18n.get("Track Loaded Style"),
                                tip: Granite.I18n.get("Defines loaded portion of scrubber bar shown only when you set Playback mode to <code>native</code> (default for Safari browser)."),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7trackplayed": {
                                name: Granite.I18n.get("Track Played Style"),
                                tip: Granite.I18n.get("Defines played portion of scrubber bar."),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        mutablevolume: {
            style: {
                tip: Granite.I18n.get("Component does not display on mobile devices where audio is controlled by device."),
                selectors: {
                    "s7controlbar .s7mutablevolume": {
                        name: Granite.I18n.get("General"),
                        models: [],
                        selectors: {
                            "s7mutebutton[state][selected]": {
                                name: Granite.I18n.get("Mute Button"),
                                models: [
                                    {
                                        model: "CSSSpriteModel",
                                        config: {}
                                    }
                                ]
                            },
                            "s7mutebutton[state][selected][selected=false]": {
                                name: Granite.I18n.get(""),
                                models: [
                                        ],
                                selectors: {
                                    "[state]": {
                                        name: Granite.I18n.get("Unmuted Button Style"),
                                        values: ["up", "over", "down", "disabled"],
                                        models: [
                                            {
                                                model: "CSSBackgroundModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                config: {}
                                            }
                                        ]
                                    }
                                }
                            },
                            "s7mutebutton[state][selected][selected=true]": {
                                name: Granite.I18n.get(""),
                                models: [
                                        ],
                                selectors: {
                                    "[state]": {
                                        name: Granite.I18n.get("Muted Button Style"),
                                        values: ["up", "over", "down", "disabled"],
                                        models: [
                                            {
                                                model: "CSSBackgroundModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                config: {}
                                            }
                                        ]
                                    }
                                }
                            },
                            "s7track": {
                                name: Granite.I18n.get("Track Style"),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7filledtrack": {
                                name: Granite.I18n.get("Filled Track Style"),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7verticalvolume": {
                                name: Granite.I18n.get("Vertical Volume"),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }

                                ],
                                selectors: {
                                    "s7knob": {
                                        name: Granite.I18n.get("Knob"),
                                        models: [
                                            {
                                                model: "CSSBackgroundModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                config: {}
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        flyoutzoomview: {
            style: {
                selectors: {
                    "s7flyoutzoomview": {
                        name: Granite.I18n.get("Body"),
                        models: [
                        ],
                        selectors: {
                            "s7tip": {
                                name: Granite.I18n.get("Tip"),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSFontModel",
                                        config: {}
                                    }
                                ]
                            },
                            "s7highlight": {
                                name: Granite.I18n.get("Highlight"),
                                tip: Granite.I18n.get("Settings require you to set Highlight mode to <code>highlight</code> and Overlay to <code>off</code>."),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            },
                            "s7overlay": {
                                name: Granite.I18n.get("Overlay"),
                                tip: Granite.I18n.get("Settings require you to set Highlight mode to <code>highlight</code> and overlay to <code>on</code>."),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-repeat": {
                                                hide: false
                                            },
                                            "background-size": {
                                                hide: false
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7cursor": {
                                name: Granite.I18n.get("Cursor"),
                                tip: Granite.I18n.get("Settings require you to set Highlight mode to <code>cursor</code>."),
                                models: [
                                    {
                                        model: "CSSSizeModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        swatches: {
            style: {
                selectors: { /* SelectorsObject */
                    "s7swatches": { /* SelectorDefinition */
                        name: Granite.I18n.get("Body"),
                        models: [ /* ModelsArray */
                            {
                                model: "CSSSizeModel",
                                config: {}
                            },
                            {
                                model: "CSSBackgroundModel",
                                config: {
                                    "background-repeat": {
                                        hide: false
                                    },
                                    "background-size": {
                                        hide: false
                                    }
                                }
                            },
                            {
                                model: "CSSBoxShadowModel",
                                config: {}
                            }
                        ],
                        selectors: { /* SelectorsObject */
                            "s7thumb": { /* SelectorDefinition */
                                name: Granite.I18n.get("Thumb Style"),
                                models: [ /* ModelsArray */
                                    {
                                        model: "CSSSizeModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-image": {
                                                hide: true
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {
                                            "border-width": {
                                                max: 2
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7scrollleftbutton[state]": {
                                name: Granite.I18n.get("Scroll Left Button"),
                                tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
                                models: [
                                    {
                                        model: "CSSSpriteModel",
                                        config: {}
                                    }
                                ],
                                selectors: {
                                    "[state]": {
                                        name: Granite.I18n.get(""),
                                        values: ["up", "over", "down", "disabled"],
                                        models: [
                                            {
                                                model: "CSSBackgroundModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                config: {}
                                            }
                                        ]
                                    }
                                }
                            },
                            "s7scrollrightbutton[state]": {
                                name: Granite.I18n.get("Scroll Right Button"),
                                tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
                                models: [
                                    {
                                        model: "CSSSpriteModel",
                                        config: {}
                                    }
                                ],
                                selectors: {
                                    "[state]": {
                                        name: Granite.I18n.get(""),
                                        values: ["up", "over", "down", "disabled"],
                                        models: [
                                            {
                                                model: "CSSBackgroundModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                config: {}
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        interactiveswatches: {
            style: {
                selectors: {
                    "s7interactiveswatches": {
                        name: Granite.I18n.get("Body"),
                        models: [
                        ],
                        selectors: {
                            "s7banner": {
                                name: Granite.I18n.get("Banner Label"),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSFontModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7interactiveswatches .s7swatches .s7thumb": {
                        name: Granite.I18n.get("Thumb Style"),
                        models: [
                            {
                                model: "CSSSizeModel",
                                config: {}
                            },
                            {
                                model: "CSSBackgroundModel",
                                config: {
                                    "background-image": {
                                        hide: true
                                    }
                                }
                            },
                            {
                                model: "CSSBoxShadowModel",
                                config: {}
                            },
                            {
                                model: "CSSBorderModel",
                                config: {
                                    "border-width": {
                                        max: 2
                                    }
                                }
                            }
                        ]
                    },
                    "s7interactiveswatches .s7swatches": {
                        name: Granite.I18n.get("Scroll Area"),
                        models: [
                            {
                                model: "CSSBackgroundModel",
                                config: {
                                    "background-image": {
                                        hide: true
                                    }
                                }
                            }
                        ],
                        selectors: {
                            "s7label": {
                                name: Granite.I18n.get("Thumb Cell Label"),
                                models: [
                                    {
                                        model: "CSSFontModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7interactiveswatches .s7scrollleftbutton[state]": {
                        name: Granite.I18n.get("Scroll Left Button"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get(""),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7interactiveswatches .s7scrollrightbutton[state]": {
                        name: Granite.I18n.get("Scroll Right Button"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get(""),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7interactiveswatches .s7scrollupbutton[state]": {
                        name: Granite.I18n.get("Scroll Up Button"),
                        tip: Granite.I18n.get("Component displays only on desktop browsers."),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get(""),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    },
                    "s7interactiveswatches .s7scrolldownbutton[state]": {
                        name: Granite.I18n.get("Scroll Down Button"),
                        tip: Granite.I18n.get("Component displays only on desktop browsers."),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get(""),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        swatches2: {
            style: {
                selectors: { /* SelectorsObject */
                    "s7swatches2": { /* SelectorDefinition */
                        name: Granite.I18n.get("Body"),
                        models: [ /* ModelsArray */
                            {
                                model: "CSSBackgroundModel",
                                config: {
                                    "background-repeat": {
                                        hide: false
                                    },
                                    "background-size": {
                                        hide: false
                                    }
                                }
                            },
                            {
                                model: "CSSBoxShadowModel",
                                config: {}
                            }
                        ],
                        selectors: { /* SelectorsObject */
                            "s7thumb": { /* SelectorDefinition */
                                name: Granite.I18n.get("Thumb Style"),
                                models: [ /* ModelsArray */
                                    {
                                        model: "CSSSizeModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {
                                            "background-image": {
                                                hide: true
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {
                                            "border-width": {
                                                max: 2
                                            }
                                        }
                                    }
                                ]
                            },
                            "s7previousbutton[state]": {
                                models: [],
								selectors: {
									"[state]": {
										name: Granite.I18n.get("Previous Button"),
										tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
										values: ["up", "over", "down", "disabled"],
										models: [
											{
												model: "CSSBackgroundModel",
												config: {}
											},
											{
												model: "CSSBoxShadowModel",
												config: {}
											},
											{
												model: "CSSBorderModel",
												config: {}
											}
										]
									}
								}
                            },
                            "s7nextbutton[state]": {
                                models: [],
								selectors: {
									"[state]": {
										name: Granite.I18n.get("Next Button"),
										tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
										values: ["up", "over", "down", "disabled"],
										models: [
											{
												model: "CSSBackgroundModel",
												config: {}
											},
											{
												model: "CSSBoxShadowModel",
												config: {}
											},
											{
												model: "CSSBorderModel",
												config: {}
											}
										]
									}
								}
                            }
                        }
                    }
                }
            }
        },		
        socialshare: {
            style: {
                tip: Granite.I18n.get("Component is displayed only when you enable Social features in viewer preset."),
                selectors: {
                    "s7socialshare .s7button.s7socialbutton[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        linkshare: {
            style: {
                tip: Granite.I18n.get("Component is displayed only when you enable Social features in viewer preset."),
                selectors: {
                    "s7button.s7linkshare[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        facebookshare: {
            style: {
                tip: Granite.I18n.get("Component is displayed only when you enable Social features in viewer preset."),
                selectors: {
                    "s7button.s7facebookshare[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        embedshare: {
            style: {
                tip: Granite.I18n.get("Component is displayed only when you enable Social features in viewer preset."),
                selectors: {
                    "s7button.s7embedshare[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        twittershare: {
            style: {
                tip: Granite.I18n.get("Component is displayed only when you enable Social features in viewer preset."),
                selectors: {
                    "s7button.s7twittershare[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        panleftbutton: {
            style: {
                tip: Granite.I18n.get("Component is displayed only on desktop browsers."),
                selectors: {
                    "s7spinbuttons .s7button.s7panleftbutton[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                config: { "left": {min: -300}, "right": {min: -300}, "top": { insert: true, min: -300}}
                            },
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        panrightbutton: {
            style: {
                tip: Granite.I18n.get("Component is displayed only on desktop browsers."),
                selectors: {
                    "s7spinbuttons .s7button.s7panrightbutton[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                config: { "left": {min: -300}, "right": {min: -300}, "top": { insert: true, min: -300}}
                            },
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        setindicator: {
            style: {
                selectors: {
                    "s7setindicator": {
                        name: Granite.I18n.get("Set Body"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                metadata: {className: 'setIndicatorSetPosition'},
                                config: {}
                            }
                        ]
                    },
                    "s7setindicator[mode='dotted']": {
                        name: Granite.I18n.get("Dotted Body"),
                        models: [],
                        selectors: {
                            "s7dot": {
                                name: Granite.I18n.get("Dot Layout"),
                                models: [
                                ],
                                selectors: {
                                    "[state]": {
                                        name: Granite.I18n.get("Dotted Style"),
                                        values: ["selected", "unselected"],
                                        models: [
                                            {
                                                model: "CSSSizeModel",
                                                metadata: {className: 'setIndicatorDottedSize'},
                                                config: {
                                                    width: {
                                                        max: 150
                                                    },
                                                    height: {
                                                        max: 150
                                                    }
                                                }
                                            },
                                            {
                                                model: "CSSBackgroundModel",
                                                metadata: {className: 'setIndicatorDottedBackground'},
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                metadata: {className: 'setIndicatorDottedShadow'},
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                metadata: {className: 'setIndicatorDottedBorder'},
                                                config: {}
                                            }
                                        ]
                                    }
                                }

                            }
                        }
                    },
                    "s7setindicator[mode='numeric']": {
                        name: Granite.I18n.get("Numeric Body"),
                        models: [
                        ],
                        selectors: {
                            "s7dot": {
                                name: Granite.I18n.get("Numeric Layout"),
                                models: [
                                ],
                                selectors: {
                                    "[state]": {
                                        name: Granite.I18n.get("Numeric Style"),
                                        values: ["selected", "unselected"],
                                        models: [
                                            {
                                                model: "CSSSizeModel",
                                                metadata: {className: 'setIndicatorNumericSize'},
                                                config: {
                                                    width: {
                                                        max: 150
                                                    },
                                                    height: {
                                                        max: 150
                                                    }
                                                }
                                            },
                                            {
                                                model: "CSSBackgroundModel",
                                                metadata: {className: 'setIndicatorNumericBackground'},
                                                config: {}
                                            },
                                            {
                                                model: "CSSBoxShadowModel",
                                                metadata: {className: 'setIndicatorNumericShadow'},
                                                config: {}
                                            },
                                            {
                                                model: "CSSBorderModel",
                                                metadata: {className: 'setIndicatorNumericBorder'},
                                                config: {}
                                            },
                                            {
                                                model: "CSSFontModel",
                                                config: {}
                                            }
                                        ]
                                    }
                                }

                            }
                        }
                    }
                }
            }
        },
        imagemapeffect: {
            style: {
                selectors: {
                    "s7imagemapeffect": {
                        name: Granite.I18n.get("ImageMapEffect"),
                        models: [

                        ],
                        selectors: {
                            "s7icon": {
                                name: Granite.I18n.get("Icon"),
                                tip: Granite.I18n.get("Defines hotspot appearance."),
                                values: ["default", "active"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {},
                                        metadata: {gallery: S7ICON_GALLERY_METADATA, className: 'imageMapEffectIconBackground'}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {},
                                        metadata: {className: 'imageMapEffectIconShadow'}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {},
                                        metadata: {className: 'imageMapEffectIconBorder'}
                                    }
                                ]
                            },
                            "s7region": {
                                name: Granite.I18n.get("Region"),
                                tip: Granite.I18n.get("Defines image map region appearance."),
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        metadata: {className: 'imageMapEffectRegionBackground'},
                                        config: {
                                            "background-image": {
                                                hide: true
                                            },
                                            "background-repeat": {
                                                hide: true
                                            },
                                            "background-size": {
                                                hide: true
                                            }
                                        }
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        metadata: {className: 'imageMapEffectRegionBorder'},
                                        config: {}
                                    }

                                ]
                            }
                        }
                    }
                }
            }
        },
        zoominbutton: {
            style: {
                tip: Granite.I18n.get("Component is hidden on phone devices."),
                selectors: {
                    "s7button.s7zoominbutton[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                config: {}
                            },
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        zoomoutbutton: {
            style: {
                tip: Granite.I18n.get("Component is hidden on phone devices."),
                selectors: {
                    "s7button.s7zoomoutbutton[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                config: {}
                            },
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        zoomresetbutton: {
            style: {
                selectors: {
                    "s7button.s7zoomresetbutton[state]": {
                        name: Granite.I18n.get("Layout"),
                        models: [
                            {
                                model: "CSSPositionModel",
                                config: {}
                            },
                            {
                                model: "CSSSpriteModel",
                                config: {}
                            }
                        ],
                        selectors: {
                            "[state]": {
                                name: Granite.I18n.get("Style"),
                                values: ["up", "over", "down", "disabled"],
                                models: [
                                    {
                                        model: "CSSBackgroundModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBoxShadowModel",
                                        config: {}
                                    },
                                    {
                                        model: "CSSBorderModel",
                                        config: {}
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        videotime: {
            style: {
                selectors: {
                    "s7videotime": {
                        name: Granite.I18n.get("Style"),
                        models: [
                            {
                                model: "CSSFontModel",
                                config: {}
                            }
                        ]
                    }
                }
            }
        }
    };
    
    /**
     * Overlay descriptor object for viewer specific configuration. This allows updating particular 
     * properties for particular viewers by making updates to the existing component descriptor object
     */
    s7ve.StyleEditor.VIEWER_DESCRIPTOR_OVERLAY = {
        s7flyoutviewer: {
            swatches: {
                style: {
                    selectors: {
                        "s7swatches": {
                            models: [
                                {
                                    model: "CSSSizeModel",
                                    config: {
                                        "width": {
                                            hide: true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        s7mixedmediaviewer: {
            zoominbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on image assets when you set Zoom mode to <code>continuous</code> or <code>auto</code>. Component is hidden on phone devices.")
                }
            },
            zoomoutbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on image assets when you set Zoom mode to <code>continuous</code> or <code>auto</code>. Component is hidden on phone devices.")
                }
            },
            zoomresetbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on image assets when you set Zoom mode to <code>continuous</code> or <code>auto</code>.")
                }
            },
            panleftbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on desktop browsers and only for Spin assets.")
                }
            },
            panrightbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on desktop browsers and only for Spin assets.")
                }
            },
            flyoutzoomview: {
                style: {
                    tip: Granite.I18n.get("Component requires you to set Viewer mode to <code>inline</code> or <code>auto</code>. When set to <code>auto</code>, FlyoutZoom displays only on desktop browsers.")
                }
            }
        },
        s7carouselviewer: {
            setindicator: {
                style: {
                    tip: Granite.I18n.get("Component displays only when set contains multiple images. Dotted requires you to set SetIndicator mode to <code>dotted</code>. Numeric requires you to set SetIndicator mode to <code>numeric</code>.")
                }
            }
        }
    };
    
    /**
     * Replace descriptor object for viewer specific configuration. This will replace particular component
     * descriptor objects for particular viewers.
     */
    s7ve.StyleEditor.VIEWER_DESCRIPTOR_REPLACE = {
        s7carouselviewer: {
            panleftbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on desktop browsers and only when set contains multiple images."),
                    selectors: {
                        "s7button.s7panleftbutton[state]": {
                            name: Granite.I18n.get("Layout"),
                            models: [
                                {
                                    model: "CSSPositionModel",
                                    metadata: {className: 'panleftbuttonLayoutPosition'},
                                    config: {}
                                },
                                {
                                    model: "CSSSpriteModel",
                                    metadata: {className: 'panleftbuttonLayoutSprite'},
                                    config: {}
                                }
                            ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            metadata: {className: 'panleftbuttonStyleBackground'},
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            metadata: {className: 'panleftbuttonStyleShadow'},
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            metadata: {className: 'panleftbuttonStyleBorder'},
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            panrightbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on desktop browsers and only when set contains multiple images."),
                    selectors: {
                        "s7button.s7panrightbutton[state]": {
                            name: Granite.I18n.get("Layout"),
                            models: [
                                {
                                    model: "CSSPositionModel",
                                    config: {}
                                },
                                {
                                    model: "CSSSpriteModel",
                                    config: {}
                                }
                            ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            metadata: {className: 'panrightbuttonStyleBorder'},
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        s7zoomverticalviewer: {
            panleftbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on desktop browsers and only when set contains multiple images."),
                    selectors: {
                        "s7button.s7panleftbutton[state]": {
                            name: Granite.I18n.get("Layout"),
                            models: [
                                {
                                    model: "CSSPositionModel",
                                    metadata: {className: 'panleftbuttonLayoutPosition'},
                                    config: {}
                                },
                                {
                                    model: "CSSSpriteModel",
                                    metadata: {className: 'panleftbuttonLayoutSprite'},
                                    config: {}
                                }
                            ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            metadata: {className: 'panleftbuttonStyleBackground'},
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            metadata: {className: 'panleftbuttonStyleShadow'},
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            metadata: {className: 'panleftbuttonStyleBorder'},
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            panrightbutton: {
                style: {
                    tip: Granite.I18n.get("Component displays only on desktop browsers and only when set contains multiple images."),
                    selectors: {
                        "s7button.s7panrightbutton[state]": {
                            name: Granite.I18n.get("Layout"),
                            models: [
                                {
                                    model: "CSSPositionModel",
                                    config: {}
                                },
                                {
                                    model: "CSSSpriteModel",
                                    config: {}
                                }
                            ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            metadata: {className: 'panrightbuttonStyleBorder'},
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },		
        s7mixedmediaviewer: {
            "_colorSwatches": {
                displayName: "Swatches - " + Granite.I18n.get("Color"),
                style: {
                    selectors: {
                        "s7colorswatches .s7swatches": { /* SelectorDefinition */
                            sdkClassName: "s7swatches",
                            name: Granite.I18n.get("Body"),
                            tip: Granite.I18n.get("Component displays only if you set Zoom mode to <code>continuous</code> or <code>auto</code>. When set to <code>auto</code>, component displays on mobile devices only."),
                            models: [ /* ModelsArray */
                                {
                                    model: "CSSBackgroundModel",
                                    config: {
                                        "background-repeat": {
                                            hide: false
                                        },
                                        "background-size": {
                                            hide: false
                                        }
                                    }
                                },
                                {
                                    model: "CSSBoxShadowModel",
                                    config: {}
                                }
                            ],
                            selectors: { /* SelectorsObject */
                                "s7thumb": { /* SelectorDefinition */
                                    name: Granite.I18n.get("Thumb Style"),
                                    models: [ /* ModelsArray */
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {
                                                "background-image": {
                                                    hide: true
                                                }
                                            }
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            config: {
                                                "border-width": {
                                                    max: 2
                                                }
                                            }
                                        }
                                    ]
                                },
                                "s7scrollleftbutton[state]": {
                                    name: Granite.I18n.get(""),
                                    models: [],
                                    selectors: {
                                        "[state]": {
                                            name: Granite.I18n.get("Scroll Left Button"),
                                            tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
                                            values: ["up", "over", "down", "disabled"],
                                            models: [
                                                {
                                                    model: "CSSBackgroundModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBoxShadowModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBorderModel",
                                                    config: {}
                                                }
                                            ]
                                        }
                                    }
                                },
                                "s7scrollrightbutton[state]": {
                                    name: Granite.I18n.get(""),
                                    models: [],
                                    selectors: {
                                        "[state]": {
                                            name: Granite.I18n.get("Scroll Right Button"),
                                            tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
                                            values: ["up", "over", "down", "disabled"],
                                            models: [
                                                {
                                                    model: "CSSBackgroundModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBoxShadowModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBorderModel",
                                                    config: {}
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "_swatches": {
                displayName: "Swatches - " + Granite.I18n.get("Main"),
                style: {
                    selectors: { /* SelectorsObject */
                        "s7swatches[id*=_swatches]": { /* SelectorDefinition */
                            sdkClassName: "s7swatches",
                            name: Granite.I18n.get("Body"),
                            models: [ /* ModelsArray */
                                {
                                    model: "CSSSizeModel",
                                    config: {}
                                },
                                {
                                    model: "CSSBackgroundModel",
                                    config: {
                                        "background-repeat": {
                                            hide: false
                                        },
                                        "background-size": {
                                            hide: false
                                        }
                                    }
                                },
                                {
                                    model: "CSSBoxShadowModel",
                                    config: {}
                                }
                            ],
                            selectors: { /* SelectorsObject */
                                "s7thumb": { /* SelectorDefinition */
                                    name: Granite.I18n.get("Thumb Style"),
                                    models: [ /* ModelsArray */
                                        {
                                            model: "CSSSizeModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {
                                                "background-image": {
                                                    hide: true
                                                }
                                            }
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            config: {
                                                "border-width": {
                                                    max: 2
                                                }
                                            }
                                        }
                                    ]
                                },
                                "s7scrollleftbutton[state]": {
                                    name: Granite.I18n.get(""),
                                    models: [],
                                    selectors: {
                                        "[state]": {
                                            name: Granite.I18n.get("Scroll Left Button"),
                                            tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
                                            values: ["up", "over", "down", "disabled"],
                                            models: [
                                                {
                                                    model: "CSSBackgroundModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBoxShadowModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBorderModel",
                                                    config: {}
                                                }
                                            ]
                                        }
                                    }
                                },
                                "s7scrollrightbutton[state]": {
                                    name: Granite.I18n.get(""),
                                    models: [],
                                    selectors: {
                                        "[state]": {
                                            name: Granite.I18n.get("Scroll Right Button"),
                                            tip: Granite.I18n.get("Component displays only on desktop browsers and only when set is large enough to scroll."),
                                            values: ["up", "over", "down", "disabled"],
                                            models: [
                                                {
                                                    model: "CSSBackgroundModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBoxShadowModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBorderModel",
                                                    config: {}
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            _fullScreenButton: {
                displayName: "FullScreenButton - " + Granite.I18n.get("Image"),
                style: {
                    selectors: {
                        "s7fullscreenbutton[id*=_fullScreenButton][state][selected]": {
                            name: Granite.I18n.get("General"),
                            models: [
                                {
                                    model: "CSSPositionModel",
                                    config: {}
                                },
                                {
                                    model: "CSSSpriteModel",
                                    config: {}
                                }
                            ]
                        },
                        "s7fullscreenbutton[id*=_fullScreenButton][state][selected][selected=false]": {
                            name: Granite.I18n.get(""),
                            models: [
                                    ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("FullScreen Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        },
                        "s7fullscreenbutton[id*=_fullScreenButton][state][selected][selected=true]": {
                            name: Granite.I18n.get(""),
                            models: [
                                    ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("Minimize Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            _videofullScreenButton: {
                displayName: "FullScreenButton - " + Granite.I18n.get("Video"),
                style: {
                    selectors: {
                        "s7fullscreenbutton[id*=_videofullScreenButton][state][selected]": {
                            name: Granite.I18n.get("General"),
                            models: []
                        },
                        "s7fullscreenbutton[id*=_videofullScreenButton][state][selected][selected=false]": {
                            name: Granite.I18n.get(""),
                            models: [
                                    ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("FullScreen Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        },
                        "s7fullscreenbutton[id*=_videofullScreenButton][state][selected][selected=true]": {
                            name: Granite.I18n.get(""),
                            models: [
                                    ],
                            selectors: {
                                "[state]": {
                                    name: Granite.I18n.get("Minimize Style"),
                                    values: ["up", "over", "down", "disabled"],
                                    models: [
                                        {
                                            model: "CSSBackgroundModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBoxShadowModel",
                                            config: {}
                                        },
                                        {
                                            model: "CSSBorderModel",
                                            config: {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            setindicator: {
                style: {
                    selectors: {
                        "s7setindicator": {
                            name: Granite.I18n.get("Set Body"),
                            models: []
                        },
                        "s7setindicator[mode='dotted']": {
                            name: Granite.I18n.get("Dotted Body"),
                            models: [],
                            selectors: {
                                "s7dot": {
                                    name: Granite.I18n.get("Dot Layout"),
                                    models: [
                                    ],
                                    selectors: {
                                        "[state]": {
                                            name: Granite.I18n.get("Dotted Style"),
                                            tip: Granite.I18n.get("Component displays only on mobile devices and when set is large enough to scroll."),
                                            values: ["selected", "unselected"],
                                            models: [
                                                {
                                                    model: "CSSSizeModel",
                                                    config: {
                                                        width: {
                                                            max: 150
                                                        },
                                                        height: {
                                                            max: 150
                                                        }
                                                    }
                                                },
                                                {
                                                    model: "CSSBackgroundModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBoxShadowModel",
                                                    config: {}
                                                },
                                                {
                                                    model: "CSSBorderModel",
                                                    config: {}
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            /** 
             * Mixed media viewer defines videotime under s7controlbar
             */
            videotime: {
                style: {
                    selectors: {
                        "s7controlbar .s7videotime": {
                            name: Granite.I18n.get("Style"),
                            models: [
                                {
                                    model: "CSSFontModel",
                                    config: {}
                                }
                            ]
                        }
                    }
                }
            }
        },
        "s7zoomviewer": {
            // This will remove 'setindicator' from component list in imageset viewer
            "setindicator": {}
        }
    };
    
    /**
     * CQ-104103: Temporary patch for viewers package
     */
    s7ve.StyleEditor.SDK_patch = function (s7sdk) {
        s7sdk.css.BoxShadowProperty.prototype.cssValue = function () {
            var color = this.color.cssValue();
            return this.type == "none" ? this.type : (this.type + " " + this.horizontal + "px " + this.vertical + "px " + this.blur + "px " + this.spread + "px " + color);
        };
    };
    
}(window.s7ve, window.Granite));