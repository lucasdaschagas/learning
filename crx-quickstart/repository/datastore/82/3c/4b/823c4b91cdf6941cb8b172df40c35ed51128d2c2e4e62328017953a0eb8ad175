<%@page session="false"%><%--
  ADOBE CONFIDENTIAL
  __________________

   Copyright 2013 Adobe Systems Incorporated
   All Rights Reserved.

  NOTICE:  All information contained herein is, and remains
  the property of Adobe Systems Incorporated and its suppliers,
  if any.  The intellectual and technical concepts contained
  herein are proprietary to Adobe Systems Incorporated and its
  suppliers and are protected by trade secret or copyright law.
  Dissemination of this information or reproduction of this material
  is strictly forbidden unless prior written permission is obtained
  from Adobe Systems Incorporated.

  ==============================================================================

  Address Book component

  Script rendering an address based on request attributes.

  ==============================================================================

--%><%@include file="/libs/foundation/global.jsp"%><%
%><%@ page import="java.util.List,
		org.apache.commons.lang.StringUtils,
        com.day.cq.i18n.I18n,
        java.util.Locale,
        java.util.ResourceBundle,
        com.adobe.cq.address.api.Address" %><%

    boolean showUseAddressButton = properties.get("showUseAddressButton", false);
    boolean showMakeDefaultAddressButton = properties.get("showMakeDefaultAddressButton", false);
    boolean showUpdateAddressButton = properties.get("showUpdateAddressButton", false);
    boolean showDeleteAddressButton = properties.get("showDeleteAddressButton", false);

    String prefix = (request.getAttribute("prefix") != null)? (String) request.getAttribute("prefix") : ""; // e.g. billing.
    String jsPrefix = prefix.replaceAll("\\.", "_"); // e.g. billing_
    String prefixTitle = (prefix.endsWith("."))? prefix.substring(0, prefix.lastIndexOf(".")) : "";  // e.g. billing
    prefixTitle += " ";
    String path = (request.getAttribute(prefix + Address.PARAM_ADDRESS_PATH) != null)? (String) request.getAttribute(prefix + Address.PARAM_ADDRESS_PATH) : "";
    boolean isDefault = (request.getAttribute("isDefault") != null)? (Boolean) request.getAttribute("isDefault") : false;
    String firstname = (request.getAttribute(prefix + Address.FIRST_NAME) != null)? (String) request.getAttribute(prefix + Address.FIRST_NAME) : "";
    String lastname = (request.getAttribute(prefix + Address.LAST_NAME) != null)? (String) request.getAttribute(prefix + Address.LAST_NAME) : "";
    String street1 = (request.getAttribute(prefix + Address.STREET_LINE1) != null)? (String) request.getAttribute(prefix + Address.STREET_LINE1) : "";
    String street2 = (request.getAttribute(prefix + Address.STREET_LINE2) != null)? (String) request.getAttribute(prefix + Address.STREET_LINE2) : "";
    String city = (request.getAttribute(prefix + Address.CITY) != null)? (String) request.getAttribute(prefix + Address.CITY) : "";
    String state = (request.getAttribute(prefix + Address.STATE) != null)? (String) request.getAttribute(prefix + Address.STATE) : "";
    String zip = (request.getAttribute(prefix + Address.ZIP_CODE) != null)? (String) request.getAttribute(prefix + Address.ZIP_CODE) : "";
    String country = (request.getAttribute(prefix + Address.COUNTRY) != null)? (String) request.getAttribute(prefix + Address.COUNTRY) : "";
    boolean addressIsEmpty = "".equals(firstname+lastname+street1+street2+city+state+zip+country);

    boolean showText = (request.getAttribute("showText") != null)? (Boolean) request.getAttribute("showText") : false;
    boolean emptyAddress = "".equals(firstname + lastname + street1 + street2 + city + state + zip + country);
    boolean showFields = (request.getAttribute("showFields") != null)? (Boolean) request.getAttribute("showFields") : false;
    boolean showControls = (request.getAttribute("showControls") != null)? (Boolean) request.getAttribute("showControls") : false;
    boolean showSelect = (request.getAttribute("showSelect") != null)? (Boolean) request.getAttribute("showSelect") : false;

    String escapedAddressType = xssAPI.encodeForHTMLAttr(properties.get("addressType",String.class));

    final Locale pageLocale = currentPage.getLanguage(true);
    final ResourceBundle bundle = slingRequest.getResourceBundle(pageLocale);
    I18n i18n = new I18n(bundle);

    String required = StringUtils.join(properties.get("required", String[].class), ",");
    if (required == null) {
        required = "";
    }

%><div class="address" data-address-path="<%=xssAPI.encodeForHTMLAttr(path)%>">
    <div class="address-fields">

        <cq:include script="countries.jsp"/><%

        List<String> countryList = (List<String>) request.getAttribute("countries");

        // display the address as text and its hidden input fields
        if (showText) {
            String countryValue = " ";
            for (String countryRecord : countryList) {
                String[] parts = countryRecord.split("=");
                if (parts.length == 2 && parts[0].equalsIgnoreCase(country)) {
                    countryValue = parts[1];
                    break;
                }
            }
            if (!emptyAddress) {

    %><div class="form_row">
            <div class="form_rightcol">
                <div id="<%=escapedAddressType%>_address_confirmation_first_name" class="firstname"><%= xssAPI.encodeForHTML(firstname != null ? firstname : " ") %></div>
                <div id="<%=escapedAddressType%>_address_confirmation_last_name" class="lastname"><%= xssAPI.encodeForHTML(lastname != null ? lastname : " ") %></div>
            </div>
            <div class="form_rightcol">
                <div class="street1"><%= xssAPI.encodeForHTML(street1 != null ? street1 : " ") %></div>
            </div>
            <div class="form_rightcol">
                <div class="street2"><%= xssAPI.encodeForHTML(street2 != null ? street2 : " ") %></div>
            </div>
            <div class="form_rightcol">
                <div class="city"><%= xssAPI.encodeForHTML(city != null ? city : " ") %></div>
            </div>
            <div class="form_rightcol">
                <div class="state"><%= xssAPI.encodeForHTML(state != null ? state : " ") %></div>
                <div class="zip"><%= xssAPI.encodeForHTML(zip != null ? zip : " ") %></div>
            </div>
            <div class="form_rightcol">
                <div class="country"><%= xssAPI.encodeForHTML(countryValue) %></div>
            </div>
        </div><%


            }

        %><input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.PARAM_ADDRESS_PATH%>" value="<%= xssAPI.encodeForHTMLAttr(path) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.FIRST_NAME%>" value="<%= xssAPI.encodeForHTMLAttr(firstname) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.LAST_NAME%>" value="<%= xssAPI.encodeForHTMLAttr(lastname) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.STREET_LINE1%>" value="<%= xssAPI.encodeForHTMLAttr(street1) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.STREET_LINE2%>" value="<%= xssAPI.encodeForHTMLAttr(street2) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.CITY%>" value="<%= xssAPI.encodeForHTMLAttr(city) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.STATE%>" value="<%= xssAPI.encodeForHTMLAttr(state) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.ZIP_CODE%>" value="<%= xssAPI.encodeForHTMLAttr(zip) %>">
        <input type="hidden" name="<%=xssAPI.encodeForHTMLAttr(prefix)%><%=Address.COUNTRY%>" value="<%= xssAPI.encodeForHTMLAttr(country) %>"><%

        }

        // display a form to define an address
        if (showFields) {

    %><div class="form_row">
        <div id="<%=escapedAddressType%>_address_first_name" class="form_rightcol">
            <div class="form_row_description"><%=i18n.get("First Name")%></div>
            <input class="form_field form_field_text form_address_firstname"
                   name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.FIRST_NAME) %>"
                   value="<c:out value="<%= firstname != null ? firstname : "" %>"/>"
            size="16">
            <span class="form_rightcolmark"><%=required.contains(Address.FIRST_NAME) ? " *" : "&nbsp;" %></span>
        </div>
    </div>
        <div class="form_row">
            <div id="<%=escapedAddressType%>_address_last_name"class="form_rightcol">
                <div class="form_row_description"><%=i18n.get("Last Name")%></div>
                <input class="form_field form_field_text form_address_lastname"
                       name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.LAST_NAME) %>"
                       value="<c:out value="<%= lastname != null ? lastname : "" %>"/>"
                size="16">
                <span class="form_rightcolmark"><%=required.contains(Address.LAST_NAME) ? " *" : "&nbsp;" %></span>
            </div>
        </div>
        <div class="form_row">
            <div class="form_rightcol">
                <div class="form_row_description"><%=i18n.get("Street Address 1")%></div>
                <input class="form_field form_field_text form_address_street1"
                       name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.STREET_LINE1) %>"
                       value="<c:out value="<%= street1 != null ? street1 : "" %>"/>" >
                <span class="form_rightcolmark"><%= required.contains(Address.STREET_LINE1) ? " *" : "&nbsp;" %></span>
            </div>
        </div>
        <div class="form_row">
            <div class="form_rightcol">
                <div class="form_row_description"><%=i18n.get("Street Address 2")%></div>
                <input class="form_field form_field_text form_address_street2"
                       name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.STREET_LINE2) %>"
                       value="<c:out value="<%= street2 != null ? street2 : "" %>"/>" >
                <span class="form_rightcolmark"><%=required.contains(Address.STREET_LINE2) ? " *" : "&nbsp;" %></span>
            </div>
        </div>
        <div class="form_row">
            <div class="form_rightcol">
                <div class="form_row_description"><%=i18n.get("City")%></div>
                <input class="form_field form_field_text form_address_city"
                       name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.CITY) %>"
                       value="<c:out value="<%= city != null ? city : "" %>"/>" >
                <span class="form_rightcolmark"><%=required.contains(Address.CITY) ? " *" : "&nbsp;" %></span>
            </div>
        </div>
        <div class="form_row">
            <div class="form_rightcol">
                <div class="form_address_state">
                    <div class="form_row_description"><%=i18n.get("State / Province")%></div>
                    <input class="form_field form_field_text form_address_state"
                           name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.STATE) %>"
                           value="<c:out value="<%= state != null ? state : "" %>"/>" >
                    <span class="form_rightcolmark"><%=required.contains(Address.STATE) ? " *" : "&nbsp;" %></span>
                </div>
                <div class="form_address_zip">
                    <div class="form_row_description"><%=i18n.get("Postal / Zip Code")%></div>
                    <input class="form_field form_field_text form_address_zip"
                           name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.ZIP_CODE) %>"
                           value="<c:out value="<%= zip != null ? zip : "" %>"/>" >
                    <span class="form_rightcolmark"><%=required.contains(Address.ZIP_CODE) ? " *" : "&nbsp;" %></span>
                </div>
            </div>
        </div>
        <div class="form_row">
            <div class="form_rightcol">
                <div class="form_row_description"><%=i18n.get("Country")%></div>
                <select class="form_field form_field_select form_address_country"
                        name="<%= xssAPI.encodeForHTMLAttr(prefix + Address.COUNTRY) %>"><%
                    for (String countryRecord : countryList) {
                        String[] parts = countryRecord.split("=");
                        if (parts.length == 2) {
                            if (parts[0].equalsIgnoreCase(country)) {
                %><option value="<%= xssAPI.encodeForHTMLAttr(parts[0]) %>" selected><%= xssAPI.encodeForHTML(parts[1]) %></option><%
                } else {
                %><option value="<%= xssAPI.encodeForHTMLAttr(parts[0]) %>"><%= xssAPI.encodeForHTML(parts[1]) %></option><%
                            }
                        }
                    }%>
                </select>
                <span class="form_rightcolmark"><%=required.contains(Address.COUNTRY) ? " *" : "&nbsp;" %></span>
            </div>
        </div>
        <input type="hidden" name="_charset_" value="utf-8"><%

        }

    %></div><%

        // display buttons to manage the address
        if (showControls) {

            if (showUseAddressButton || showMakeDefaultAddressButton || showUpdateAddressButton || showDeleteAddressButton) {

                %><div class="addressbook-address-buttons"><%

                if (showMakeDefaultAddressButton) {

                    if (isDefault) {
                        %><span class="default-address-indicator"></span><span class="default-address-label"><%= i18n.get("Default") %></span><%
                    } else {
                        %><span class="make-default-address"><button type="submit" class="make-default-address-button"><%= i18n.get("Make default")%></button></span><%
                    }

                }
                if (showUpdateAddressButton) {

                    %><span class="update-address"><button type="submit" class="update-address-link"><%= i18n.get("Edit...")%></button></span><%

                }
                if (showDeleteAddressButton) {

                    %><span class="delete-address"><button type="submit" class="delete-address-button"><%= i18n.get("Delete")%></button></span><%

                }
                if (showUseAddressButton) {

                    %><span class="use-address"><button type="submit" class="use-address-button"><%= i18n.get("Use this Address")%></button></span><%

                }

                %></div><%

            }

        }

        // display the "select" control
        if (showSelect) {

            %><div><a class="select-address" href="#"><%= (addressIsEmpty) ? i18n.get("Select an address...") : i18n.get("Use a different address...")%></a></div><%

        }


        // client-side address validation

    %><script type="text/javascript">
        function <%=xssAPI.getValidJSToken(jsPrefix, "")%>address_fields_precheck(formId) {<%

                if (required.contains(Address.FIRST_NAME)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.FIRST_NAME)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.FIRST_NAME%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("First Name is required.")%>');
            return false;
        }<%

                }

                 if (required.contains(Address.LAST_NAME)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.LAST_NAME)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.LAST_NAME%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("Last Name is required.")%>');
            return false;
        }<%

                }
                if (required.contains(Address.STREET_LINE1)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.STREET_LINE1)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.STREET_LINE1%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("Street Address 1 is required.")%>');
            return false;
        }<%

                }
                if (required.contains(Address.STREET_LINE2)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.STREET_LINE2)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.STREET_LINE2%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("Street Address 2 is required.")%>');
            return false;
        }<%

                }
                if (required.contains(Address.CITY)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.CITY)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.CITY%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("City is required.")%>');
            return false;
        }<%

                }
                if (required.contains(Address.STATE)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.STATE)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.STATE%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("State / Province is required.")%>');
            return false;
        }<%

                }
                if (required.contains(Address.ZIP_CODE)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.ZIP_CODE)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.ZIP_CODE%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("Postal / Zip Code is required.")%>');
            return false;
        }<%

                }
                if (required.contains(Address.COUNTRY)) {

                    %>if (cq5forms_isEmpty(document.forms[formId].elements["<%=xssAPI.encodeForJSString(prefix + Address.COUNTRY)%>"])) {
            cq5forms_showMsg(formId,'<%=xssAPI.encodeForJSString(prefix) + Address.COUNTRY%>','<%=xssAPI.encodeForJSString(prefixTitle)%><%=i18n.get("Country is required.")%>');
            return false;
        }<%

                }

                %>return true;
        }

        // Locale-specific name ordering
        <%
            if (currentPage.getLanguage(false).toString().substring(0,2).toLowerCase().matches("ja|ko|zh")) {
        %>
            $("#<%=escapedAddressType%>_address_first_name").insertAfter("#<%=escapedAddressType%>_address_last_name");
            $("#<%=escapedAddressType%>_address_confirmation_first_name").insertAfter("#<%=escapedAddressType%>_address_confirmation_last_name");
            $("#<%=escapedAddressType%>_address_confirmation_last_name").append("&nbsp;");
        <%
            }
        %>
    </script>
</div>
